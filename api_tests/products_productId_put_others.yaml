# Test generated by RoostGPT for test products-artillery using AI Type Azure Open AI and AI Model roost-gpt4-32k


# Test generated for /products/{productId}_put for http method type PUT in artillery framework

# RoostTestHash=7b2a6b6959


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 10
  payload:
    path: "products_productId_put_others.csv"
    fields: ["id", "name", "description", "price"]
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: Non-Success API Responses
    flow:
    
      # Scenario: Invalid Product ID
      - post:
          url: "/products/InvalidProductId"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400 # Expecting a bad request error due to invalid product id
            - hasProperty: "error"
        think: 1

      # Scenario: Invalid Payload
      - post:
          url: "/products/{{ id }}"
          json:
            name: null # Invalid payload - name cannot be null
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400 # Expecting a bad request error due to invalid payload
            - hasProperty: "error"
        think: 1

      # Scenario: Product ID not found
      - post:
          url: "/products/NonExistentProductId" # Product ID that does not exist
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404 # Expecting a not found error as the product id does not exist
            - hasProperty: "error"
        think: 1

      # Scenario: Unauthorized access
      - post:
          url: "/products/{{ id }}"
          json:
            id: "{{ id }}"
            name: "{{ name }}"
            description: "{{ description }}"
            price: "{{ price }}"
          headers:
            Authorization: "Bearer IncorrectToken" # Incorrect authorization token
          expect:
            - statusCode: 401 # Expecting an unauthorized error due to invalid token
            - hasProperty: "error"
        think: 1
