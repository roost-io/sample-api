# ********RoostGPT********
# Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4

# Test generated for /validatePINRules_post for http method type POST in artillery framework
# RoostTestHash=44d8aeba76



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "validatePINRules_post_others.csv"
    fields:
      - "sourcePin"
    skipHeader: true

scenarios:
  - name: "Non-Success API Responses"
    flow:
      - post:
          url: "/invalidURL"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "test"
            botId: "test"
            accountId: "test"
          json:
            sourcePin: "{{ sourcePin }}"
      - expect:
          - statusCode: 404
          - hasProperty: "message"
      - think: 1

      - post:
          url: "/validatePINRules"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "test"
            botId: "test"
            accountId: "test"
          json:
            sourcePin: "invalid"
      - expect:
          - statusCode: 400
          - hasProperty: "message"
      - think: 1

      - post:
          url: "/validatePINRules"
          headers:
            Authorization: "Bearer InvalidToken"
            koreUserId: "test"
            botId: "test"
            accountId: "test"
          json:
            sourcePin: "{{ sourcePin }}"
      - expect:
          - statusCode: 401
          - hasProperty: "message"
      - think: 1

      - post:
          url: "/validatePINRules"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "test"
            botId: "test"
            accountId: "test"
          json:
            sourcePin: "{{ sourcePin }}"
      - expect:
          - statusCode: 200
          - hasProperty: "message"
      - think: 1
