# ********RoostGPT********
# Test generated by RoostGPT for test roost-test using AI Type Open AI and AI Model gpt-4

# Test generated for /validateUser_post for http method type POST in artillery framework
# RoostTestHash=6833318e32



# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "validateUser_post_others.csv"
    fields:
      - "sourcePin"
      - "targetPin"
  plugins:
    expect: {}
scenarios:
  - name: "Test non-successful API requests"
    flow:
      - log: "Testing invalid URL"
      - get:
          url: "/invalidURL"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Testing invalid payload"
      - post:
          url: "/validateUser"
          headers:
            koreUserId: "invalid"
            botId: "invalid"
            accountId: "invalid"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            sourcePin: "{{ sourcePin }}"
            targetPin: "{{ targetPin }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing unauthorized request"
      - post:
          url: "/validateUser"
          headers:
            koreUserId: "valid"
            botId: "valid"
            accountId: "valid"
            Authorization: "invalid"
          json:
            sourcePin: "{{ sourcePin }}"
            targetPin: "{{ targetPin }}"
          expect:
            - statusCode: 401
      - think: 1

      - log: "Testing missing required header"
      - post:
          url: "/validateUser"
          headers:
            koreUserId: "valid"
            botId: "valid"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            sourcePin: "{{ sourcePin }}"
            targetPin: "{{ targetPin }}"
          expect:
            - statusCode: 400
      - think: 1

      - log: "Testing missing required payload"
      - post:
          url: "/validateUser"
          headers:
            koreUserId: "valid"
            botId: "valid"
            accountId: "valid"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            targetPin: "{{ targetPin }}"
          expect:
            - statusCode: 400
      - think: 1
