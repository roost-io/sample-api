# Test generated by RoostGPT for test api-gpt4-turbo using AI Type Open AI and AI Model gpt-4-1106-preview


# Test generated for /icd/s2s/exchange/refundMessage_post for http method type POST in artillery framework

# RoostTestHash=19003958c4


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "refundMessage_post_others.csv"
    fields:
      - "headerVersion"
      - "messageContentType"
      - "messageContentEncoding"
      - "payloadHashValue"
      - "hashingAlgorithm"
      - "messageCorrelationContext"
      - "messageCorrelationId"
      - "messageSequenceNumber"
      - "messageSequenceSize"
      - "documentNumber"
      - "issuanceDate"
      - "refundIndicator"
      - "refundUID"
      - "remark"
      - "cityPointOfSale"
      - "areaPointOfSale"
      - "countryPointOfSale"
      - "issuerSystem"
      - "refundedFormOfPayment"
      - "amount"
      - "currency"
      - "maskedCardNumber"
      - "vendorCode"
      - "binNumber"
      - "lastFour"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Negative Test Scenarios for Refund Message API"
    flow:
      # Invalid Document Number Format
      - post:
          url: "/icd/s2s/exchange/refundMessage"
          json:
            messageHeader:
              headerVersion: "{{ headerVersion }}"
              messageContext:
                messageContentType: "{{ messageContentType }}"
                messageContentEncoding: "{{ messageContentEncoding }}"
                payloadHashValue: "{{ payloadHashValue }}"
                hashingAlgorithm: "{{ hashingAlgorithm }}"
              sourceContext:
                sourceId: "Refunds-Prod"
                applicationId: "RefundSvcs"
                transactionId: "00000000-0000-0000-0000-000000000000"
            payload:
              refundTransactions:
                documentNumber: "INVALID_DOC_NUMBER"
                issuanceDate: "{{ issuanceDate }}"
                refundIndicator: "{{ refundIndicator }}"
                refundUID: "{{ refundUID }}"
                refundedCoupons: ["1", "2"]
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasHeader: "Content-Type"
        think: 2
      # Missing Required Fields in the Payload
      - post:
          url: "/icd/s2s/exchange/refundMessage"
          json:
            messageHeader:
              headerVersion: "{{ headerVersion }}"
            # Incomplete payload to trigger a bad request
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasHeader: "Content-Type"
        think: 2
      # Unauthorized Access - Missing Token
      - post:
          url: "/icd/s2s/exchange/refundMessage"
          json:
            messageHeader:
              headerVersion: "{{ headerVersion }}"
              messageContext:
                messageContentType: "{{ messageContentType }}"
                messageContentEncoding: "{{ messageContentEncoding }}"
                payloadHashValue: "{{ payloadHashValue }}"
                hashingAlgorithm: "{{ hashingAlgorithm }}"
              sourceContext:
                sourceId: "Refunds-Test"
                applicationId: "RefundSvcs"
                transactionId: "{{ transactionId }}"
            payload:
              refundTransactions:
                documentNumber: "{{ documentNumber }}"
                issuanceDate: "{{ issuanceDate }}"
                refundIndicator: "{{ refundIndicator }}"
                refundUID: "{{ refundUID }}"
                refundedCoupons: ["1", "2", "3"]
          headers:
            Content-Type: "application/json"
          # Authorization header intentionally not included
          expect:
            - statusCode: 401
            - hasHeader: "Content-Type"
        think: 2
      # Invalid Endpoint URL
      - post:
          url: "/icd/s2s/exchange/invalidEndpoint" # Incorrect URL to simulate not found error
          json:
            messageHeader:
              headerVersion: "{{ headerVersion }}"
            payload:
              # Dummy payload for the invalid endpoint
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasHeader: "Content-Type"
        think: 2

