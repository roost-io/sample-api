# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-petstore-v3_clone using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /pet/findByStatus_get for http method type GET in artillery framework
# RoostTestHash=946f2905a0
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "pet_findByStatus_get_success.csv"
    delimiter: "^|^"
    skipHeader: true

scenarios:
  - name: Validate successful API responses for /pet/findByStatus
    flow:
      - log: "Scenario: Sending valid API requests to test /pet/findByStatus endpoint."
      
      # First API Request
      - log: "Request 1: Fetch pets with the status 'available'. Expecting a 200 response status and valid body schema."
      - get:
          url: "/pet/findByStatus?status=available"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
      - expect:
          statusCode: 200
          contentType: "application/json"
          properties:
            - "id"
            - "name"
            - "photoUrls"
            - "status"
            - "category"
      - think: 2

      # Second API Request
      - log: "Request 2: Fetch pets with the status 'pending'. Expecting a 200 response status and valid body schema."
      - get:
          url: "/pet/findByStatus?status=pending"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
      - expect:
          statusCode: 200
          contentType: "application/json"
          properties:
            - "id"
            - "name"
            - "photoUrls"
            - "status"
            - "category"
      - think: 2

      # Third API Request
      - log: "Request 3: Fetch pets with the status 'sold'. Expecting a 200 response status and valid body schema."
      - get:
          url: "/pet/findByStatus?status=sold"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
      - expect:
          statusCode: 200
          contentType: "application/json"
          properties:
            - "id"
            - "name"
            - "photoUrls"
            - "status"
            - "category"
      - think: 2
