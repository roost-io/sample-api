# Test generated by RoostGPT for test products-artillery using AI Type Azure Open AI and AI Model roost-gpt4-32k


# RoostTestHash=befb82c928

config:
  target: "{{ $processEnvironment.API_HOST }}"
  ensure:
    p99: 300
  plugins:
    expect: {}
  phases:
    - duration: 10
      arrivalRate: 3
  payload:
    path: "products_productId_delete_others.csv"
    fields:
      - "productId"
    skipHeader: true

scenarios:
  - name: "Invalid API usage"
    flow:
      - log: "Attempting to delete a product with an invalid productId"
        delete:
          url: "/products/{{ productId }}"
          headers:
            "{{#if SECURITY_SCHEMA.in === 'header' && SECURITY_SCHEMA.name}}{{ SECURITY_SCHEMA.name }}": "{{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: 404
        think: 1

      - log: "Deleting a product without providing authorization token"
        delete:
          url: "/products/{{ productId }}"
          headers:
            "{{#if SECURITY_SCHEMA.in === 'header' && SECURITY_SCHEMA.name}}{{ SECURITY_SCHEMA.name }}": ""
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: 401
        think: 1

      - log: "Deleting a non-existing product"
        delete:
          url: "/products/{{ productId }}"
          headers:
            "{{#if SECURITY_SCHEMA.in === 'header' && SECURITY_SCHEMA.name}}{{ SECURITY_SCHEMA.name }}": "{{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: 404
        think: 1

      - log: "Deleting a product from an invalid endpoint"
        delete:
          url: "/invalid_endpoint/{{ productId }}"
          headers:
            "{{#if SECURITY_SCHEMA.in === 'header' && SECURITY_SCHEMA.name}}{{ SECURITY_SCHEMA.name }}": "{{ $processEnvironment.AUTH_TOKEN }}"
          capture:
            - json: "$"
              as: "response"
          expect:
            - statusCode: 404
        think: 1
