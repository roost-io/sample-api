# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-petstore-v3_clone using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Test generated for /pet/findByStatus_get for http method type GET in artillery framework
# RoostTestHash=946f2905a0
# 
# 

# ********RoostGPT********
config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  plugins:
    expect: {}
  payload:
    file: "pet_findByStatus_get_others.csv"
    delimiter: "^|^"
    skipHeader: true
    fields:
      - status
scenarios:
  - name: "Test validation of non-success API responses for /pet/findByStatus"
    flow:
      - log:
          message: "Testing with invalid 'status' query parameter value."
      - get:
          url: "/pet/findByStatus?status=invalid_status"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - contentType: "application/json"
            - hasProperty: "message"
            - hasProperty: "error"
            - jmespath: "status == 'error'"
      - think:
          duration: 2
      - log:
          message: "Testing with missing 'status' query parameter."
      - get:
          url: "/pet/findByStatus"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - contentType: "application/json"
            - hasProperty: "message"
            - hasProperty: "error"
            - jmespath: "status == 'error'"
      - think:
          duration: 2
      - log:
          message: "Testing with 'sold' status but unauthorized request."
      - get:
          url: "/pet/findByStatus?status=sold"
          headers:
            Authorization: ""
          expect:
            - statusCode: 401
            - contentType: "application/json"
            - hasProperty: "message"
            - hasProperty: "error"
      - think:
          duration: 2
      - log:
          message: "Testing invalid URL case."
      - get:
          url: "/pet/findByStatusInvalidEndpoint"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - contentType: "application/json"
            - hasProperty: "message"
            - hasProperty: "error"
      - think:
          duration: 2
      - log:
          message: "Testing with excessively long query parameter value."
      - get:
          url: "/pet/findByStatus?status={{ 'a' * 1000 }}"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - contentType: "application/json"
            - hasProperty: "message"
            - hasProperty: "error"
