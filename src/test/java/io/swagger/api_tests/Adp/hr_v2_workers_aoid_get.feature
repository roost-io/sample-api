# ********RoostGPT********

# Test generated by RoostGPT for test adp_api_test_karate_sonnet4 using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /hr/v2/workers/{aoid}_get for http method type GET 
# RoostTestHash=d8c0fc7e80
# 
# 

# ********RoostGPT********
Feature: Get Worker by AssociateOID

Background:
  * def urlBase = karate.properties['API_HOST']
  * url urlBase
  * header Accept = 'application/json'

Scenario Outline: Get worker by associateOID - Success
  Given path '/hr/v2/workers/<aoid>'
  When method GET
  Then status 200
  And match responseHeaders['Cache-Control'] == '##string'
  And match responseHeaders['sm_transactionid'] == '##string'
  And match responseHeaders['Content-Type'] == '##string'
  And match response.workers == '#array'
  And match each response.workers[*].workerID == '#object'
  And match each response.workers[*].workerID.idValue == '#string'
  And match each response.workers[*].workerID.schemeCode == '#object'
  And match each response.workers[*].workerID.schemeCode.codeValue == '#string'
  And match each response.workers[*].workerID.schemeCode.shortName == '#string'
  And match each response.workers[*].associateOID == '#string'
  And match each response.workers[*].workerStatus == '#object'
  And match each response.workers[*].workerStatus.statusCode == '#object'
  And match each response.workers[*].workerStatus.statusCode.codeValue == '#string'
  And match each response.workers[*].workerStatus.statusCode.shortName == '#string'
  And match each response.workers[*].person == '#object'
  And match each response.workers[*].person.legalName == '#object'
  And match each response.workers[*].person.legalName.familyName1 == '#string'
  And match each response.workers[*].person.legalName.givenName == '#string'
  And match each response.workers[*].person.legalName.formattedName == '#string'
  And match each response.workers[*].person.birthDate == '#string'
  And match each response.workers[*].person.genderCode == '#object'
  And match each response.workers[*].person.genderCode.codeValue == '#string'
  And match each response.workers[*].businessCommunication == '#object'
  And match each response.workers[*].businessCommunication.emails == '#array'
  And match each response.workers[*].businessCommunication.emails[*].emailUri == '#string'
  And match each response.workers[*].workerDates == '#object'
  And match each response.workers[*].workerDates.terminationDate == '#string'
  And match each response.workers[*].workAssignments == '#array'
  And match each response.workers[*].workAssignments[*].primaryIndicator == '#boolean'
  And match each response.workers[*].workAssignments[*].jobTitle == '#string'
  And match each response.workers[*].workAssignments[*].hireDate == '#string'

  Examples:
    | read('hr_v2_workers_aoid_get.csv') |

Scenario Outline: Get worker by associateOID - Unauthorized
  Given path '/hr/v2/workers/<aoid>'
  When method GET
  Then assert responseStatus != 200
  And status 401
  And match response.message == '#string'

  Examples:
    | aoid            |
    | 'ADPNL02218087' |

Scenario Outline: Get worker by associateOID - Not Found
  Given path '/hr/v2/workers/<aoid>'
  When method GET
  Then assert responseStatus != 200
  And status 404
  And match response.message == '#object'
  And match response.message.confirmMessage == '#object'
  And match response.message.confirmMessage.confirmMessageID == '#object'
  And match response.message.confirmMessage.confirmMessageID.idValue == '#string'
  And match response.message.confirmMessage.confirmMessageID.schemeName == '#string'
  And match response.message.confirmMessage.confirmMessageID.schemeAgencyName == '#string'
  And match response.message.confirmMessage.createDateTime == '#string'
  And match response.message.confirmMessage.requestReceiptDateTime == '#string'
  And match response.message.confirmMessage.protocolStatusCode == '#object'
  And match response.message.confirmMessage.protocolStatusCode.codeValue == '#string'
  And match response.message.confirmMessage.protocolCode == '#object'
  And match response.message.confirmMessage.protocolCode.codeValue == '#string'
  And match response.message.confirmMessage.requestStatusCode == '#object'
  And match response.message.confirmMessage.requestStatusCode.codeValue == '#string'
  And match response.message.confirmMessage.requestMethodCode == '#object'
  And match response.message.confirmMessage.requestMethodCode.codeValue == '#string'
  And match response.message.confirmMessage.requestLink == '#object'
  And match response.message.confirmMessage.requestLink.href == '#string'
  And match response.message.confirmMessage.requestLink.rel == '#string'
  And match response.message.confirmMessage.requestLink.mediaType == '#string'
  And match response.message.confirmMessage.requestLink.method == '#string'
  And match response.message.confirmMessage.processMessages == '#array'
  And match each response.message.confirmMessage.processMessages[*].processMessageID == '#object'
  And match each response.message.confirmMessage.processMessages[*].processMessageID.idValue == '#string'
  And match each response.message.confirmMessage.processMessages[*].processMessageID.schemeName == '#string'
  And match each response.message.confirmMessage.processMessages[*].processMessageID.schemeAgencyName == '#string'
  And match each response.message.confirmMessage.processMessages[*].messageTypeCode == '#object'
  And match each response.message.confirmMessage.processMessages[*].messageTypeCode.codeValue == '#string'
  And match each response.message.confirmMessage.processMessages[*].links == '#array'
  And match each response.message.confirmMessage.processMessages[*].links[*].href == '#string'
  And match each response.message.confirmMessage.processMessages[*].links[*].rel == '#string'
  And match each response.message.confirmMessage.processMessages[*].links[*].mediaType == '#string'
  And match each response.message.confirmMessage.processMessages[*].links[*].method == '#string'
  And match each response.message.confirmMessage.processMessages[*].userMessage == '#object'
  And match each response.message.confirmMessage.processMessages[*].userMessage.messageTxt == '#string'
  And match response.message.confirmMessage.resourceMessages == '#array'
  And match each response.message.confirmMessage.resourceMessages[*].resourceMessageID == '#object'
  And match each response.message.confirmMessage.resourceMessages[*].resourceMessageID.idValue == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].resourceMessageID.schemeName == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].resourceMessageID.schemeAgencyName == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].resourceStatusCode == '#object'
  And match each response.message.confirmMessage.resourceMessages[*].resourceStatusCode.codeValue == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages == '#array'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].resourceStatusCode == '#object'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].resourceStatusCode.codeValue == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].processMessageID == '#object'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].processMessageID.idValue == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].processMessageID.schemeName == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].processMessageID.schemeAgencyName == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].messageTypeCode == '#object'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].messageTypeCode.codeValue == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage == '#object'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage.messageTxt == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage.links == '#array'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage.links[*].href == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage.links[*].rel == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage.links[*].mediaType == '#string'
  And match each response.message.confirmMessage.resourceMessages[*].processMessages[*].userMessage.links[*].method == '#string'

  Examples:
    | aoid           |
    | 'INVALID_AOID' |

Scenario Outline: Get worker by associateOID - Internal Server Error
  Given path '/hr/v2/workers/<aoid>'
  When method GET
  Then assert responseStatus != 200
  And status 500
  And match response.message == '#string'

  Examples:
    | aoid                |
    | 'SERVER_ERROR_AOID' |
