# ********RoostGPT********

# Test generated by RoostGPT for test adp_api_test_karate_sonnet4 using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /hr/v1/organization-jobs_get for http method type GET 
# RoostTestHash=b8b1295db5
# 
# 

# ********RoostGPT********
Feature: Organization Jobs API

Background:
  * def urlBase = karate.properties['API_HOST']
  * url urlBase

Scenario Outline: Get organization jobs with different role codes
  Given path '/hr/v1/organization-jobs'
  And header Accept = 'application/json'
  And header roleCode = '<roleCode>'
  When method GET
  Then status 200
  And match response.organizationJobs == '#[]'
  And match each response.organizationJobs[*].effectiveDate == '##string'
  And match each response.organizationJobs[*].itemID == '##string'
  And match each response.organizationJobs[*].jobCode == '##object'
  And match each response.organizationJobs[*].jobCode.codeValue == '##string'
  And match each response.organizationJobs[*].jobFamilyCode == '##object'
  And match each response.organizationJobs[*].jobFamilyCode.codeValue == '##string'
  And match each response.organizationJobs[*].jobFamilyCode.shortName == '##string'
  And match each response.organizationJobs[*].jobTitle == '##string'

  Examples:
    | read('hr_v1_organization-jobs_get.csv') |

Scenario: Get organization jobs without role code header
  Given path '/hr/v1/organization-jobs'
  And header Accept = 'application/json'
  When method GET
  Then status 200
  And match response.organizationJobs == '#[]'
  And match each response.organizationJobs[*].effectiveDate == '##string'
  And match each response.organizationJobs[*].itemID == '##string'
  And match each response.organizationJobs[*].jobCode == '##object'
  And match each response.organizationJobs[*].jobCode.codeValue == '##string'
  And match each response.organizationJobs[*].jobFamilyCode == '##object'
  And match each response.organizationJobs[*].jobFamilyCode.codeValue == '##string'
  And match each response.organizationJobs[*].jobFamilyCode.shortName == '##string'
  And match each response.organizationJobs[*].jobTitle == '##string'

Scenario: Get organization jobs with invalid role code
  Given path '/hr/v1/organization-jobs'
  And header Accept = 'application/json'
  And header roleCode = 'invalid_role'
  When method GET
  Then assert responseStatus != 200

Scenario: Get organization jobs - Unauthorized error
  Given path '/hr/v1/organization-jobs'
  And header Accept = 'application/json'
  When method GET
  Then status 401
  And match response.message == '#string'

Scenario: Get organization jobs - Resource not found
  Given path '/hr/v1/organization-jobs'
  And header Accept = 'application/json'
  When method GET
  Then status 404
  And match response.message == '#object'
  And match response.message._confirmMessage == '#object'
  And match response.message._confirmMessage.processingStatus == '##string'
  And match response.message._confirmMessage.requestStatus == '##string'
  And match response.message._confirmMessage.applicationID == '##string'
  And match response.message._confirmMessage.messageID == '##string'
  And match response.message._confirmMessage.messageDateTime == '##string'
  And match response.message._confirmMessage.messages == '#[]'
  And match each response.message._confirmMessage.messages[*].messageTargetCode == '##string'
  And match each response.message._confirmMessage.messages[*].processMessageIndicator == '##boolean'
  And match each response.message._confirmMessage.messages[*].messageTypeCode == '##string'
  And match each response.message._confirmMessage.messages[*].resourceID == '##string'
  And match each response.message._confirmMessage.messages[*].messageText == '##string'
  And match each response.message._confirmMessage.messages[*].resourceStatus == '##string'
  And match response.message._confirmMessage.resourceMessages == '#[]'
  And match each response.message._confirmMessage.resourceMessages[*].resourceID == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].resourceStatus == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].messages == '#[]'
  And match each response.message._confirmMessage.resourceMessages[*].messages[*].messageCode == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].messages[*].messageTypeCode == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].messages[*].messageText == '##string'
  And match response.message._confirmMessage.links == '#[]'
  And match each response.message._confirmMessage.links[*].href == '##string'
  And match each response.message._confirmMessage.links[*].rel == '##string'
  And match each response.message._confirmMessage.links[*].mediaType == '##string'
  And match each response.message._confirmMessage.links[*].method == '##string'

Scenario: Get organization jobs - Internal server error
  Given path '/hr/v1/organization-jobs'
  And header Accept = 'application/json'
  When method GET
  Then status 500
  And match response.message == '#string'
