# ********RoostGPT********

# Test generated by RoostGPT for test adp_api_test_karate_sonnet4 using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /codelists/hr/v3/worker-management/{code-type}/esi/{version-id}_get for http method type GET 
# RoostTestHash=29077b7759
# 
# 

# ********RoostGPT********
Feature: Retrieve custom codelist by type and version

Background:
  * def urlBase = karate.properties['API_HOST']
  * url urlBase
  * header Accept = 'application/json'

Scenario Outline: Successfully retrieve codelist for valid code-type and version-id
  Given path 'codelists/hr/v3/worker-management/<code-type>/esi/<version-id>'
  When method GET
  Then status 200
  And match response.codeLists == '#[]'
  And match each response.codeLists[*].codeListTitle == '##string'
  And match each response.codeLists[*].listItems == '#[]'
  And match each response.codeLists[*].listItems[*].codeValue == '##string'
  And match each response.codeLists[*].listItems[*].shortName == '##string'
  And match each response.codeLists[*].listItems[*].valueDescription == '##string'

  Examples:
    | read('codelists_hr_v3_worker-management_code-type_esi_version-id_get.csv') |

Scenario: Handle unauthorized access - 401 error
  Given path 'codelists/hr/v3/worker-management/locations/esi/1'
  When method GET
  Then assert responseStatus != 200
  And status 401
  And match response.message == '#string'

Scenario: Handle resource not found - 404 error
  Given path 'codelists/hr/v3/worker-management/invalid-code-type/esi/1'
  When method GET
  Then assert responseStatus != 200
  And status 404
  And match response.message == '#object'
  And match response.message._confirmMessage == '#object'
  And match response.message._confirmMessage.processingStatus == '##string'
  And match response.message._confirmMessage.requestStatus == '##string'
  And match response.message._confirmMessage.applicationID == '##string'
  And match response.message._confirmMessage.messageID == '##string'
  And match response.message._confirmMessage.messageDateTime == '##string'
  And match response.message._confirmMessage.messages == '#[]'
  And match each response.message._confirmMessage.messages[*].messageTargetCode == '##string'
  And match each response.message._confirmMessage.messages[*].processMessageIndicator == '##boolean'
  And match each response.message._confirmMessage.messages[*].messageTypeCode == '##string'
  And match each response.message._confirmMessage.messages[*].resourceID == '##string'
  And match each response.message._confirmMessage.messages[*].messageText == '##string'
  And match each response.message._confirmMessage.messages[*].resourceStatus == '##string'
  And match response.message._confirmMessage.resourceMessages == '#[]'
  And match each response.message._confirmMessage.resourceMessages[*].resourceID == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].resourceStatus == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].messages == '#[]'
  And match each response.message._confirmMessage.resourceMessages[*].messages[*].messageCode == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].messages[*].messageTypeCode == '##string'
  And match each response.message._confirmMessage.resourceMessages[*].messages[*].messageText == '##string'
  And match response.message._confirmMessage.links == '#[]'
  And match each response.message._confirmMessage.links[*].href == '##string'
  And match each response.message._confirmMessage.links[*].rel == '##string'
  And match each response.message._confirmMessage.links[*].mediaType == '##string'
  And match each response.message._confirmMessage.links[*].method == '##string'

Scenario: Handle internal server error - 500 error
  Given path 'codelists/hr/v3/worker-management/locations/esi/invalid-version'
  When method GET
  Then assert responseStatus != 200
  And status 500
  And match response.message == '#string'

Scenario Outline: Test different version-id formats
  Given path 'codelists/hr/v3/worker-management/<code-type>/esi/<version-id>'
  When method GET
  Then status 200
  And match response.codeLists == '#[]'

  Examples:
    | read('codelists_hr_v3_worker-management_code-type_esi_version-id_get.csv') |

Scenario: Verify response structure for empty codelist
  Given path 'codelists/hr/v3/worker-management/locations/esi/1'
  When method GET
  Then status 200
  And match response == '#object'
  And match response.codeLists == '#[]'
