# ********RoostGPT********

# Test generated by RoostGPT for test karateMultiSpecAPIFilter using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /products:search_get for http method type GET 
# RoostTestHash=824ef8445c
# 
# 

# ********RoostGPT********
Feature: Product Search API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: karate.properties['api_key'] }

  Scenario Outline: Search for product details with valid inputs
    Given path 'products:search'
    And param brand_name = '<brand_name>'
    And param product_name = '<product_name>'
    And param upc = '<upc>'
    And param model_number = '<model_number>'
    And param confidence_model = '<confidence_model>'
    And param product_description = '<product_description>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.source_integrity == '#object'
    And match response.source_integrity.score == '#string'
    And match response.source_integrity.source == '#string'
    And match response.source_integrity.reason == '#string'

    Examples:
      | read('products:search_get.csv') |

  Scenario Outline: Search for product with no matching criteria
    Given path 'products:search'
    And param brand_name = '<brand_name>'
    And param product_name = '<product_name>'
    And param upc = '<upc>'
    And param model_number = '<model_number>'
    And param confidence_model = '<confidence_model>'
    And param product_description = '<product_description>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.error == '#string'

    Examples:
      | read('products:search_get.csv') |
