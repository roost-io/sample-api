# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /getRequestStatus_post for http method type POST 
# RoostTestHash=1d3ea72e82
# 
# 

# ********RoostGPT********
Feature: Validate /getRequestStatus API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Validate GET /getRequestStatus with valid headers and request body
    Given path 'getRequestStatus'
    And request <requestBody>
    And header Authorization = <Authorization>
    And header botId = <botId>
    And header accountId = <accountId>
    When method get
    Then status 200
    And match response == '#[]'
    And match response[0].accountName == '#string'
    And match response[0].accountNumber == '#string'
    And match response[0].customerId == '#number'
    And match response[0].description == '#string'
    And match response[0].estimation == '#number'
    And match response[0].modifyDate == '#number'
    And match response[0].requestDate == '#number'
    And match response[0].requestId == '#string'
    And match response[0].requestSubType == '#string'
    And match response[0].serviceType == '#string'
    And match response[0].status == '#string'

    Examples:
      | read('getRequestStatus_post.csv') |

  Scenario Outline: Validate GET /getRequestStatus with missing or invalid headers
    Given path 'getRequestStatus'
    And request <requestBody>
    And header Authorization = <Authorization>
    And header botId = <botId>
    And header accountId = <accountId>
    When method get
    Then status <status>
    And match response.err.message == '#string'

    Examples:
      | Authorization          | botId    | accountId | requestBody                                                                                                                                                                                                                                                                                                                 | status |
      | ''                     | 'bot123' | 'acc456'  | """[{"accountName": "Joint With Son", "accountNumber": "1043693", "customerId": 1045300, "description": "Duplicate", "estimation": 1, "modifyDate": 1656044640526, "requestDate": 1651343400000, "requestId": "123455", "requestSubType": "Account Closure", "serviceType": "Service Request", "status": "In Progress"}]""" |    401 |
      | 'Bearer invalid_token' | 'bot123' | 'acc456'  | """[{"accountName": "Joint With Son", "accountNumber": "1043693", "customerId": 1045300, "description": "Duplicate", "estimation": 1, "modifyDate": 1656044640526, "requestDate": 1651343400000, "requestId": "123455", "requestSubType": "Account Closure", "serviceType": "Service Request", "status": "In Progress"}]""" |    401 |
      | 'Bearer valid_token'   | ''       | 'acc456'  | """[{"accountName": "Joint With Son", "accountNumber": "1043693", "customerId": 1045300, "description": "Duplicate", "estimation": 1, "modifyDate": 1656044640526, "requestDate": 1651343400000, "requestId": "123455", "requestSubType": "Account Closure", "serviceType": "Service Request", "status": "In Progress"}]""" |    404 |
      | 'Bearer valid_token'   | 'bot123' | ''        | """[{"accountName": "Joint With Son", "accountNumber": "1043693", "customerId": 1045300, "description": "Duplicate", "estimation": 1, "modifyDate": 1656044640526, "requestDate": 1651343400000, "requestId": "123455", "requestSubType": "Account Closure", "serviceType": "Service Request", "status": "In Progress"}]""" |    404 |
