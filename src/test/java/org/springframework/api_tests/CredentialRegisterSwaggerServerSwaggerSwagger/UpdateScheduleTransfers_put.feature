# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /UpdateScheduleTransfers_put for http method type PUT 
# RoostTestHash=cf62ec7736
# 
# 

# ********RoostGPT********
Feature: Update Scheduled Transfers API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def headers = { Authorization: 'Bearer <token>', botId: '<botId>', accountId: '<accountId>' }

  Scenario Outline: Update scheduled transfers with valid input
    Given path 'UpdateScheduleTransfers'
    And requestHeaders headers
    And request
      """
      { 
        "paymentId": "<paymentId>", 
        "customerId": <customerId>, 
        "amount": <amount>, 
        "sourceAccountId": "<sourceAccountId>", 
        "targetAccountId": "<targetAccountId>", 
        "scheduledDate": <scheduledDate> 
      }
      """
    When method POST
    Then status 200
    And match response == {}

    Examples:
      | read('UpdateScheduleTransfers_put.csv') |

  Scenario Outline: Authorization failure
    Given path 'UpdateScheduleTransfers'
    And requestHeaders
      """
      { 
        Authorization: 'Bearer <invalid_token>', 
        botId: '<botId>', 
        accountId: '<accountId>' 
      }
      """
    And request
      """
      { 
        "paymentId": "<paymentId>", 
        "customerId": <customerId>, 
        "amount": <amount>, 
        "sourceAccountId": "<sourceAccountId>" 
      }
      """
    When method POST
    Then status 401
    And match response.err.message == '#string'

    Examples:
      | invalid_token  | paymentId          | customerId | amount | sourceAccountId |
      | 'invalidToken' | '97087c6c24788b1d' |    1045300 |      5 | '12345'         |

  Scenario Outline: Not found error
    Given path 'UpdateScheduleTransfers'
    And requestHeaders headers
    And request
      """
      { 
        "paymentId": "<invalid_paymentId>", 
        "customerId": <customerId>, 
        "amount": <amount>, 
        "sourceAccountId": "<sourceAccountId>" 
      }
      """
    When method POST
    Then status 404
    And match response.err.message == '#string'

    Examples:
      | invalid_paymentId  | customerId | amount | sourceAccountId |
      | 'invalidPaymentId' |    1045300 |      5 | '12345'         |
