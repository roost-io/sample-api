# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /request_post for http method type POST 
# RoostTestHash=32e9a3578c
# 
# 

# ********RoostGPT********
Feature: API Tests for /request Endpoint

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def headers =
      """
      {
        Authorization: 'Bearer <token>',
        botId: '<botId>',
        accountId: '<accountId>',
        koreUserId: '<koreUserId>'
      }
      """

  Scenario Outline: Test POST /request with valid payload
    Given path '/request'
    And requestHeaders headers
    And request
      """
      {
        accountName: '<accountName>',
        accountNumber: '<accountNumber>',
        customerId: <customerId>,
        cardNumber: '<cardNumber>',
        description: '<description>',
        requestSubType: '<requestSubType>',
        requestType: '<requestType>',
        serviceType: '<serviceType>',
        meta: {}
      }
      """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.accountName == '#string'
    And match response.accountNumber == '#string'
    And match response.customerId == '#number'
    And match response.cardNumber == '#string'
    And match response.description == '#string'
    And match response.requestSubType == '#string'
    And match response.requestType == '#string'
    And match response.serviceType == '#string'
    And match response.meta == '#object'

    Examples:
      | read('request_post.csv') |

  Scenario: Test POST /request with missing Authorization header
    Given path '/request'
    And requestHeaders
      """
      {
        botId: '<botId>',
        accountId: '<accountId>',
        koreUserId: '<koreUserId>'
      }
      """
    And request
      """
      {
        accountName: 'Joint',
        accountNumber: '1042345',
        customerId: 1045300,
        cardNumber: '12345678901690',
        description: 'request for paper statement',
        requestSubType: 'Stamped Paper Statement',
        requestType: 'Statement',
        serviceType: 'Service Request',
        meta: {}
      }
      """
    When method POST
    Then status 401
    And match response == '#object'
    And match response.err == '#object'
    And match response.err.message == '#string'

  Scenario: Test POST /request with invalid endpoint
    Given path '/invalid'
    And requestHeaders headers
    And request
      """
      {
        accountName: 'Joint',
        accountNumber: '1042345',
        customerId: 1045300,
        cardNumber: '12345678901690',
        description: 'request for paper statement',
        requestSubType: 'Stamped Paper Statement',
        requestType: 'Statement',
        serviceType: 'Service Request',
        meta: {}
      }
      """
    When method POST
    Then status 404
    And match response == '#object'
    And match response.err == '#object'
    And match response.err.message == '#string'
