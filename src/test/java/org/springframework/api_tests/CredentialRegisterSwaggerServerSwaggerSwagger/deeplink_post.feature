# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /deeplink_post for http method type POST 
# RoostTestHash=e573f315ae
# 
# 

# ********RoostGPT********
Feature: Deeplink API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Test GET /deeplink with valid headers and request body
    Given path 'deeplink'
    And request """ 
    { 
      "usecase": <usecase> 
    } 
    """
    And headers """ 
    { 
      "koreUserId": '<koreUserId>',
      "botId": '<botId>',
      "accountId": '<accountId>',
      "tenantId": '<tenantId>',
      "Authorization": '<Authorization>',
      "environment": '<environment>',
      "channel": '<channel>'
    } 
    """
    When method post
    Then status 200
    And match response == '#[]'
    And match response[0].usecase == '#string'
    And match response[0].link == '#string'
    And match response[0].linkType == '#string'

    Examples:
      | usecase                              | koreUserId | botId  | accountId | tenantId | Authorization | environment | channel |
      | ["addbeneficiary"]                   | user123    | bot456 | acc789    | ten012   | authToken     | dev         | web     |
      | ["accountclosurestatus_followup"]    | user234    | bot567 | acc890    | ten345   | authToken2    | prod        | mobile  |

  Scenario: Test GET /deeplink with missing authorization
    Given path 'deeplink'
    And request """ 
    { 
      "usecase": ["addbeneficiary"] 
    } 
    """
    And headers """ 
    { 
      "koreUserId": 'user123',
      "botId": 'bot456',
      "accountId": 'acc789',
      "tenantId": 'ten012',
      "environment": 'dev',
      "channel": 'web'
    } 
    """
    When method post
    Then status 401
    And match response.err.message == '#string'

  Scenario: Test GET /deeplink with invalid endpoint
    Given path 'invalid/deeplink'
    And request """ 
    { 
      "usecase": ["addbeneficiary"] 
    } 
    """
    And headers """ 
    { 
      "koreUserId": 'user123',
      "botId": 'bot456',
      "accountId": 'acc789',
      "tenantId": 'ten012',
      "Authorization": 'authToken',
      "environment": 'dev',
      "channel": 'web'
    } 
    """
    When method post
    Then status 404
    And match response.err.message == '#string'
