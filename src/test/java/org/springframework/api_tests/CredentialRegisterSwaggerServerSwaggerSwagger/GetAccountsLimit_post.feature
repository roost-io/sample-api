# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /GetAccountsLimit_post for http method type POST 
# RoostTestHash=10c751c696
# 
# 

# ********RoostGPT********
Feature: Get Accounts Limit API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Test GetAccountsLimit with valid headers and request body
    Given path '/GetAccountsLimit'
    And request
      """
      { "customerId": <customerId> }
      """
    And header Authorization = <Authorization>
    And header botId = <botId>
    And header accountId = <accountId>
    When method GET
    Then status 200
    And match response == '#[]'
    And match response[0].accountName == '#string'
    And match response[0].accountNickname == '#string'
    And match response[0].accountNumber == '#string'
    And match response[0].accountType == '#string'
    And match response[0].balance == '#number'
    And match response[0].cardName == '#string'
    And match response[0].cardNumber == '#string'
    And match response[0].currency == '#string'
    And match response[0].customerId == '#number'
    And match response[0].perTxn == '#number'
    And match response[0].availableCashLimit == '#number'
    And match response[0].availableCredit == '#number'
    And match response[0].creditLimit == '#number'
    And match response[0].purchase.limits.monthly.available == '#number'
    And match response[0].purchase.limits.monthly.maximum == '#number'
    And match response[0].purchase.limits.monthly.spent == '#number'
    And match response[0].purchase.limits.daily.available == '#number'
    And match response[0].purchase.limits.daily.maximum == '#number'
    And match response[0].purchase.limits.daily.spent == '#number'
    And match response[0].purchase.transactions.monthly.available == '#number'
    And match response[0].purchase.transactions.monthly.maximum == '#number'
    And match response[0].purchase.transactions.monthly.usedup == '#number'
    And match response[0].purchase.transactions.daily.available == '#number'
    And match response[0].purchase.transactions.daily.maximum == '#number'
    And match response[0].purchase.transactions.daily.usedup == '#number'
    And match response[0].txnsPerDay.available == '#number'
    And match response[0].txnsPerDay.maximum == '#number'
    And match response[0].txnsPerDay.usedup == '#number'
    And match response[0].txnsPerDay.amountperday == '#number'
    And match response[0].withdrawal.limits.monthly.available == '#number'
    And match response[0].withdrawal.limits.monthly.maximum == '#number'
    And match response[0].withdrawal.limits.monthly.spent == '#number'
    And match response[0].withdrawal.limits.daily.available == '#number'
    And match response[0].withdrawal.limits.daily.maximum == '#number'
    And match response[0].withdrawal.limits.daily.spent == '#number'
    And match response[0].withdrawal.transactions.monthly.available == '#number'
    And match response[0].withdrawal.transactions.monthly.maximum == '#number'
    And match response[0].withdrawal.transactions.monthly.usedup == '#number'
    And match response[0].withdrawal.transactions.daily.available == '#number'
    And match response[0].withdrawal.transactions.daily.maximum == '#number'
    And match response[0].withdrawal.transactions.daily.usedup == '#number'

    Examples:
      | read('GetAccountsLimit_post.csv') |

  Scenario: Test GetAccountsLimit with missing Authorization header
    Given path '/GetAccountsLimit'
    And request
      """
      { "customerId": 1045300 }
      """
    And header botId = 'bot123'
    And header accountId = 'acc456'
    When method GET
    Then status 401
    And match response.err.message == '#string'

  Scenario: Test GetAccountsLimit with invalid endpoint
    Given path '/InvalidEndpoint'
    And request
      """
      { "customerId": 1045300 }
      """
    And header Authorization = 'Bearer token'
    And header botId = 'bot123'
    And header accountId = 'acc456'
    When method GET
    Then status 404
    And match response.err.message == '#string'
