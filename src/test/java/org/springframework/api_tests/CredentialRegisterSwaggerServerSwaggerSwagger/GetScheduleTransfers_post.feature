# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /GetScheduleTransfers_post for http method type POST 
# RoostTestHash=b4e854345b
# 
# 

# ********RoostGPT********
Feature: Get Schedule Transfers API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def headers = { Authorization: 'Bearer <token>', botId: '<botId>', accountId: '<accountId>' }

  Scenario Outline: Validate successful retrieval of scheduled transfers
    Given path '/GetScheduleTransfers'
    And request
      """
      { 
        customerId: <customerId>, 
        status: '<status>' 
      }
      """
    And headers headers
    When method POST
    Then status 200
    And match response == '#[]'
    And match response[0].Type == '#string'
    And match response[0].CustomerId == '#number'
    And match response[0].Amount == '#number'
    And match response[0].SourceAccountNumber == '#string'
    And match response[0].TargetAccountNumber == '#string'
    And match response[0].DueDate == '#string'
    And match response[0].Currency == '#string'
    And match response[0].Status == '#string'
    And match response[0].ScheduledDate == '#number'
    And match response[0].NextScheduleDate == '#number?'
    And match response[0].id == '#string'

    Examples:
      | read('GetScheduleTransfers_post.csv') |

  Scenario: Validate unauthorized access
    Given path '/GetScheduleTransfers'
    And request
      """
      { 
        customerId: 1045300, 
        status: 'Pending' 
      }
      """
    And headers
      """
      { 
        botId: '<botId>', 
        accountId: '<accountId>' 
      }
      """
    When method POST
    Then status 401
    And match response.err.message == '#string'

  Scenario: Validate not found error
    Given path '/GetScheduleTransfers'
    And request
      """
      { 
        customerId: 9999999, 
        status: 'Completed' 
      }
      """
    And headers headers
    When method POST
    Then status 404
    And match response.err.message == '#string'
