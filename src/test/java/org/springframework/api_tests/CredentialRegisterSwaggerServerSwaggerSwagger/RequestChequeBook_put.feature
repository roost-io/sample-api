# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /RequestChequeBook_put for http method type PUT 
# RoostTestHash=98f06c8df5
# 
# 

# ********RoostGPT********
Feature: Request Cheque Book API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Test Request Cheque Book with Valid Inputs
    Given path '/RequestChequeBook'
    And request
      """
      { 
        "customerId": <customerId>, 
        "accountNumber": "<accountNumber>", 
        "numberOfChequeBooks": <numberOfChequeBooks>, 
        "numberOfLeaves": <numberOfLeaves> 
      }
      """
    And header Authorization = '<Authorization>'
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    When method POST
    Then status 200
    And match response == '#object'
    And match response.path == 'RequestChequeBook'
    And match response.err == '#null'

    Examples:
      | read('RequestChequeBook_put.csv') |

  Scenario Outline: Test Request Cheque Book with Missing Authorization
    Given path '/RequestChequeBook'
    And request
      """
      { 
        "customerId": <customerId>, 
        "accountNumber": "<accountNumber>", 
        "numberOfChequeBooks": <numberOfChequeBooks>, 
        "numberOfLeaves": <numberOfLeaves> 
      }
      """
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    When method POST
    Then status 401
    And match response == '#object'
    And match response.err.message == '#string'

    Examples:
      | customerId | accountNumber | numberOfChequeBooks | numberOfLeaves | botId  | accountId |
      |    1045300 |       1042345 |                   2 |             10 | bot123 | acc123    |

  Scenario Outline: Test Request Cheque Book with Invalid Account
    Given path '/RequestChequeBook'
    And request
      """
      { 
        "customerId": <customerId>, 
        "accountNumber": "<accountNumber>", 
        "numberOfChequeBooks": <numberOfChequeBooks>, 
        "numberOfLeaves": <numberOfLeaves> 
      }
      """
    And header Authorization = '<Authorization>'
    And header botId = '<botId>'
    And header accountId = '<accountId>'
    When method POST
    Then status 404
    And match response == '#object'
    And match response.err.message == '#string'

    Examples:
      | customerId | accountNumber | numberOfChequeBooks | numberOfLeaves | Authorization | botId  | accountId |
      |    1045300 |       9999999 |                   2 |             10 | valid_token   | bot123 | acc123    |
