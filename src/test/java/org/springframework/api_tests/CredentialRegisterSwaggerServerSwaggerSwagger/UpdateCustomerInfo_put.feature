# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /UpdateCustomerInfo_put for http method type PUT 
# RoostTestHash=edad76befa
# 
# 

# ********RoostGPT********
Feature: Update Customer Information API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def headers = { Authorization: 'Bearer <token>', botId: '<botId>', accountId: '<accountId>' }

  Scenario Outline: Test Update Customer Information with Valid Inputs
    Given path 'UpdateCustomerInfo'
    And requestHeaders headers
    And request
      """
      { 
        customerId: <customerId>, 
        email: <email>, 
        alternatePhoneNumber: <alternatePhoneNumber>, 
        isAlternateMobileNumber: <isAlternateMobileNumber>, 
        phone: <phone>, 
        isPrimaryMobileNumber: <isPrimaryMobileNumber>, 
        location: <location> 
      }
      """
    When method PUT
    Then status 200
    And match response == '#object'
    And match response == { message: '#string' }

    Examples:
      | read('UpdateCustomerInfo_put.csv') |

  Scenario Outline: Test Update Customer Information with Missing Authorization
    Given path 'UpdateCustomerInfo'
    And requestHeaders { botId: '<botId>', accountId: '<accountId>' }
    And request
      """
      { 
        customerId: <customerId>, 
        email: <email>, 
        alternatePhoneNumber: <alternatePhoneNumber>, 
        isAlternateMobileNumber: <isAlternateMobileNumber>, 
        phone: <phone>, 
        isPrimaryMobileNumber: <isPrimaryMobileNumber>, 
        location: <location> 
      }
      """
    When method PUT
    Then status 401
    And match response == { err: { message: '#string' } }

    Examples:
      | customerId | email          | alternatePhoneNumber | isAlternateMobileNumber | phone      | isPrimaryMobileNumber | location |
      |    1045300 | John@gmail.com |           1234567890 | true                    | 9876543210 | false                 | New York |

  Scenario Outline: Test Update Customer Information with Invalid Endpoint
    Given path 'InvalidEndpoint'
    And requestHeaders headers
    And request
      """
      { 
        customerId: <customerId>, 
        email: <email>, 
        alternatePhoneNumber: <alternatePhoneNumber>, 
        isAlternateMobileNumber: <isAlternateMobileNumber>, 
        phone: <phone>, 
        isPrimaryMobileNumber: <isPrimaryMobileNumber>, 
        location: <location> 
      }
      """
    When method PUT
    Then status 404
    And match response == { err: { message: '#string' } }

    Examples:
      | customerId | email          | alternatePhoneNumber | isAlternateMobileNumber | phone      | isPrimaryMobileNumber | location |
      |    1045300 | John@gmail.com |           1234567890 | true                    | 9876543210 | false                 | New York |
