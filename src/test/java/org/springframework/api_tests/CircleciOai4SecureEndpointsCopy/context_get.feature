# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-circleci using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=7a1e121bd3
# 
# 

# ********RoostGPT********
Feature: API Tests for /context Endpoint

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase
    * def authToken = karate.properties['circle-token']

  Scenario Outline: List contexts with valid combinations of query parameters
    Given path '/context'
    And param owner-id = '<owner_id>'
    And param owner-slug = '<owner_slug>'
    And param owner-type = '<owner_type>'
    And param page-token = '<page_token>'
    And param circle-token = authToken
    And header Accept = 'application/json'
    When method GET
    Then status 200
    And match response.items == '#[] Context'
    And match response.items[*].id == '#string uuid'
    And match response.items[*].name == '#string'
    And match response.items[*].created_at == '#string date-time'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_get.csv') |

  Scenario: List contexts without optional query parameters
    Given path '/context'
    And param circle-token = authToken
    And header Accept = 'application/json'
    When method GET
    Then status 200
    And match response.items == '#[] Context'
    And match response.items[*].id == '#string uuid'
    And match response.items[*].name == '#string'
    And match response.items[*].created_at == '#string date-time'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

  Scenario: Error response when invalid parameters are passed
    Given path '/context'
    And param owner-id = 'invalid-uuid'
    And param circle-token = authToken
    And header Accept = 'application/json'
    When method GET
    Then assert responseStatus != 200
    And match response.message == '#string'
