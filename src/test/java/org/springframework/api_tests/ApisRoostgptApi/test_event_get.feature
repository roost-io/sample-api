# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event_get for http method type GET 
# RoostTestHash=12bcbb0857
# 
# 

# ********RoostGPT********
Feature: Test Event API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: #('Bearer ' + karate.properties['bearer']) }

  Scenario: Get all events without any filters
    Given path '/test/event'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario Outline: Get events with search term filter
    Given path '/test/event'
    And param searchTerm = '<searchTerm>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario Outline: Get events with case sensitivity options
    Given path '/test/event'
    And param searchTerm = 'test'
    And param isCaseSensitive = '<isCaseSensitive>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario Outline: Get events with whole word search options
    Given path '/test/event'
    And param searchTerm = 'test'
    And param isWholeWord = '<isWholeWord>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario Outline: Get events with pagination parameters
    Given path '/test/event'
    And param take = '<take>'
    And param skip = '<skip>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario: Get events with test_id filter
    Given path '/test/event'
    And param test_id = 'test123'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario Outline: Get events with status filter
    Given path '/test/event'
    And param status_filter = '<status>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario: Get events with multiple status filters
    Given path '/test/event'
    And param status_filter = 'completed'
    And param status_filter = 'failed'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario Outline: Get events with test type filter
    Given path '/test/event'
    And param test_type_filter = '<testType>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario: Get events with multiple test type filters
    Given path '/test/event'
    And param test_type_filter = 'unit'
    And param test_type_filter = 'functional'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario: Get events with event type filter
    Given path '/test/event'
    And param event_type_filter = 'deployment'
    And param event_type_filter = 'build'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario Outline: Get events with order by parameter
    Given path '/test/event'
    And param order_by = '<orderBy>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario Outline: Get events with time filter
    Given path '/test/event'
    And param time_filter = '<timeFilter>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario: Get events with label filter
    Given path '/test/event'
    And param label_filter = 'production'
    And param label_filter = 'staging'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario Outline: Get events with show my events filter
    Given path '/test/event'
    And param show_my_events = '<showMyEvents>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_get.csv') |

  Scenario: Get events with all filters combined
    Given path '/test/event'
    And param searchTerm = 'test'
    And param isCaseSensitive = 'false'
    And param isWholeWord = 'true'
    And param take = '10'
    And param skip = '0'
    And param test_id = 'test123'
    And param status_filter = 'completed'
    And param test_type_filter = 'unit'
    And param event_type_filter = 'deployment'
    And param order_by = 'creation_time'
    And param time_filter = 'Last-7Days'
    And param label_filter = 'production'
    And param show_my_events = 'true'
    When method GET
    Then status 200
    And match response == '#object'

  Scenario: Get events with invalid search term
    Given path '/test/event'
    And param searchTerm = 'ab'
    When method GET
    Then status != 200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == 'GET'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").isPass'

  Scenario: Handle default error response
    Given path '/test/event/invalid'
    When method GET
    Then status != 200
    And match response == '#object'
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == 'GET'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").isPass'

  Scenario: Test without authorization header
    Given path '/test/event'
    And configure headers = null
    When method GET
    Then status 401
