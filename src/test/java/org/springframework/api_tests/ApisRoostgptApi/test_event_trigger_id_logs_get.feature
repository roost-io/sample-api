# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event/{trigger_id}/logs_get for http method type GET 
# RoostTestHash=74c8b8b1eb
# 
# 

# ********RoostGPT********
Feature: Test Event Logs API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['BEARER_TOKEN']
    * configure headers = { Authorization: '#(authToken)' }

  Scenario Outline: Get event logs for trigger ID
    Given path '/test/event/<trigger_id>/logs'
    When method GET
    Then status <status_code>
    And match responseType == 'json'

    Examples:
      | trigger_id | status_code |
      | test123    |         200 |
      | trigger456 |         200 |
      | invalid789 |         200 |

  Scenario Outline: Get event logs - Success response validation
    Given path '/test/event/<trigger_id>/logs'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_trigger_id_logs_get.csv') |

  Scenario Outline: Get event logs - Default error response validation
    Given path '/test/event/<trigger_id>/logs'
    When method GET
    Then status <status_code>
    And match response == '#object'
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").pass'

    Examples:
      | trigger_id | status_code |
      | notfound   |         404 |
      | error500   |         500 |
      | badrequest |         400 |

  Scenario: Get event logs - Verify required fields in error response
    Given path '/test/event/nonexistent/logs'
    When method GET
    Then status != 200
    And match response == '#object'
    And assert response.code != null
    And assert response.timestamp != null
    And assert response.path != null
    And assert response.method != null
    And assert response.message != null

  Scenario Outline: Get event logs - Path parameter validation
    Given path '/test/event/<trigger_id>/logs'
    When method GET
    Then status <expected_status>

    Examples:
      | trigger_id | expected_status |
      | abc123     |             200 |
      |     123456 |             200 |
      | test_id    |             200 |
      | special@id |             200 |

  Scenario: Get event logs - Authorization header validation
    Given path '/test/event/test123/logs'
    And header Authorization = null
    When method GET
    Then status 401

  Scenario: Get event logs - Content type validation
    Given path '/test/event/test123/logs'
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'][0] contains 'application/json'
