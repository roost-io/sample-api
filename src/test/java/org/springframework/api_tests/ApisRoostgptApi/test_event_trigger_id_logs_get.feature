# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event/{trigger_id}/logs_get for http method type GET 
# RoostTestHash=74c8b8b1eb
# 
# 

# ********RoostGPT********
Feature: Test Event Logs API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: #('Bearer ' + karate.properties['bearer']) }

  Scenario Outline: Get event logs for trigger ID
    Given path '/test/event/<trigger_id>/logs'
    When method GET
    Then status <status_code>
    And match response == <expected_response>

    Examples:
      | trigger_id        | status_code | expected_response |
      | valid-trigger-123 |         200 | '#object'         |
      | invalid-trigger   |         404 | '#object'         |
      | ''                |         404 | '#object'         |
      | special-chars-!@# |         404 | '#object'         |

  Scenario: Get event logs - Success response validation
    Given path '/test/event/valid-trigger-123/logs'
    When method GET
    Then status 200
    And match response == '#object'
    And match responseType == 'json'

  Scenario: Get event logs - Not found error response validation
    Given path '/test/event/non-existent-trigger/logs'
    When method GET
    Then status 404
    And match response == '#object'
    And match response.code == '#number'
    And match response.code == 404
    And match response.message == '#string'
    And match response.message == 'Not found'
    And match response.method == '#string'
    And match response.method == '#regex (GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK)'
    And match response.path == '#string'
    And match response.path == '/application/client/git/eaas/trigger'
    And match response.timestamp == '#string'
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*'

  Scenario: Get event logs - Default error response validation
    Given path '/test/event/error-trigger/logs'
    When method GET
    Then status != 200
    And match response == '#object'
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#regex (GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK)'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.*'

  Scenario: Get event logs - Required fields validation for error response
    Given path '/test/event/missing-trigger/logs'
    When method GET
    Then status != 200
    And match response == '#object'
    And match response.code == '#present'
    And match response.timestamp == '#present'
    And match response.path == '#present'
    And match response.method == '#present'
    And match response.message == '#present'

  Scenario: Get event logs - Authorization header validation
    * configure headers = null
    Given path '/test/event/test-trigger/logs'
    When method GET
    Then status 401

  Scenario: Get event logs - Invalid bearer token
    * configure headers = { Authorization: 'Bearer invalid-token' }
    Given path '/test/event/test-trigger/logs'
    When method GET
    Then status 401

  Scenario: Get event logs - Missing authorization header
    * configure headers = {}
    Given path '/test/event/test-trigger/logs'
    When method GET
    Then status 401

  Scenario Outline: Get event logs - Various trigger ID formats
    Given path '/test/event/<trigger_id>/logs'
    When method GET
    Then status <expected_status>
    And match response == '#object'

    Examples:
      | trigger_id               | expected_status |
      | abc123                   |             200 |
      |                   123456 |             200 |
      | trigger-with-dashes      |             200 |
      | trigger_with_underscores |             200 |
      | UPPERCASE-TRIGGER        |             200 |
      | mixed-Case-123           |             200 |
