# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event/{trigger_id}_delete for http method type DELETE 
# RoostTestHash=3734fcc50d
# 
# 

# ********RoostGPT********
Feature: Test Event Deletion API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['BEARER_TOKEN']
    * configure headers = { Authorization: '#(authToken)' }

  Scenario Outline: Delete event with valid trigger ID
    Given path '/test/event/<trigger_id>'
    When method DELETE
    Then status 200

    Examples:
      | read('test_event_trigger_id_delete.csv') |

  Scenario Outline: Delete event with invalid trigger ID - default error response
    Given path '/test/event/<trigger_id>'
    When method DELETE
    Then status <status_code>
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}").isSuccess'

    Examples:
      | trigger_id | status_code |
      | invalid123 |         404 |
      | notfound   |         404 |
      | empty      |         400 |

  Scenario: Delete event with empty trigger ID
    Given path '/test/event/'
    When method DELETE
    Then status 404
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}").isSuccess'

  Scenario: Delete event with special characters in trigger ID
    Given path '/test/event/trigger@#$%'
    When method DELETE
    Then status <200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}").isSuccess'

  Scenario: Delete event with very long trigger ID
    Given path '/test/event/verylongtriggeridthatexceedsnormallimitsandmightcauseerrors'
    When method DELETE
    Then status <200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#? _ == "GET" || _ == "DELETE" || _ == "HEAD" || _ == "OPTIONS" || _ == "POST" || _ == "PUT" || _ == "PATCH" || _ == "PURGE" || _ == "LINK" || _ == "UNLINK"'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}").isSuccess'
