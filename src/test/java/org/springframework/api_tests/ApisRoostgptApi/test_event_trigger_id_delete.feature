# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event/{trigger_id}_delete for http method type DELETE 
# RoostTestHash=3734fcc50d
# 
# 

# ********RoostGPT********
Feature: Test Event Deletion API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: #('Bearer ' + karate.properties['bearer']) }

  Scenario Outline: Delete event with valid trigger ID
    Given path '/test/event/<trigger_id>'
    When method DELETE
    Then status 200

    Examples:
      | read('test_event_trigger_id_delete.csv') |

  Scenario Outline: Delete event with invalid trigger ID - default error response
    Given path '/test/event/<trigger_id>'
    When method DELETE
    Then status <status_code>
    And match response.code == <expected_code>
    And match response.message == '<expected_message>'
    And match response.method == 'DELETE'
    And match response.path contains '/test/event/'
    And match response.timestamp == '#string'
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}'
    And match response == '#object'
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.path == '#string'
    And match response.timestamp == '#string'

    Examples:
      | trigger_id | status_code | expected_code | expected_message     |
      | invalid123 |         404 |           404 | Not found            |
      | nonexist   |         400 |           400 | Bad Request          |
      | empty      |         422 |           422 | Unprocessable Entity |

  Scenario: Delete event with empty trigger ID
    Given path '/test/event/'
    When method DELETE
    Then status 404
    And match response.code == 404
    And match response.message == '#string'
    And match response.method == 'DELETE'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}'

  Scenario: Delete event with special characters in trigger ID
    Given path '/test/event/test@#$%'
    When method DELETE
    Then status != 200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == 'DELETE'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}'

  Scenario: Delete event without authorization
    * configure headers = {}
    Given path '/test/event/test123'
    When method DELETE
    Then status 401
    And match response.code == 401
    And match response.message == '#string'
    And match response.method == 'DELETE'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}'

  Scenario: Validate response structure for error cases
    Given path '/test/event/nonexistent'
    When method DELETE
    Then status != 200
    And match response ==
      """
      {
        "code": "#number",
        "message": "#string",
        "method": "#string",
        "path": "#string",
        "timestamp": "#string"
      }
      """
    And match response.method == 'DELETE'
    And assert response.code >= 400
    And assert response.message.length > 0
    And assert response.path.length > 0
    And assert response.timestamp.length > 0
