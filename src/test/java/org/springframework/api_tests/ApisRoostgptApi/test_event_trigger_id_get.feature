# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event/{trigger_id}_get for http method type GET 
# RoostTestHash=0f3f0c41d6
# 
# 

# ********RoostGPT********
Feature: Test Event API - Get One Event

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['BEARER_TOKEN']
    * configure headers = { Authorization: '#(authToken)' }

  Scenario Outline: Get one event with valid trigger ID
    Given path '/test/event/<trigger_id>'
    When method GET
    Then status 200
    And match response == '#object'

    Examples:
      | read('test_event_trigger_id_get.csv') |

  Scenario Outline: Get one event with invalid trigger ID - default error response
    Given path '/test/event/<trigger_id>'
    When method GET
    Then status <status_code>
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#string'
    And match response.method == '#regex (GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK)'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").pass'

    Examples:
      | trigger_id | status_code |
      | invalid123 |         404 |
      | notfound   |         404 |
      | empty      |         400 |

  Scenario: Get one event - verify required fields in error response
    Given path '/test/event/nonexistent'
    When method GET
    Then status != 200
    And match response contains { code: '#number', timestamp: '#string', path: '#string', method: '#string', message: '#string' }
    And match response.code == '#number'
    And match response.timestamp == '#string'
    And match response.path == '#string'
    And match response.method == '#string'
    And match response.message == '#string'

  Scenario: Get one event - verify method field enum values
    Given path '/test/event/invalid'
    When method GET
    Then status != 200
    And match response.method == '#string'
    And assert response.method == 'GET' || response.method == 'DELETE' || response.method == 'HEAD' || response.method == 'OPTIONS' || response.method == 'POST' || response.method == 'PUT' || response.method == 'PATCH' || response.method == 'PURGE' || response.method == 'LINK' || response.method == 'UNLINK'

  Scenario: Get one event - verify timestamp format
    Given path '/test/event/test'
    When method GET
    Then status != 200
    And match response.timestamp == '#string'
    And match response.timestamp == '#? _.length > 0'
