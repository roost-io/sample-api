# ********RoostGPT********

# Test generated by RoostGPT for test roostgpt-apispec using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /test/event/{trigger_id}_patch for http method type PATCH 
# RoostTestHash=78dc84207a
# 
# 

# ********RoostGPT********
Feature: Test Event Trigger API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['BEARER_TOKEN']
    * configure headers = { Authorization: '#(authToken)' }

  Scenario Outline: Edit trigger event with valid data
    Given path '/test/event/<trigger_id>'
    And request
      """
      {
        "completion_time": "<completion_time>",
        "modification_time": "<modification_time>",
        "status": "<status>",
        "status_details": "<status_details>",
        "test_endpoints": "<test_endpoints>",
        "test_report": "<test_report>"
      }
      """
    When method PUT
    Then status 200

    Examples:
      | read('test_event_trigger_id_patch.csv') |

  Scenario Outline: Edit trigger event with partial data
    Given path '/test/event/<trigger_id>'
    And request
      """
      {
        "status": "<status>"
      }
      """
    When method PUT
    Then status 200

    Examples:
      | read('test_event_trigger_id_patch.csv') |

  Scenario Outline: Edit trigger event with empty request body
    Given path '/test/event/<trigger_id>'
    And request {}
    When method PUT
    Then status 200

    Examples:
      | read('test_event_trigger_id_patch.csv') |

  Scenario Outline: Edit trigger event with invalid trigger_id - default error response
    Given path '/test/event/<trigger_id>'
    And request
      """
      {
        "status": "completed"
      }
      """
    When method PUT
    Then status != 200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#regex (GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK)'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").pass'

    Examples:
      | trigger_id  |
      | invalid_id  |
      | nonexistent |

  Scenario: Edit trigger event with malformed JSON
    Given path '/test/event/trigger123'
    And request '{"status": "completed"'
    When method PUT
    Then status != 200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#regex (GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK)'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").pass'

  Scenario: Edit trigger event without authorization
    Given path '/test/event/trigger123'
    And configure headers = null
    And request
      """
      {
        "status": "completed"
      }
      """
    When method PUT
    Then status != 200
    And match response.code == '#number'
    And match response.message == '#string'
    And match response.method == '#regex (GET|DELETE|HEAD|OPTIONS|POST|PUT|PATCH|PURGE|LINK|UNLINK)'
    And match response.path == '#string'
    And match response.timestamp == '#string'
    And match response.timestamp == '#? karate.match(_, "####-##-##T##:##:##").pass'

  Scenario Outline: Edit trigger event with all possible request body fields
    Given path '/test/event/<trigger_id>'
    And request
      """
      {
        "completion_time": "<completion_time>",
        "modification_time": "<modification_time>",
        "status": "<status>",
        "status_details": "<status_details>",
        "test_endpoints": "<test_endpoints>",
        "test_report": "<test_report>"
      }
      """
    When method PUT
    Then status 200

    Examples:
      | read('test_event_trigger_id_patch.csv') |
