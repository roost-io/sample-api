# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-petstore-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=b2ab25b329
# 
# 

# ********RoostGPT********
Feature: Testing Upload Image API for /pet/{petId}/uploadImage

  Background:
    * def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['AUTH_TOKEN']) }

  Scenario Outline: Successful operation - Valid image upload
    Given path 'pet', <petId>, 'uploadImage'
    And param additionalMetadata = <additionalMetadata>
    And request read('test-image.jpg')
    When method POST
    Then status 200
    And match response.code == '#integer'
    And match response.type == '#string'
    And match response.message == '#string'

    Examples:
      | petId  | additionalMetadata |
      | 12345  | Example data       |
      | 67890  | Test metadata      |
      | 11112  | Sample metadata    |

  Scenario: No file uploaded - Invalid Request
    Given path 'pet', 12345, 'uploadImage'
    When method POST
    Then status 400
    And match response == null

  Scenario: Pet not found
    Given path 'pet', 999999, 'uploadImage'
    And request read('test-image.jpg')
    When method POST
    Then status 404
    And match response == null

  Scenario: Unexpected error response
    Given path 'pet', 12345, 'uploadImage'
    And request 
    """
    INVALID_BINARY_CONTENT
    """
    When method POST
    Then status NOT 200
    And match response == null
