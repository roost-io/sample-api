# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-petstore-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=b2ab25b329
# 
# 

# ********RoostGPT********
Feature: Upload an image of the pet

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#{karate.properties["AUTH_TOKEN"]}' }

  Scenario Outline: Upload image of the pet successfully
    Given path 'pet', '<petId>', 'uploadImage'
    And param additionalMetadata = '<additionalMetadata>'
    And request read('test-image.jpg')
    When method POST
    Then status 200
    And match response ==
      """
      {
        code: '#number',
        type: '#string',
        message: '#string'
      }
      """

    Examples:
      | read('pet_petId_uploadImage_post.csv') |

  Scenario: Attempt to upload an image without file
    Given path 'pet', 1, 'uploadImage'
    When method POST
    Then status 400
    And match response == 'No file uploaded'

  Scenario: Attempt to upload an image for a non-existent pet
    Given path 'pet', 9999, 'uploadImage'
    When method POST
    Then status 404
    And match response == 'Pet not found'

  Scenario: Verify unexpected error for invalid operation
    Given path 'pet', 'invalid', 'uploadImage'
    When method POST
    Then status >= 400
    And match response == 'Unexpected error'
