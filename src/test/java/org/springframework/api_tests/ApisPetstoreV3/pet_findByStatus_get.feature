# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-petstore-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByStatus_get for http method type GET 
# RoostTestHash=946f2905a0
# 
# 

# ********RoostGPT********
Feature: Tests for /pet/findByStatus API endpoint

  Background:
    * def urlBase = karate.properties['demoAlias_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['demoAlias_AUTH_TOKEN']) }

  Scenario Outline: Validate pet status filter with valid status values
    Given path 'pet/findByStatus'
    And param status = <status>
    When method GET
    Then status 200
    And match response ==
      """
      []
      """
    And match each response ==
      """
      #object
      """
    And match each response.id ==
      """
      #number
      """
    And match each response.name ==
      """
      #string
      """
    And match each response.category.id ==
      """
      #number
      """
    And match each response.category.name ==
      """
      #string
      """
    And match each response.photoUrls ==
      """
      []
      """
    And match each response.photoUrls[*] ==
      """
      #string
      """
    And match each response.tags ==
      """
      []
      """
    And match each response.tags[*].id ==
      """
      #number
      """
    And match each response.tags[*].name ==
      """
      #string
      """
    And match each response.status ==
      """
      #string
      """

    Examples:
      | read('pet_findByStatus_get.csv') |

  Scenario: Validate response for invalid status value
    Given path 'pet/findByStatus'
    And param status = 'invalid_status'
    When method GET
    Then status 400
    And match response ==
      """
      #object
      """
    And match response.message ==
      """
      #string
      """

  Scenario: Verify response structure for missing status parameter
    Given path 'pet/findByStatus'
    When method GET
    Then status 200
    And match response ==
      """
      []
      """
    And match each response ==
      """
      #object
      """
    And match each response.id ==
      """
      #number
      """
    And match each response.name ==
      """
      #string
      """
    And match each response.category.id ==
      """
      #number
      """
    And match each response.category.name ==
      """
      #string
      """
    And match each response.photoUrls ==
      """
      []
      """
    And match each response.photoUrls[*] ==
      """
      #string
      """
    And match each response.tags ==
      """
      []
      """
    And match each response.tags[*].id ==
      """
      #number
      """
    And match each response.tags[*].name ==
      """
      #string
      """
    And match each response.status ==
      """
      #string
      """
