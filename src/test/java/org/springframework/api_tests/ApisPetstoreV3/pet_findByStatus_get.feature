# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-petstore-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByStatus_get for http method type GET 
# RoostTestHash=946f2905a0
# 
# 

# ********RoostGPT********
Feature: Find pets by status API tests

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['AUTH_TOKEN']) }

  Scenario Outline: Valid request with status parameter
    Given path 'pet/findByStatus'
    And param status = '<status>'
    When method GET
    Then status 200
    And match response == '#[]'
    And match response[*].id == '#number'
    And match response[*].name == '#string'
    And match response[*].photoUrls == '#[]'
    And match response[*].photoUrls[*] == '#string'
    And match response[*].category == ''' 
    {
        id: '#number',
        name: '#string'
    } 
    '''
    And match response[*].tags == '#[]'
    And match response[*].tags[*] == ''' 
    { 
        id: '#number',
        name: '#string'
    } 
    '''
    And match response[*].status == '#string'

    Examples:
      | status    |
      | available |
      | pending   |
      | sold      |

  Scenario: Request without status parameter
    Given path 'pet/findByStatus'
    When method GET
    Then status 200
    And match response == '#[]'
    And match response[*].id == '#number'
    And match response[*].name == '#string'
    And match response[*].photoUrls == '#[]'
    And match response[*].photoUrls[*] == '#string'
    And match response[*].category == ''' 
    {
        id: '#number',
        name: '#string'
    } 
    '''
    And match response[*].tags == '#[]'
    And match response[*].tags[*] == ''' 
    { 
        id: '#number',
        name: '#string'
    } 
    '''
    And match response[*].status == '#string'

  Scenario Outline: Invalid request with unsupported status parameter
    Given path 'pet/findByStatus'
    And param status = '<status>'
    When method GET
    Then status 400
    And match response == '''<error-message>'''

    Examples:
      | status        |
      | invalidStatus |
      | !@#$%^&*      |
