# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-customer-management-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}_post for http method type POST 
# RoostTestHash=30359d59f9
# 
# 

# ********RoostGPT********
Feature: Updates a pet in the store with form data

  Background:
    * def urlBase = karate.properties['PETSTORE_API_HOST']
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['PETSTORE_AUTH_TOKEN']) }

  Scenario Outline: Update pet details with form data - Successful operation
    Given path 'pet', '<petId>'
    When method POST
    And param name = '<name>'
    And param status = '<status>'
    Then status 200
    And match response ==
      """
      {
        name: '#string',
        photoUrls: '[#string]',
        id: '#number',
        category: {
          id: '#number',
          name: '#string'
        },
        status: '#string',
        tags: [
          {
            id: '#number',
            name: '#string'
          }
        ]
      }
      """
    And response.status in ['available', 'pending', 'sold']

    Examples:
      | read('pet_petId_post.csv') |

  Scenario Outline: Update pet details with invalid input
    Given path 'pet', '<invalidPetId>'
    When method POST
    And param name = '<invalidName>'
    And param status = '<invalidStatus>'
    Then status 400
    And match response == null

    Examples:
      | invalidPetId | invalidName | invalidStatus |
      | abc          |         123 | xyz           |

  Scenario: Handle unexpected error during update
    Given path 'pet', 10
    When method POST
    And param name = 'unexpected'
    And param status = 'unknownStatus'
    Then status != 200
    And match response == null
