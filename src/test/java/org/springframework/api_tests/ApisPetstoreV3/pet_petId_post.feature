# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-customer-management-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/{petId}_post for http method type POST 
# RoostTestHash=30359d59f9
# 
# 

# ********RoostGPT********
Feature: Update Pet in the Store with Form Data

  Background:
    * def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties["AUTH_TOKEN"])' }

  Scenario Outline: Update pet using PUT method with valid inputs
    Given path 'pet/<petId>'
    And param name = <name>
    And param status = <status>
    When method PUT
    Then status 200
    And match response.id == '#number'
    And match response.name == '#string'
    And match response.category.id == '#number'
    And match response.category.name == '#string'
    And match response.photoUrls == '#[] string'
    And match response.tags == '#[]'
    And match response.tags[*].id == '#number'
    And match response.tags[*].name == '#string'
    And match response.status == '#string'
    And match response.status == '#oneOf ["available", "pending", "sold"]'
    And match response.path == 'pet/<petId>'

    Examples:
      | read('pet_petId_post.csv') |

  Scenario: Update pet using PUT method with invalid inputs (Invalid petId)
    Given path 'pet/999999'
    And param name = 'InvalidName'
    And param status = 'invalid_status'
    When method PUT
    Then status 400

  Scenario: Update pet using PUT method with authorization issues
    * configure headers = {}
    Given path 'pet/1'
    And param name = 'Buddy'
    And param status = 'available'
    When method PUT
    Then status 403

  Scenario: Unexpected error response during PUT method
    * configure headers = { Authorization: '#(karate.properties["AUTH_TOKEN"])' }
    Given path 'pet/1'
    And param name = 'FaultyName'
    And param status = 'faulty_status'
    When method PUT
    Then status 500
