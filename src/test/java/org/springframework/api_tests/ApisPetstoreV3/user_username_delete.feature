# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-customer-management-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /user/{username}_delete for http method type DELETE 
# RoostTestHash=7a2f597335
# 
# 

# ********RoostGPT********
Feature: Delete User Endpoint Validation
  Description: Tests for the DELETE /user/{username} endpoint to ensure proper functionality and error handling.

  Background:
    * def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: "#(karate.properties['AUTH_TOKEN'])" }

  Scenario Outline: Successfully delete a user
    Given path 'user/<username>'
    When method DELETE
    Then status 200
    And match response == """ #null """

    Examples:
      | username  |
      | testuser1 |
      | testuser2 |
      | testuser3 |

  Scenario Outline: Fail to delete user due to invalid username
    Given path 'user/<username>'
    When method DELETE
    Then status 400
    And match response == """ #null """

    Examples:
      | username      |
      | invalid_user  |
      | 1234          |
      | ''            |

  Scenario Outline: Fail to delete a user that does not exist
    Given path 'user/<username>'
    When method DELETE
    Then status 404
    And match response == """ #null """

    Examples:
      | username       |
      | nonexistent123 |
      | nobodyuser     |
      | ghostUser      |

  Scenario Outline: Handle unexpected error while deleting a user
    Given path 'user/<username>'
    When method DELETE
    Then status 500
    And match response CONTAINS """
    {
      message: '#string?',
      error:   '#object?'
    }
    """

    Examples:
      | username  |
      | testuser4 |
      | admin123  |
