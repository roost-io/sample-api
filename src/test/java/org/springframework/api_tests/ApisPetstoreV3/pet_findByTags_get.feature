# ********RoostGPT********

# Test generated by RoostGPT for test api-karate-customer-management-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByTags_get for http method type GET 
# RoostTestHash=b47488422d
# 
# 

# ********RoostGPT********
Feature: Test Find Pets by Tags API

  Background:
    * def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers =
      """
      {
        Authorization: #(karate.properties['AUTH_TOKEN'])
      }
      """

  Scenario Outline: Validate Find Pets by Tags API with valid tags
    Given path 'pet/findByTags'
    And param tags = <tags>
    When method GET
    Then status 200
    And match response == '#[]'
    And match response[*].id == '#number'
    And match response[*].name == '#string'
    And match response[*].photoUrls == '#[]'
    And match response[*].photoUrls[*] == '#string'
    And match response[*].category == '#object'
    And match response[*].category.id == '#number'
    And match response[*].category.name == '#string'
    And match response[*].tags == '#[]'
    And match response[*].tags[*] == '#object'
    And match response[*].tags[*].id == '#number'
    And match response[*].tags[*].name == '#string'
    And match response[*].status == '#string'

    Examples:
      | read('pet_findByTags_get.csv') |

  Scenario Outline: Validate response for invalid tags
    Given path 'pet/findByTags'
    And param tags = <tags>
    When method GET
    Then status 400
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | tags        |
      | ['invalid'] |
      | ['!@#$%^']  |

  Scenario: Validate response for unexpected error
    Given path 'pet/findByTags'
    And param tags =
      """
      [
        "unexpected"
      ]
      """
    When method GET
    Then status != 200
    And match response == '#object'
    And match response.message == '#string'
