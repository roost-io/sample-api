# ********RoostGPT********

# Test generated by RoostGPT for test karate-api using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /oauth20/token (Client Hosted Shopper)_post for http method type POST 
# RoostTestHash=78855a7f9d
# 
# 

# ********RoostGPT********
Feature: OAuth20 Token - Authenticated Shopper Token (Client Hosted Shopper)

Background:
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase
* def authHeader = {Authorization: 'Basic ' + $processEnvironment.AUTH_TOKEN}
* def headers = { 'Content-Type': 'application/x-www-form-urlencoded'}

Scenario Outline: Test the /oauth20/token endpoint for authentication with required "dr_external_reference_id" and "grant_type"

Given path '/oauth20/token'
And headers authHeader
When request { 'dr_external_reference_id': '<dr_external_reference_id>', 'grant_type': '<grant_type>'}
And method post
Then status 200
And match response == { access_token: '#string', token_type: 'bearer', expires_in: '#string'}

Examples:
| dr_external_reference_id | grant_type       |
| 'testReference123'       | 'client_credentials' |

Scenario Outline: Test the /oauth20/token endpoint for transferring session and cart to an authenticated shopper

Given path '/oauth20/token'
And headers authHeader
When request { 'dr_external_reference_id': '<dr_external_reference_id>', 'grant_type': '<grant_type>', 'dr_limited_token': '<dr_limited_token>', 'dr_session_token': '<dr_session_token>' }
And method post
Then status 200
And match response == { access_token: '#string', token_type: 'bearer', expires_in: '#string'}

Examples:
| dr_external_reference_id | grant_type       | dr_limited_token | dr_session_token |
| 'testReference456'       | 'client_credentials' | 'limitedToken123' | 'sessionToken123' |

Scenario Outline: Test the /oauth20/token endpoint for error responses

Given path '/oauth20/token'
And headers authHeader
When request { 'dr_external_reference_id': '<dr_external_reference_id>', 'grant_type': '<grant_type>' }
And method post
Then status <status_code>
And match response.errors.error contains { code: '#string', description: '#string'}

Examples:
| dr_external_reference_id | grant_type | status_code |
| ''                       | 'client_credentials' | 400           |
| 'testReference789'       | 'invalid_grant_type' | 400           |
| 'testReference012'       | 'client_credentials' | 401           |
