# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /user/{username}_get for http method type GET 
# RoostTestHash=b96457affd
# 
# 

# ********RoostGPT********
Feature: Get user by username API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario: Get user by username - successful operation
    Given path '/v2/user/user1'
    When method GET
    Then status 200
    And match response.id == '#number'
    And match response.username == '#string'
    And match response.firstName == '#string'
    And match response.lastName == '#string'
    And match response.email == '#string'
    And match response.password == '#string'
    And match response.phone == '#string'
    And match response.userStatus == '#number'

  Scenario: Get user by username - invalid username supplied
    Given path '/v2/user/invaliduser123!@#'
    When method GET
    Then status 400

  Scenario: Get user by username - user not found
    Given path '/v2/user/nonexistentuser'
    When method GET
    Then status 404

  Scenario Outline: Get user by username - various test cases
    Given path '/v2/user/<username>'
    When method GET
    Then status <expectedStatus>
    And if (<expectedStatus> == 200) match response.id == '#number'
    And if (<expectedStatus> == 200) match response.username == '#string'
    And if (<expectedStatus> == 200) match response.firstName == '#string'
    And if (<expectedStatus> == 200) match response.lastName == '#string'
    And if (<expectedStatus> == 200) match response.email == '#string'
    And if (<expectedStatus> == 200) match response.password == '#string'
    And if (<expectedStatus> == 200) match response.phone == '#string'
    And if (<expectedStatus> == 200) match response.userStatus == '#number'

    Examples:
      | username | expectedStatus |
      | user1    |            200 |
      | testuser |            200 |
      | admin    |            200 |
      | invalid@ |            400 |
      | user!@#  |            400 |
      | ""       |            400 |
      | missing  |            404 |
      | deleted  |            404 |

  Scenario: Get user by username - validate response structure and data types
    Given path '/v2/user/user1'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.id == '#? typeof _ == "number" && _ >= 0'
    And match response.username == '#? typeof _ == "string" && _.length > 0'
    And match response.firstName == '#? typeof _ == "string"'
    And match response.lastName == '#? typeof _ == "string"'
    And match response.email == '#? typeof _ == "string"'
    And match response.password == '#? typeof _ == "string"'
    And match response.phone == '#? typeof _ == "string"'
    And match response.userStatus == '#? typeof _ == "number"'

  Scenario: Get user by username - validate response headers
    Given path '/v2/user/user1'
    When method GET
    Then status 200
    And match header Content-Type contains 'application/json'
