# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /pet/{petId}_get for http method type GET 
# RoostTestHash=561990ad39
# 
# 

# ********RoostGPT********
Feature: Pet API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: karate.properties['AUTH_TOKEN'] }

  Scenario Outline: Get Pet by ID
    Given path 'v2/pet/<petId>'
    When method GET
    Then status <status>
    And match responseHeaders['Content-Type'] contains 'application/json'
    And match response == <responseSchema>

    Examples:
      | petId | status | responseSchema                                                                 |
      | 1     | 200    | """{ id: '#number', name: '#string', photoUrls: '#[] string', category: '#? _ == null || typeof _ == "object"', tags: '#? _ == null || typeof _ == "array"', status: '#string' }""" |
      | 0     | 400    | """{}"""                                                                       |
      | 99999 | 404    | """{}"""                                                                       |

  Scenario: Validate Response Schema for Successful Operation
    Given path 'v2/pet/1'
    When method GET
    Then status 200
    And match response.id == '#number'
    And match response.name == '#string'
    And match response.photoUrls == '#[] string'
    And match response.category == '#? _ == null || typeof _ == "object"'
    And match response.tags == '#? _ == null || typeof _ == "array"'
    And match response.status == '#string'
    And match response.status == '#? _ == "available" || _ == "pending" || _ == "sold"'

  Scenario: Invalid ID Supplied
    Given path 'v2/pet/0'
    When method GET
    Then status 400

  Scenario: Pet Not Found
    Given path 'v2/pet/99999'
    When method GET
    Then status 404
