# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /user/createWithList_post for http method type POST 
# RoostTestHash=41ad79e90d
# 
# 

# ********RoostGPT********
Feature: User API - Create Users with List Input

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Create users with valid list input
    Given path 'v2/user/createWithList'
    And request
      """
      [
        { 
          "id": <id>, 
          "username": '<username>', 
          "firstName": '<firstName>', 
          "lastName": '<lastName>', 
          "email": '<email>', 
          "password": '<password>', 
          "phone": '<phone>', 
          "userStatus": <userStatus> 
        }
      ]
      """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.headers['Content-Type'] contains 'application/json'
    And match response.body == '##object'

    Examples:
      | read('user_createWithList_post.csv') |

  Scenario: Create users with empty list input
    Given path 'v2/user/createWithList'
    And request []
    When method POST
    Then status 200
    And match response == '#object'
    And match response.headers['Content-Type'] contains 'application/json'
    And match response.body == '##object'

  Scenario: Create users with invalid input
    Given path 'v2/user/createWithList'
    And request
      """
      [
        { 
          "id": 'invalid', 
          "username": 123, 
          "firstName": true, 
          "lastName": null, 
          "email": 456, 
          "password": false, 
          "phone": [], 
          "userStatus": 'invalid' 
        }
      ]
      """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.headers['Content-Type'] contains 'application/json'
    And match response.body == '##object'
