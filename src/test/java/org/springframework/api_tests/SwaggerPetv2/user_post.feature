# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /user_post for http method type POST 
# RoostTestHash=d815599fc6
# 
# 

# ********RoostGPT********
Feature: Create User API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario: Create user with valid data
    Given path '/v2/user'
    And request
      """
      {
        "id": 12345,
        "username": "testuser123",
        "firstName": "John",
        "lastName": "Doe",
        "email": "john.doe@example.com",
        "password": "securePassword123",
        "phone": "+1234567890",
        "userStatus": 1
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with minimal required data
    Given path '/v2/user'
    And request
      """
      {
        "username": "minimaluser",
        "email": "minimal@example.com"
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with all string fields
    Given path '/v2/user'
    And request
      """
      {
        "id": 67890,
        "username": "stringuser",
        "firstName": "Jane",
        "lastName": "Smith",
        "email": "jane.smith@test.com",
        "password": "password456",
        "phone": "555-0123",
        "userStatus": 0
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with null optional fields
    Given path '/v2/user'
    And request
      """
      {
        "id": null,
        "username": "nullfielduser",
        "firstName": null,
        "lastName": null,
        "email": "nullfields@example.com",
        "password": "testpass",
        "phone": null,
        "userStatus": null
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with integer ID and userStatus
    Given path '/v2/user'
    And request
      """
      {
        "id": 999999,
        "username": "integeruser",
        "firstName": "Test",
        "lastName": "User",
        "email": "integer@example.com",
        "password": "integerpass",
        "phone": "123-456-7890",
        "userStatus": 2
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with negative userStatus
    Given path '/v2/user'
    And request
      """
      {
        "id": 11111,
        "username": "negativeuser",
        "firstName": "Negative",
        "lastName": "Status",
        "email": "negative@example.com",
        "password": "negativepass",
        "phone": "987-654-3210",
        "userStatus": -1
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with empty string values
    Given path '/v2/user'
    And request
      """
      {
        "id": 22222,
        "username": "",
        "firstName": "",
        "lastName": "",
        "email": "",
        "password": "",
        "phone": "",
        "userStatus": 0
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with long string values
    Given path '/v2/user'
    And request
      """
      {
        "id": 33333,
        "username": "verylongusernamethatexceedsnormallimits",
        "firstName": "VeryLongFirstNameThatMightExceedTypicalLimits",
        "lastName": "VeryLongLastNameThatMightExceedTypicalLimits",
        "email": "verylongemailaddressthatmightexceedtypicallimits@example.com",
        "password": "verylongpasswordthatmightexceedtypicallimits",
        "phone": "+1234567890123456789",
        "userStatus": 999
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with special characters
    Given path '/v2/user'
    And request
      """
      {
        "id": 44444,
        "username": "special@user#123",
        "firstName": "John-Paul",
        "lastName": "O'Connor",
        "email": "special+user@example-domain.co.uk",
        "password": "P@ssw0rd!@#$%",
        "phone": "+44 (0) 20 7946 0958",
        "userStatus": 1
      }
      """
    When method POST
    Then status 200

  Scenario: Create user with zero values
    Given path '/v2/user'
    And request
      """
      {
        "id": 0,
        "username": "zerouser",
        "firstName": "Zero",
        "lastName": "User",
        "email": "zero@example.com",
        "password": "zeropass",
        "phone": "000-000-0000",
        "userStatus": 0
      }
      """
    When method POST
    Then status 200
