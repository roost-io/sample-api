# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /pet/{petId}_post for http method type POST 
# RoostTestHash=c0bc5294a0
# 
# 

# ********RoostGPT********
Feature: Update Pet with Form Data

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: karate.properties['AUTH_TOKEN'] }

  Scenario Outline: Update pet information with valid form data
    Given path 'v2/pet/<petId>'
    And request
      """
      { 
        name: '<name>', 
        status: '<status>' 
      }
      """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.id == '#number'
    And match response.name == '#string'
    And match response.status == '#string'
    And match response.category == '#object'
    And match response.category.id == '#number'
    And match response.category.name == '#string'
    And match response.tags == '#array'
    And match each response.tags[*].id == '#number'
    And match each response.tags[*].name == '#string'
    And match response.photoUrls == '#array'
    And match each response.photoUrls[*] == '#string'

    Examples:
      | read('pet_petId_post.csv') |

  Scenario: Update pet information with invalid input
    Given path 'v2/pet/invalid'
    And request
      """
      { 
        name: 'Invalid', 
        status: 'unknown' 
      }
      """
    When method POST
    Then status 405
    And match response == '#object'
    And match response.message == '#string'
