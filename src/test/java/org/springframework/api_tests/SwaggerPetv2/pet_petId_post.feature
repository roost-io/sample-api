# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /pet/{petId}_post for http method type POST 
# RoostTestHash=c0bc5294a0
# 
# 

# ********RoostGPT********
Feature: Update pet with form data

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: karate.properties['petstore_auth'] }

  Scenario Outline: Update pet with form data - Valid scenarios
    Given path '/v2/pet/' + <petId>
    And form field name = <name>
    And form field status = <status>
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

    Examples:
      | read('pet_petId_post.csv') |

  Scenario Outline: Update pet with form data - Only name parameter
    Given path '/v2/pet/' + <petId>
    And form field name = <name>
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

    Examples:
      | read('pet_petId_post.csv') |

  Scenario Outline: Update pet with form data - Only status parameter
    Given path '/v2/pet/' + <petId>
    And form field status = <status>
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

    Examples:
      | read('pet_petId_post.csv') |

  Scenario Outline: Update pet with form data - No form parameters
    Given path '/v2/pet/' + <petId>
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

    Examples:
      | read('pet_petId_post.csv') |

  Scenario Outline: Update pet with form data - Invalid input scenarios
    Given path '/v2/pet/' + <petId>
    And form field name = <name>
    And form field status = <status>
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 405
    And match response == '#object'

    Examples:
      | petId | name     | status      |
      | 'abc' | 'Fluffy' | 'available' |
      |    -1 | 'Buddy'  | 'pending'   |
      |     0 | 'Max'    | 'sold'      |
      | null  | 'Rex'    | 'available' |

  Scenario Outline: Update pet with form data - Invalid petId format
    Given path '/v2/pet/' + <petId>
    And form field name = 'TestPet'
    And form field status = 'available'
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 405
    And match response == '#object'

    Examples:
      | petId     |
      | 'invalid' |
      | '12.5'    |
      | 'pet123'  |
      | ''        |

  Scenario Outline: Update pet with form data - Large petId values
    Given path '/v2/pet/' + <petId>
    And form field name = 'TestPet'
    And form field status = 'available'
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

    Examples:
      | read('pet_petId_post.csv') |

  Scenario Outline: Update pet with form data - Empty form field values
    Given path '/v2/pet/' + <petId>
    And form field name = <name>
    And form field status = <status>
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

    Examples:
      | read('pet_petId_post.csv') |

  Scenario: Update pet with form data - Special characters in form fields
    Given path '/v2/pet/1'
    And form field name = 'Pet@#$%^&*()'
    And form field status = 'available-test'
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

  Scenario: Update pet with form data - Long string values
    Given path '/v2/pet/1'
    And form field name = 'ThisIsAVeryLongPetNameThatExceedsNormalLengthLimitsForTestingPurposes'
    And form field status = 'ThisIsAVeryLongStatusValueForTestingPurposes'
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200

  Scenario: Update pet with form data - Unicode characters
    Given path '/v2/pet/1'
    And form field name = 'Пёс'
    And form field status = 'доступен'
    And header Content-Type = 'application/x-www-form-urlencoded'
    When method POST
    Then status 200
