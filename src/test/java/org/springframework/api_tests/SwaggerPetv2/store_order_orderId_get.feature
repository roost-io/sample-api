# ********RoostGPT********

# Test generated by RoostGPT for test karate-pet using AI Type Claude AI and AI Model claude-sonnet-4-20250514
# 
# Feature file generated for /store/order/{orderId}_get for http method type GET 
# RoostTestHash=959486ed06
# 
# 

# ********RoostGPT********
Feature: Store Order API - Get Order by ID

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Get order by valid ID
    Given path '/v2/store/order/<orderId>'
    When method GET
    Then status 200
    And match response.id == '#number'
    And match response.petId == '#number'
    And match response.quantity == '#number'
    And match response.shipDate == '#string'
    And match response.status == '#string'
    And match response.status == '#regex (placed|approved|delivered)'
    And match response.complete == '#boolean'
    And match header Content-Type contains 'application/json'

    Examples:
      | read('store_order_orderId_get.csv') |

  Scenario Outline: Get order by invalid ID - out of range
    Given path '/v2/store/order/<orderId>'
    When method GET
    Then status 400

    Examples:
      | orderId |
      |       0 |
      |      11 |
      |     100 |

  Scenario Outline: Get order by invalid ID - non-integer
    Given path '/v2/store/order/<orderId>'
    When method GET
    Then status 400

    Examples:
      | orderId |
      | abc     |
      |      -1 |
      |     1.5 |

  Scenario: Get order by non-existent ID
    Given path '/v2/store/order/999'
    When method GET
    Then status 404

  Scenario: Validate response structure for successful operation
    Given path '/v2/store/order/1'
    When method GET
    Then status 200
    And match response ==
      """
      {
        id: '#number',
        petId: '#number',
        quantity: '#number',
        shipDate: '#string',
        status: '#string',
        complete: '#boolean'
      }
      """
    And match response.id == '#? typeof _ == "number"'
    And match response.petId == '#? typeof _ == "number"'
    And match response.quantity == '#? typeof _ == "number"'
    And match response.shipDate == '#? typeof _ == "string"'
    And match response.status == '#? typeof _ == "string" && (_ == "placed" || _ == "approved" || _ == "delivered")'
    And match response.complete == '#? typeof _ == "boolean"'

  Scenario: Validate XML response format
    Given path '/v2/store/order/1'
    And header Accept = 'application/xml'
    When method GET
    Then status 200
    And match header Content-Type contains 'application/xml'

  Scenario: Validate JSON response format
    Given path '/v2/store/order/1'
    And header Accept = 'application/json'
    When method GET
    Then status 200
    And match header Content-Type contains 'application/json'
