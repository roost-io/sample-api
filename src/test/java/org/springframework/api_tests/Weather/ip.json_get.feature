# ********RoostGPT********

# Test generated by RoostGPT for test weatherTest using AI Type Claude AI and AI Model claude-3-5-sonnet-20241022
# 
# Feature file generated for /ip.json_get for http method type GET 
# RoostTestHash=5693e62dd1
# 
# 

# ********RoostGPT********
Feature: IP Lookup API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']
    * configure headers = { 'Accept': 'application/json' }

  Scenario Outline: Successful IP lookup with valid parameters
    Given path '/v1/ip.json'
    And param key = authToken
    And param q = '<ip_address>'
    When method GET
    Then status 200
    And match response ==
      """
      {
          ip: '#string',
          type: '#string',
          continent_code: '#string',
          continent_name: '#string', 
          country_code: '#string',
          country_name: '#string',
          is_eu: '#string',
          geoname_id: '#number',
          city: '#string',
          region: '##string',
          lat: '#number',
          lon: '#number',
          tz_id: '#string',
          localtime_epoch: '#number',
          localtime: '#string'
      }
      """
    And match response.ip == '<ip_address>'
    And match response.type == '#? _ == "ipv4" || _ == "ipv6"'
    And match response.continent_code == '#? _.length == 2'
    And match response.country_code == '#? _.length == 2'
    And match response.lat >= -90 && response.lat <= 90
    And match response.lon >= -180 && response.lon <= 180
    And match response.localtime_epoch == '#? _ > 0'
    And match response.localtime matches '^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}$'

    Examples:
      | read('ip.json_get.csv') |

  Scenario: IP lookup without API key
    Given path '/v1/ip.json'
    And param q = '8.8.8.8'
    When method GET
    Then status 401
    And match response.code == 1002
    And match response.message == 'API key not provided'

  Scenario: IP lookup with invalid API key
    Given path '/v1/ip.json'
    And param key = 'invalid_key'
    And param q = '8.8.8.8'
    When method GET
    Then status 401
    And match response.code == 2006
    And match response.message == 'API key provided is invalid'

  Scenario: IP lookup without q parameter
    Given path '/v1/ip.json'
    And param key = authToken
    When method GET
    Then status 400
    And match response.code == 1003
    And match response.message == "Parameter 'q' not provided."

  Scenario: IP lookup with invalid IP address
    Given path '/v1/ip.json'
    And param key = authToken
    And param q = 'invalid_ip'
    When method GET
    Then status 400
    And match response.code == 1006
    And match response.message == "No location found matching parameter 'q'"

  Scenario: IP lookup with exceeded quota
    Given path '/v1/ip.json'
    And param key = authToken
    And param q = '8.8.8.8'
    When method GET
    Then status 403
    And match response.code == '#? _ == 2007 || _ == 2008 || _ == 2009'
    And match response.message == '#? _ == "API key has exceeded calls per month quota." || _ == "API key has been disabled." || _ == "API key does not have access to the resource. Please check pricing page for what is allowed in your API subscription plan."'
