# ********RoostGPT********

# Test generated by RoostGPT for test weather-karate using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /ip.json_get for http method type GET 
# RoostTestHash=5693e62dd1
# 
# 

# ********RoostGPT********
Feature: IP Lookup API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']

  Scenario Outline: Validate IP Lookup API with valid IP address
    Given path 'v1/ip.json'
    And param key = authToken
    And param q = '<ip_address>'
    When method GET
    Then status 200
    And match response.ip == '#string'
    And match response.type == '#string'
    And match response.continent_code == '#string'
    And match response.continent_name == '#string'
    And match response.country_code == '#string'
    And match response.country_name == '#string'
    And match response.is_eu == '##string'
    And match response.geoname_id == '##number'
    And match response.city == '#string'
    And match response.region == '##string'
    And match response.lat == '#number'
    And match response.lon == '#number'
    And match response.tz_id == '#string'
    And match response.localtime_epoch == '##number'
    And match response.localtime == '#string'

    Examples:
      | read('ip.json_get.csv') |

  Scenario: Validate IP Lookup API without IP address
    Given path 'v1/ip.json'
    And param key = authToken
    When method GET
    Then status 400
    And match response.code == 1003
    And match response.message == '#string'

  Scenario: Validate IP Lookup API with invalid API key
    Given path 'v1/ip.json'
    And param key = 'invalid_key'
    And param q = '185.249.71.82'
    When method GET
    Then status 401
    And match response.code == 1002
    And match response.message == '#string'

  Scenario: Validate IP Lookup API with exceeded quota
    Given path 'v1/ip.json'
    And param key = authToken
    And param q = '185.249.71.82'
    When method GET
    Then status 403
    And match response.code == 2007
    And match response.message == '#string'
