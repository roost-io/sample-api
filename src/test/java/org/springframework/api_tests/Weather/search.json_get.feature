# ********RoostGPT********

# Test generated by RoostGPT for test weather-karate using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /search.json_get for http method type GET 
# RoostTestHash=72ffe69306
# 
# 

# ********RoostGPT********
Feature: Search/Autocomplete API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']

  Scenario Outline: Validate successful search with valid query parameter
    Given path 'v1/search.json'
    And param key = authToken
    And param q = '<query>'
    When method GET
    Then status 200
    And match response == '#[]'
    And match each response[*].id == '#number'
    And match each response[*].name == '#string'
    And match each response[*].region == '#string'
    And match each response[*].country == '#string'
    And match each response[*].lat == '#number'
    And match each response[*].lon == '#number'
    And match each response[*].url == '#string'

    Examples:
      | read('search.json_get.csv') |

  Scenario: Validate error response when 'q' parameter is missing
    Given path 'v1/search.json'
    And param key = authToken
    When method GET
    Then status 400
    And match response.code == 1003
    And match response.message == '#string'

  Scenario: Validate error response when API key is missing
    Given path 'v1/search.json'
    And param q = 'London'
    When method GET
    Then status 401
    And match response.code == 1002
    And match response.message == '#string'

  Scenario: Validate error response when API key is invalid
    Given path 'v1/search.json'
    And param key = 'invalid_key'
    And param q = 'London'
    When method GET
    Then status 401
    And match response.code == 2006
    And match response.message == '#string'

  Scenario: Validate error response when API key exceeds quota
    Given path 'v1/search.json'
    And param key = authToken
    And param q = 'London'
    When method GET
    Then status 403
    And match response.code == 2007
    And match response.message == '#string'
