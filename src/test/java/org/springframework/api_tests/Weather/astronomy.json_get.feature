# ********RoostGPT********

# Test generated by RoostGPT for test weather-karate using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /astronomy.json_get for http method type GET 
# RoostTestHash=656c29a7ca
# 
# 

# ********RoostGPT********
Feature: Astronomy API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']

  Scenario Outline: Validate Astronomy API with valid parameters
    Given path 'v1/astronomy.json'
    And param key = authToken
    And param q = '<q>'
    And param dt = '<dt>'
    When method GET
    Then status 200
    And match response.location.name == '#string'
    And match response.location.region == '#string'
    And match response.location.country == '#string'
    And match response.location.lat == '#number'
    And match response.location.lon == '#number'
    And match response.location.tz_id == '#string'
    And match response.location.localtime_epoch == '#number'
    And match response.location.localtime == '#string'
    And match response.astronomy.astro.sunrise == '#string'
    And match response.astronomy.astro.sunset == '#string'
    And match response.astronomy.astro.moonrise == '#string'
    And match response.astronomy.astro.moonset == '#string'
    And match response.astronomy.astro.moon_phase == '#string'
    And match response.astronomy.astro.moon_illumination == '#string'

    Examples:
      | read('astronomy.json_get.csv') |

  Scenario Outline: Validate Astronomy API with missing 'q' parameter
    Given path 'v1/astronomy.json'
    And param key = authToken
    And param dt = '<dt>'
    When method GET
    Then assert responseStatus != 200
    And match response.code == 1003
    And match response.message == '#string'

    Examples:
      | read('astronomy.json_get.csv') |

  Scenario Outline: Validate Astronomy API with invalid API key
    Given path 'v1/astronomy.json'
    And param key = 'invalid_key'
    And param q = '<q>'
    And param dt = '<dt>'
    When method GET
    Then assert responseStatus != 200
    And match response.code == 1002
    And match response.message == '#string'

    Examples:
      | read('astronomy.json_get.csv') |

  Scenario Outline: Validate Astronomy API with exceeded quota
    Given path 'v1/astronomy.json'
    And param key = 'exceeded_quota_key'
    And param q = '<q>'
    And param dt = '<dt>'
    When method GET
    Then assert responseStatus != 200
    And match response.code == 2007
    And match response.message == '#string'

    Examples:
      | read('astronomy.json_get.csv') |
