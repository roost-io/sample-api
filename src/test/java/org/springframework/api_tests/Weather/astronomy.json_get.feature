# ********RoostGPT********

# Test generated by RoostGPT for test weatherTest using AI Type Claude AI and AI Model claude-3-5-sonnet-20241022
# 
# Feature file generated for /astronomy.json_get for http method type GET 
# RoostTestHash=656c29a7ca
# 
# 

# ********RoostGPT********
Feature: Astronomy API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']
    * configure headers = { 'Accept': 'application/json' }

  Scenario Outline: Get astronomy data for valid locations
    Given path '/v1/astronomy.json'
    And param key = authToken
    And param q = '<location>'
    And param dt = '<date>'
    When method GET
    Then status 200
    And match response.location == '#object'
    And match response.location.name == '#string'
    And match response.location.region == '#string'
    And match response.location.country == '#string'
    And match response.location.lat == '#number'
    And match response.location.lon == '#number'
    And match response.location.tz_id == '#string'
    And match response.location.localtime_epoch == '#number'
    And match response.location.localtime == '#string'
    And match response.astronomy == '#object'
    And match response.astronomy.astro == '#object'
    And match response.astronomy.astro.sunrise == '#string'
    And match response.astronomy.astro.sunset == '#string'
    And match response.astronomy.astro.moonrise == '#string'
    And match response.astronomy.astro.moonset == '#string'
    And match response.astronomy.astro.moon_phase == '#string'
    And match response.astronomy.astro.moon_illumination == '#string'

    Examples:
      | read('astronomy.json_get.csv') |

  Scenario Outline: Verify error responses for invalid parameters
    Given path '/v1/astronomy.json'
    And param key = authToken
    And param q = '<location>'
    And param dt = '<date>'
    When method GET
    Then status <status>
    And match response.code == '#number'
    And match response.message == '#string'

    Examples:
      | location | date       | status |
      |          | 2023-12-01 |    400 |
      | London   | 2014-12-31 |    400 |
      | xyz123   | 2023-12-01 |    400 |

  Scenario: Verify unauthorized access
    Given path '/v1/astronomy.json'
    And param q = 'London'
    And param dt = '2023-12-01'
    When method GET
    Then status 401
    And match response.code == '#number'
    And match response.message == '#string'

  Scenario: Verify forbidden access
    Given path '/v1/astronomy.json'
    And param key = 'invalid_key'
    And param q = 'London'
    And param dt = '2023-12-01'
    When method GET
    Then status 403
    And match response.code == '#number'
    And match response.message == '#string'
