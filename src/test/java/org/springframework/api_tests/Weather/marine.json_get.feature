# ********RoostGPT********

# Test generated by RoostGPT for test weatherTest using AI Type Claude AI and AI Model claude-3-5-sonnet-20241022
# 
# Feature file generated for /marine.json_get for http method type GET 
# RoostTestHash=fb78c63880
# 
# 

# ********RoostGPT********
Feature: Marine Weather API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']
    * configure headers = { 'Accept': 'application/json' }

  Scenario Outline: Get marine weather forecast with valid parameters
    Given path '/v1/marine.json'
    And param key = authToken
    And param q = '<latitude>,<longitude>'
    And param days = <days>
    When method GET
    Then status 200
    And match response.location == '#object'
    And match response.location.name == '#string'
    And match response.location.region == '#string'
    And match response.location.country == '#string'
    And match response.location.lat == '#number'
    And match response.location.lon == '#number'
    And match response.location.tz_id == '#string'
    And match response.location.localtime_epoch == '#number'
    And match response.location.localtime == '#string'
    And match response.forecast == '#object'
    And match response.forecast.forecastday == '#[' + days + ']'
    And match each response.forecast.forecastday[*].date == '#string'
    And match each response.forecast.forecastday[*].date_epoch == '#number'
    And match each response.forecast.forecastday[*].day.maxtemp_c == '#number'
    And match each response.forecast.forecastday[*].day.maxtemp_f == '#number'
    And match each response.forecast.forecastday[*].day.mintemp_c == '#number'
    And match each response.forecast.forecastday[*].day.mintemp_f == '#number'
    And match each response.forecast.forecastday[*].day.avgtemp_c == '#number'
    And match each response.forecast.forecastday[*].day.avgtemp_f == '#number'
    And match each response.forecast.forecastday[*].day.maxwind_mph == '#number'
    And match each response.forecast.forecastday[*].day.maxwind_kph == '#number'
    And match each response.forecast.forecastday[*].day.totalprecip_mm == '#number'
    And match each response.forecast.forecastday[*].day.totalprecip_in == '#number'
    And match each response.forecast.forecastday[*].day.avgvis_km == '#number'
    And match each response.forecast.forecastday[*].day.avgvis_miles == '#number'
    And match each response.forecast.forecastday[*].day.avghumidity == '#number'
    And match each response.forecast.forecastday[*].day.daily_will_it_rain == '#number'
    And match each response.forecast.forecastday[*].day.daily_chance_of_rain == '#number'
    And match each response.forecast.forecastday[*].day.daily_will_it_snow == '#number'
    And match each response.forecast.forecastday[*].day.daily_chance_of_snow == '#number'
    And match each response.forecast.forecastday[*].day.condition.text == '#string'
    And match each response.forecast.forecastday[*].day.condition.icon == '#string'
    And match each response.forecast.forecastday[*].day.condition.code == '#number'
    And match each response.forecast.forecastday[*].day.uv == '#number'

    Examples:
      | read('marine.json_get.csv') |

  Scenario Outline: Get marine weather forecast with optional parameters
    Given path '/v1/marine.json'
    And param key = authToken
    And param q = '<latitude>,<longitude>'
    And param days = <days>
    And param dt = '<date>'
    And param hour = <hour>
    And param lang = '<lang>'
    When method GET
    Then status 200
    And match response.location == '#object'
    And match response.forecast == '#object'

    Examples:
      | read('marine.json_get.csv') |

  Scenario Outline: Verify error responses for invalid parameters
    Given path '/v1/marine.json'
    And param key = authToken
    And param q = '<q>'
    And param days = <days>
    When method GET
    Then status <status>
    And match response.code == <error_code>
    And match response.message == '#string'

    Examples:
      | q            | days | status | error_code |
      |              |    1 |    400 |       1003 |
      | invalid      |    1 |    400 |       1006 |
      | 40.71,-74.01 |    8 |    400 |       1005 |

  Scenario: Verify unauthorized access
    Given path '/v1/marine.json'
    And param q = '40.71,-74.01'
    And param days = 1
    When method GET
    Then status 401
    And match response.code == 1002
    And match response.message == 'API key not provided'
