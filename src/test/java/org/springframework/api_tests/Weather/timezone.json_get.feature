# ********RoostGPT********

# Test generated by RoostGPT for test weather-karate using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /timezone.json_get for http method type GET 
# RoostTestHash=df6b1e5ce9
# 
# 

# ********RoostGPT********
Feature: Time Zone API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken = karate.properties['key']

  Scenario Outline: Validate successful response for valid query parameter
    Given path 'v1/timezone.json'
    And param key = authToken
    And param q = '<query>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.name == '##string'
    And match response.region == '##string'
    And match response.country == '##string'
    And match response.lat == '##number'
    And match response.lon == '##number'
    And match response.tz_id == '##string'
    And match response.localtime_epoch == '##number'
    And match response.localtime == '##string'

    Examples:
      | read('timezone.json_get.csv') |

  Scenario Outline: Validate error response for missing query parameter
    Given path 'v1/timezone.json'
    And param key = authToken
    When method GET
    Then assert responseStatus != 200
    And match response.error == '#object'
    And match response.error.code == 1003
    And match response.error.message == '##string'

  Scenario Outline: Validate error response for invalid API key
    Given path 'v1/timezone.json'
    And param key = 'invalid_key'
    And param q = '<query>'
    When method GET
    Then assert responseStatus != 200
    And match response.error == '#object'
    And match response.error.code == 1002
    And match response.error.message == '##string'

    Examples:
      | read('timezone.json_get.csv') |

  Scenario Outline: Validate error response for exceeded API key quota
    Given path 'v1/timezone.json'
    And param key = 'exceeded_quota_key'
    And param q = '<query>'
    When method GET
    Then assert responseStatus != 200
    And match response.error == '#object'
    And match response.error.code == 2007
    And match response.error.message == '##string'

    Examples:
      | read('timezone.json_get.csv') |
