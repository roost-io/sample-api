# ********RoostGPT********

# Test generated by RoostGPT for test akshat-weather-api using AI Type Azure Open AI and AI Model Inference
# 
# Feature file generated for /future.json_get for http method type GET 
# RoostTestHash=f812784c59
# 
# 

# ********RoostGPT********
Feature: Future Weather API

Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * def authToken =  karate.properties['key']

Scenario Outline: Test Future Weather API with valid parameters
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = authToken
    When method get
    Then status <status>
    And match response == """
    {
        location: '#? _ == null || typeof _ == "object"',
        forecast: '#? _ == null || typeof _ == "object"'
    }
    """

    Examples:
    | q       | dt          | lang | status |
    | '10001' | '2023-12-25'| 'en' | 200    |
    | '10001' | '2023-12-25'| ''   | 200    |
    | '10001' | ''          | 'en' | 200    |
    | '10001' | ''          | ''   | 200    |

Scenario Outline: Test Future Weather API with invalid parameters
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = authToken
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | status |
    | ''      | '2023-12-25'| 'en' | 400    |
    | '10001' | '2023-12-25'| 'en' | 400    |
    | '10001' | '2023-12-25'| ''   | 400    |
    | '10001' | ''          | 'en' | 400    |
    | '10001' | ''          | ''   | 400    |

Scenario Outline: Test Future Weather API with missing API key
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | status |
    | '10001' | '2023-12-25'| 'en' | 401    |
    | '10001' | '2023-12-25'| ''   | 401    |
    | '10001' | ''          | 'en' | 401    |
    | '10001' | ''          | ''   | 401    |

Scenario Outline: Test Future Weather API with invalid API key
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = '<key>'
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | key  | status |
    | '10001' | '2023-12-25'| 'en' | 'invalid_key' | 401    |
    | '10001' | '2023-12-25'| ''   | 'invalid_key' | 401    |
    | '10001' | ''          | 'en' | 'invalid_key' | 401    |
    | '10001' | ''          | ''   | 'invalid_key' | 401    |

Scenario Outline: Test Future Weather API with expired API key
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = '<key>'
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | key  | status |
    | '10001' | '2023-12-25'| 'en' | 'expired_key' | 403    |
    | '10001' | '2023-12-25'| ''   | 'expired_key' | 403    |
    | '10001' | ''          | 'en' | 'expired_key' | 403    |
    | '10001' | ''          | ''   | 'expired_key' | 403    |

Scenario Outline: Test Future Weather API with exceeded API key quota
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = '<key>'
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | key  | status |
    | '10001' | '2023-12-25'| 'en' | 'exceeded_key' | 403    |
    | '10001' | '2023-12-25'| ''   | 'exceeded_key' | 403    |
    | '10001' | ''          | 'en' | 'exceeded_key' | 403    |
    | '10001' | ''          | ''   | 'exceeded_key' | 403    |

Scenario Outline: Test Future Weather API with disabled API key
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = '<key>'
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | key  | status |
    | '10001' | '2023-12-25'| 'en' | 'disabled_key' | 403    |
    | '10001' | '2023-12-25'| ''   | 'disabled_key' | 403    |
    | '10001' | ''          | 'en' | 'disabled_key' | 403    |
    | '10001' | ''          | ''   | 'disabled_key' | 403    |

Scenario Outline: Test Future Weather API with invalid API key access
    Given path '/v1/future.json'
    And param q = '<q>'
    And param dt = '<dt>'
    And param lang = '<lang>'
    And param key = '<key>'
    When method get
    Then status <status>
    And match response == """
    {
        code: '#? _ == null || typeof _ == "number"',
        message: '#? _ == null || typeof _ == "string"'
    }
    """

    Examples:
    | q       | dt          | lang | key  | status |
    | '10001' | '2023-12-25'| 'en' | 'invalid_access_key' | 403    |
    | '10001' | '2023-12-25'| ''   | 'invalid_access_key' | 403    |
    | '10001' | ''          | 'en' | 'invalid_access_key' | 403    |
    | '10001' | ''          | ''   | 'invalid_access_key' | 403    |
