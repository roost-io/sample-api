# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /me/collaborations_get for http method type GET 
# RoostTestHash=ff854080c5
# 
# 

# ********RoostGPT********
Feature: Collaborations Endpoint

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase
    * def authToken = karate.properties['circle-token']

  Scenario: Valid GET request to retrieve collaborations
    Given path '/me/collaborations'
    And param circle-token = authToken
    When method GET
    Then status 200
    And match response == '#[] Collaboration'
    And match each response[*].id == '#? _ == null || typeof _ == "string"'
    And match each response[*].vcs-type == '#string'
    And match each response[*].name == '#string'
    And match each response[*].avatar_url == '#string'
    And match each response[*].slug == '#string'

  Scenario: Default error response for invalid GET request
    Given path '/me/collaborations'
    And param circle-token = authToken
    # Using an invalid token for demonstration
    * def invalidAuthToken = 'INVALID_TOKEN'
    And param circle-token = invalidAuthToken
    When method GET
    Then status >= 400
    And match response.message == '#string'

  Scenario Outline: Valid GET request with different authorization tokens
    Given path '/me/collaborations'
    And param circle-token = <authToken>
    When method GET
    Then status 200
    And match response == '#[] Collaboration'
    And match each response[*].id == '#? _ == null || typeof _ == "string"'
    And match each response[*].vcs-type == '#string'
    And match each response[*].name == '#string'
    And match each response[*].avatar_url == '#string'
    And match each response[*].slug == '#string'

    Examples:
      | read('me_collaborations_get.csv') |
