# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=d36b00fabb
# 
# 

# ********RoostGPT********
Feature: Insights API - Summary Metrics and Trends
  This feature file tests the Insights API endpoint for summary metrics and trends.

  Background:
    Given def urlBase = karate.properties['API_HOST_URL']
    And url urlBase
    And def authToken = karate.properties['Circle-Token']
    And def username = karate.properties['API_AUTH_USERNAME']
    And def password = karate.properties['API2_AUTH_PASSWORD']
    And def credentials = username + ':' + password
    And def encoded = Java.type('java.util.Base64').getEncoder().encodeToString(credentials.getBytes())
    And def basicAuthHeader = 'Basic ' + encoded
    And configure headers = """
    {
      "Circle-Token": "#(authToken)",
      "Authorization": "#(basicAuthHeader)"
    }
    """

  Scenario Outline: Validate successful response with optional query parameters
    Given path 'insights/pages/<project-slug>/summary'
    And param reporting-window = '<reporting-window>'
    And param branches = """[
      <branches>
    ]"""
    And param workflow-names = """[
      <workflow-names>
    ]"""
    When method GET
    Then status 200
    And match response.org_id == '#string'

    Examples:
      | project-slug  | reporting-window | branches                 | workflow-names     |
      | project-alpha | week             | ['main', 'dev']          | ['build', 'test']  |
      | project-beta  | month            | ['feature1', 'feature2'] | ['deploy', 'test'] |
      | project-gamma | day              | ['hotfix', 'release']    | ['lint', 'test']   |

  Scenario: Validate response structure for mandatory query parameters
    Given path 'insights/pages/project-basic/summary'
    And param reporting-window = 'month'
    When method GET
    Then status 200
    And match response.org_id == '#string'
    And match response.reporting_window == 'month'

  Scenario: Validate authorization failure for missing token
    Given configure headers = """
    {
      "Authorization": "#(basicAuthHeader)"
    }
    """
    Given path 'insights/pages/project-basic/summary'
    When method GET
    Then status 401
    And match response.message == 'Unauthorized'

  Scenario: Validate error response for invalid project-slug
    Given path 'insights/pages/invalid-slug/summary'
    And param reporting-window = 'week'
    When method GET
    Then status 404
    And match response.error_code == 'NOT_FOUND'
