# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=d36b00fabb
# 
# 

# ********RoostGPT********
Feature: Insights API - Summary Metrics and Trends
  This feature file tests the Insights API endpoint for summary metrics and trends.

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * def authToken = karate.properties['Circle-Token']
    * def username = karate.properties['API_AUTH_USERNAME']
    * def password = karate.properties['API2_AUTH_PASSWORD']
    * def credentials = username + ':' + password
    * def encoded = Java.type('java.util.Base64').getEncoder().encodeToString(credentials.getBytes())
    * def authHeader = 'Basic ' + encoded

  Scenario Outline: Validate successful response with optional query parameters
    Given url '#(urlBase)/insights/pages/<project-slug>/summary'
    And param reporting-window = '<reporting-window>'
    And param branches = <branches>
    And param workflow-names = <workflow-names>
    * configure headers =
      """
      {
          Authorization: '#(authHeader)',
          Circle-Token: '#(authToken)'
      }
      """
    When method GET
    Then status 200
    And match response.org_id == '#string'

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Validate response for missing optional query parameters
    Given url '#(urlBase)/insights/pages/project-example-3/summary'
    * configure headers =
      """
      {
          Authorization: '#(authHeader)',
          Circle-Token: '#(authToken)'
      }
      """
    When method GET
    Then status 200
    And match response.org_id == '#string'
