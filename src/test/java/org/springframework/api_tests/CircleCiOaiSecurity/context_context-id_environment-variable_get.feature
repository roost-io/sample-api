# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}/environment-variable_get for http method type GET 
# RoostTestHash=557b8b225f
# 
# 

# ********RoostGPT********
Feature: Validate Environment Variable List API

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase
    * def username = karate.properties['API_AUTH_USERNAME']
    * def password = karate.properties['API2_AUTH_PASSWORD']
    * def credentials = username+':'+password
    * def encoded = Java.type('java.util.Base64').getEncoder().encodeToString(credentials.getBytes())
    * def authHeader = 'Basic ' + encoded
    * configure headers = { Authorization: '#(authHeader)' }

  Scenario Outline: Validate environment variable listing with valid context-id and optional page-token
    Given path '/context/<context-id>/environment-variable'
    And param page-token = <page-token>
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match each response.items[*].variable == '#string'
    And match each response.items[*].created_at == '#date'
    And match each response.items[*].updated_at == '#date'
    And match each response.items[*].context_id == '#uuid'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_context-id_environment-variable_get.csv') |

  Scenario: Validate environment variable listing with missing context-id
    Given path '/context/'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario: Validate environment variable listing with invalid context-id
    Given path '/context/invalid-context-id/environment-variable'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Validate response schema for error response (default response)
    Given path '/context/invalid-context-id/environment-variable'
    When method GET
    Then status 400
    And match response == { message: '#string' }
