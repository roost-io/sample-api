# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}/environment-variable_get for http method type GET 
# RoostTestHash=557b8b225f
# 
# 

# ********RoostGPT********
Feature: Environment Variable API Tests

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * def username = karate.properties['API_AUTH_USERNAME']
    * def password = karate.properties['API2_AUTH_PASSWORD']
    * def credentials = username + ':' + password
    * def encoded = Java.type('java.util.Base64').getEncoder().encodeToString(credentials.getBytes())
    * def authHeader = 'Basic ' + encoded
    * configure headers = { Authorization: '#(authHeader)', Accept: 'application/json' }
    * url urlBase

  Scenario Outline: List environment variables with valid context-id and optional page-token
    Given path 'context/<context-id>/environment-variable'
    And param page-token = '<page-token>'
    When method GET
    Then status 200
    And match response.items == '#[] object'
    And match each response.items[*].variable == '#string'
    And match each response.items[*] contains """
    {
      created_at: '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}Z',
      updated_at: '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}\\.[0-9]{3}Z',
      context_id: '#uuid',
      variable: '#string'
    }
    """

    Examples:
      | context-id           | page-token             |
      | 'valid-context-id-1' | 'optional-page-token'  |
      | 'valid-context-id-2' | 'another-page-token'   |

  Scenario: Verify authorization failure with incorrect credentials
    Given configure headers = { Authorization: 'Basic invalidBase64Value', Accept: 'application/json' }
    And path 'context/invalid-context-id/environment-variable'
    When method GET
    Then status 401
    And match response contains """
    {
      message: 'Unauthorized access',
      error_code: 401
    }
    """

  Scenario: Validate proper error response for invalid context ID
    Given path 'context/invalid-context-id/environment-variable'
    When method GET
    Then status 404
    And match response contains """
    {
      message: 'Context not found',
      error_code: 404
    }
    """
