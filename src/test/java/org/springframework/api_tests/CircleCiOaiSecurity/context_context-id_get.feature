# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=d311758cf3
# 
# 

# ********RoostGPT********
Feature: Get Context API

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Validating the GET Context API with valid context ID
    Given path '/context/<context-id>'
    And param 'circle-token' = karate.properties['CIRCLE_TOKEN']
    When method GET
    Then status 200
    And match response == '#object'
    And match response.id == '#uuid'
    And match response.name == '#string'
    And match response.created_at == '#string'
    And match response.created_at == '#regex ^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z$'

    Examples:
      | read('context_context-id_get.csv') |

  Scenario: Validating the GET Context API with invalid context ID
    Given path '/context/invalid-id'
    And param 'circle-token' = karate.properties['CIRCLE_TOKEN']
    When method GET
    Then status 404
    And match response == '#object'
    And match response.message == '#string'

  Scenario: Validating the GET Context API without required headers
    Given path '/context/<context-id>'
    When method GET
    Then status 400
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | context-id                             |
      | 'b29c75dd-0362-43a2-a5f2-adf15d14e68e' |

  Scenario: Validating default error response with unexpected inputs
    Given path '/context/<context-id>'
    And param 'circle-token' = 'invalid-token'
    When method GET
    Then status 401
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | context-id                             |
      | 'b29c75dd-0362-43a2-a5f2-adf15d14e68e' |
