# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=ae15e2262e
# 
# 

# ********RoostGPT********
Feature: Context API Testing

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase
    * def authToken = +(karate.properties['Circle-Token'] || 'AUTH_TOKEN')
    * configure headers = { Authorization: '#(authToken)' }

  Scenario Outline: List contexts with query parameters
    Given path 'context'
    And param 'owner-id' = <owner_id>
    And param 'owner-slug' = <owner_slug>
    And param 'owner-type' = <owner_type>
    And param 'page-token' = <page_token>
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match each response.items[*].id == '#string'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#string'
    And match each response.items[*].created_at == '#date-time'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_get.csv') |

  Scenario: Error response for unauthorized access
    Given path 'context'
    When method GET
    Then status 401
    And match response.message == '#string'

  Scenario Outline: Error response for invalid query parameter
    Given path 'context'
    And param 'owner-id' = <invalid_owner_id>
    When method GET
    Then status 400
    And match response.message == '#string'

    Examples:
      | invalid_owner_id |
      | 'INVALID_ID'     |
      | '12345-INVALID'  |
