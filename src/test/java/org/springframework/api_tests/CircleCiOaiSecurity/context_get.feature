# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=ae15e2262e
# 
# 

# ********RoostGPT********
Feature: List contexts for an owner

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase
    * def authToken = karate.properties['Circle-Token']
    * configure headers = { Circle-Token: '#(authToken)', Accept: 'application/json' }

  Scenario Outline: List contexts with all valid query parameters
    Given path '/context'
    And param 'owner-id' = '<owner_id>'
    And param 'owner-slug' = '<owner_slug>'
    And param 'owner-type' = '<owner_type>'
    And param 'page-token' = '<page_token>'
    When method GET
    Then status 200
    And assert karate.sizeOf(response.items) >= 0
    And match response.items == '#? _ == null || typeof _ == "array"'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#string'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'
    And assert karate.sizeOf(response) >= 2

    Examples:
      | read('context_get.csv') |

  Scenario Outline: List contexts with missing query parameters
    Given path '/context'
    And param 'owner-type' = '<owner_type>'
    And param 'page-token' = '<page_token>'
    When method GET
    Then status 200
    And assert karate.sizeOf(response.items) >= 0
    And match response.items == '#? _ == null || typeof _ == "array"'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#string'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'
    And assert karate.sizeOf(response) >= 2

    Examples:
      | read('context_get.csv') |

  Scenario: Error response when the endpoint is accessed with invalid query parameters
    Given path '/context'
    And param 'owner-id' = 'invalid-uuid'
    When method GET
    Then status != 200
    And match response.message == '##string'
    And assert karate.sizeOf(response) >= 1
