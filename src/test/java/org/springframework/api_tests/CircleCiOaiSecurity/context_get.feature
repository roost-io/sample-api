# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=ae15e2262e
# 
# 

# ********RoostGPT********
Feature: List contexts
  This feature tests the functionality of the GET /context API endpoint.

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * configure headers = { 'Circle-Token': karate.properties['Circle-Token'] }
    * url urlBase

  Scenario Outline: List contexts with valid query parameters
    Given path '/context'
    And param 'owner-id' = <owner_id> # UUID format
    And param 'owner-slug' = <owner_slug> # String format
    And param 'owner-type' = <owner_type> # String format
    And param 'page-token' = <page_token> # Nullable String
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match response.items[*].id == '#uuid'
    And match response.items[*].name == '#string'
    And match response.items[*].created_at == '#string'
    And match response.items[*].created_at == '#regex ^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z$'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_get.csv') |

  Scenario: Error response when no query parameters provided
    Given path '/context'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Error response with invalid query parameter values
    Given path '/context'
    And param 'owner-id' = 'invalid-uuid'
    And param 'owner-type' = 'unknown_type'
    When method GET
    Then status 400
    And match response.message == '#string'
