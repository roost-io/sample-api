# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=69c32ff4fa
# 
# 

# ********RoostGPT********
Feature: Context API Tests

  Background:
    * def urlBase = karate.properties['API_BASE_URL']
    * configure headers = { Authorization: karate.properties['Circle-Token'] }

  Scenario Outline: List contexts successfully with valid parameters
    Given url urlBase + '/context'
    And param owner-id = '<owner_id>'
    And param owner-slug = '<owner_slug>'
    And param owner-type = '<owner_type>'
    And param page-token = '<page_token>'
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '##date-time'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_get.csv') |

  Scenario: Access contexts API without authorization
    Given url urlBase + '/context'
    When method GET
    Then status 401
    And match response.error == '#string'

  Scenario Outline: Invalid parameters respond with error
    Given url urlBase + '/context'
    And param owner-id = '<invalid_owner_id>'
    And param owner-slug = '<invalid_owner_slug>'
    And param owner-type = '<invalid_owner_type>'
    When method GET
    Then status 400
    And match response.error == '#string'

    Examples:
      | invalid_owner_id   | invalid_owner_slug | invalid_owner_type |
      | 'not-a-valid-uuid' | null               | 'account'          |
      | null               | null               | 'unsupported-type' |

  Scenario: Server error response
    Given url urlBase + '/context'
    And param owner-id = 'c65b68ef-e73b-4bf2-be9a-7a322a9df150'
    And param page-token = 'INVALID_TOKEN'
    When method GET
    Then status 500
    And match response.error == '#string'

  Scenario: Validate response structure for unexpected error
    Given url urlBase + '/context'
    When method GET
    Then status 500
    And match response.message == '#string'
