# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=ae15e2262e
# 
# 

# ********RoostGPT********
Feature: RESTful API Validation - List Contexts Endpoint

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase
    * def authToken = karate.properties['Circle-Token']
    * configure headers = { Authorization: '#(authToken)' }

  Scenario Outline: Validate List Contexts API with various query parameters
    Given path '/context'
    And param 'owner-id' = <owner_id>
    And param 'owner-slug' = <owner_slug>
    And param 'owner-type' = <owner_type>
    And param 'page-token' = <page_token>
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#dateTime'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_get.csv') |

  Scenario: Validate missing required query parameters in request to List Contexts API
    Given path '/context'
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match response.items.length == 0
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

  Scenario Outline: Validate invalid owner-id formats
    Given path '/context'
    And param 'owner-id' = <invalid_owner_id>
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match response.items.length == 0
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | read('context_get.csv') |

  Scenario: Validate empty page-token query parameter
    Given path '/context'
    And param 'page-token' = ''
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

  Scenario: Validate error response for unsupported owner-type
    Given path '/context'
    And param 'owner-type' = 'unsupported-type'
    When method GET
    Then status 200
    And match response.items == '#[]'
    And match response.items.length == 0
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

  Scenario: Validate error response handling for server-side error
    Given path '/context'
    And param 'owner-id' = 'invalid-uuid-for-error'
    When method GET
    Then status 500
    And match response.message == '#string'
