# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circleci-OAI-security using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=69c32ff4fa
# 
# 

# ********RoostGPT********
Feature: Test Context API Endpoint

  Background:
    * def urlBase = karate.properties['api_host_url']
    * url urlBase
    And header Authorization = 'Bearer ' + karate.properties['Circle-Token']

  Scenario Outline: Verify GET to list contexts API endpoint with various query parameters
    Given path '/context'
    And param 'owner-id' = '<owner-id>'
    And param 'owner-slug' = '<owner-slug>'
    And param 'owner-type' = '<owner-type>'
    And param 'page-token' = '<page-token>'
    When method GET
    Then status <expectedStatus>
    And match response.items == '#[] object'
    And match each response.items[*].id == '#string'
    And match each response.items[*].name == '#string'
    And match each response.items[*].created_at == '#string'
    And match response.next_page_token == '#? _ == null || typeof _ == "string"'

    Examples:
      | owner-id                               | owner-slug        | owner-type     | page-token | expectedStatus |
      | 'b9291e0d-a11e-41fb-8517-c545388b5953' |                   |                |            |            200 |
      |                                        | 'circleci-public' | 'organization' | 'abc123'   |            200 |
      | 'invalid-id-format'                    |                   |                |            |            400 |

  Scenario: Verify default error response for invalid owner-id
    Given path '/context'
    And param 'owner-id' = 'invalid-uuid'
    When method GET
    Then status 400
    And match response.error == '#string'

  Scenario: Verify forbidden error response
    Given path '/context'
    And param 'owner-id' = 'b9291e0d-a11e-41fb-8517-c545388b5953'
    And param 'owner-slug' = 'circleci-public'
    When method GET
    Then status 403
    And match response.error == 'Forbidden'

  Scenario Outline: Verify error responses for invalid or missing parameters
    Given path '/context'
    And param 'owner-id' = '<owner-id>'
    And param 'owner-slug' = '<owner-slug>'
    And param 'owner-type' = '<owner-type>'
    And param 'page-token' = '<page-token>'
    When method GET
    Then status <expectedStatus>
    And match response.error == '<errorMessage>'

    Examples:
      | owner-id | owner-slug | owner-type     | page-token | expectedStatus | errorMessage                        |
      | ''       | 'slug'     | 'organization' | ''         |            400 | 'OwnerID must be a valid UUID.'     |
      |          |            |                |            |            400 | 'Unexpected request body provided.' |
      | null     | null       | null           | null       |            401 | 'Unauthorized'                      |
