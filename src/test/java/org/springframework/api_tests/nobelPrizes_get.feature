# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate-apitest using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=4940f5c55b
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario: Get all Nobel Prizes
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    When method GET
    Then status 200
    And match response.nobelPrizes == '#array'
    And match each response.nobelPrizes contains
      """
      {
        awardYear: '#number',
        category: '#object',
        categoryFullName: '#object',
        dateAwarded: '#string',
        prizeAmount: '#number',
        prizeAmountAdjusted: '#number',
        topMotivation: '#object',
        laureates: '#array'
      }
      """
    And match response.meta == '#object'
    And match response.links == '#array'

  Scenario Outline: Get Nobel Prizes by year
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    And param nobelPrizeYear = <year>
    When method GET
    Then status 200
    And match each response.nobelPrizes contains { awardYear: <year> }

    Examples:
      | year |
      | 1901 |
      | 2020 |

  Scenario Outline: Get Nobel Prizes by category
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    And param nobelPrizeCategory = <category>
    When method GET
    Then status 200
    And match each response.nobelPrizes[*].category contains { en: <categoryName> }

    Examples:
      | category | categoryName             |
      | che      | "Chemistry"              |
      | eco      | "Economics"              |
      | lit      | "Literature"             |
      | pea      | "Peace"                  |
      | phy      | "Physics"                |
      | med      | "Physiology or Medicine" |

  Scenario: Get Nobel Prizes with pagination
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    And param offset = 10
    And param limit = 5
    When method GET
    Then status 200
    And match response.nobelPrizes == '#[5]'
    And match response.meta.offset == 10
    And match response.meta.limit == 5

  Scenario: Get Nobel Prizes with sorting
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    And param sort = 'desc'
    When method GET
    Then status 200
    And match response.nobelPrizes[0].awardYear > response.nobelPrizes[1].awardYear

  Scenario: Get Nobel Prizes with invalid parameters
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    And param invalidParam = 'invalid'
    When method GET
    Then status 400
    And match response ==
      """
      {
        code: '#string',
        message: '#string'
      }
      """

  Scenario: Get Nobel Prizes with non-existent year
    Given path '/2.1/nobelPrizes'
    And header Authorization = authToken
    And param nobelPrizeYear = 1800
    When method GET
    Then status 404
    And match response ==
      """
      {
        code: '#string',
        message: '#string'
      }
      """
