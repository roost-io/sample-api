# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate-apitest using AI Type Claude AI and AI Model claude-3-haiku-20240307
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=4940f5c55b
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase

  Scenario: Get all Nobel Prizes
    Given path '/2.1/nobelPrizes'
    When method GET
    Then status 200
    And match response.nobelPrizes[*].awardYear contains [1989]
    And match response.meta.count > 0

  Scenario: Get Nobel Prizes by year
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 2015
    When method GET
    Then status 200
    And match response.nobelPrizes[*].awardYear contains [2015]
    And match response.meta.nobelPrizeYear == 2015

  Scenario: Get Nobel Prizes by year range
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 2010
    And param yearTo = 2015
    When method GET
    Then status 200
    And match response.nobelPrizes[*].awardYear >= 2010
    And match response.nobelPrizes[*].awardYear <= 2015
    And match response.meta.nobelPrizeYear == 2010
    And match response.meta.yearTo == 2015

  Scenario: Get Nobel Prizes by category
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeCategory = 'phy'
    When method GET
    Then status 200
    And match response.nobelPrizes[*].category.en contains 'Physics'

  Scenario: Get Nobel Prizes with pagination
    Given path '/2.1/nobelPrizes'
    And param offset = 5
    And param limit = 10
    When method GET
    Then status 200
    And match response.meta.offset == 5
    And match response.meta.limit == 10
    And match response.nobelPrizes.length == 10

  Scenario: Get Nobel Prizes in CSV format
    Given path '/2.1/nobelPrizes'
    And param format = 'csv'
    When method GET
    Then status 200
    And match response contains '"awardYear","category.en","categoryFullName.en","dateAwarded","prizeAmount","prizeAmountAdjusted","topMotivation.en"'

  Scenario: Get Nobel Prizes in Swedish CSV format
    Given path '/2.1/nobelPrizes'
    And param format = 'csv'
    And param csvLang = 'se'
    When method GET
    Then status 200
    And match response contains '"awardYear","category.se","categoryFullName.se","dateAwarded","prizeAmount","prizeAmountAdjusted","topMotivation.se"'

  Scenario: Get Nobel Prizes with invalid parameters
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1900
    When method GET
    Then status 400
    And match response == { "code": "404", "message": "There is not Laureate born that date" }

  Scenario: Get Nobel Prizes with non-existent year
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 2100
    When method GET
    Then status 404
    And match response == { "code": "404", "message": "There is not Laureate born that date" }

  Scenario: Get Nobel Prizes with invalid category
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeCategory = 'invalid'
    When method GET
    Then status 422
    And match response == { "code": "404", "message": "There is not Laureate born that date" }
