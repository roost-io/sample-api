# ********RoostGPT********

# Test generated by RoostGPT for test azure-karate-apitest using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API test

Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase

Scenario Outline: Validate the GET /nobelPrizes endpoint with various query parameters

    Given path '/2.1/nobelPrizes'
    And params {offset: '<offset>', limit: '<limit>', sort: '<sort>', nobelPrizeYear: '<year>', yearTo: '<yearTo>', nobelPrizeCategory: '<category>', format: '<format>', csvLang: '<csvLang>'}
    When method get
    Then status <statusCode>
    And match response contains {nobelPrizes: '#array'}

    Examples:
        | offset | limit | sort | year | yearTo | category | format | csvLang | statusCode |
        | 2      | 10    | 'asc'| 2000 | 2020   | 'eco'    | 'json' | 'en'    | 200        |
        | 5      | 20    | 'desc'| 2010| 2021   | 'phy'    | 'json' | 'en'    | 200        |
        
Scenario Outline: Validate nobel prize object in the response
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = '<year>'
    When method get
    Then status 200
    And match each $.nobelPrizes[*] contains {awardYear: '#number', category: '#object', categoryFullName: '#object', dateAwarded: '#? _.matches(/^\\d{4}-\\d{2}-\\d{2}$/)', prizeAmount: '#number', prizeAmountAdjusted: '#number'}

    Examples:
        | year |
        | 2000 |
        | 2010 |
        | 2021 |
