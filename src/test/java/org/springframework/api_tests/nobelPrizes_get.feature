# ********RoostGPT********

# Test generated by RoostGPT for test karate-sample-api using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes API Test

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * header Authorization = karate.properties['AUTH_TOKEN']


  Scenario Outline: Test Get Nobel Prizes Endpoint with valid inputs
    Given path '/2.1/nobelPrizes'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    And param format = <format>
    And param csvLang = <csvLang>
    When method get
    Then status 200
    And match response contains {"meta": {"offset": "#(offset)", "limit": "#(limit)", "nobelPrizeYear": "#(nobelPrizeYear)", "yearTo": "#(yearTo)", "nobelPrizeCategory": "#(nobelPrizeCategory)"}}
    And match each response.nobelPrizes.awardYear == '#integer'
    And match each response.nobelPrizes.prizeAmount == '#integer'
    And match each response.nobelPrizes.prizeAmountAdjusted == '#integer'
    And match each response.nobelPrizes.laureates.id == '#integer'
    

    Examples: 
      | offset | limit | sort | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang |
      | 1      | 20    | 'asc' | 1901           | 2000   | 'eco'              | 'json' | 'en'    |
      | 2      | 30    | 'desc' | 1950          | 2000   | 'phy'              | 'json' | 'en'    | 

  Scenario: Test Get Nobel Prizes Endpoint with invalid inputs
    Given path '/2.1/nobelPrizes'
    And param limit = 'zero'
    When method get
    Then status 400
    And match response contains {"code": "400", "message": "There is not Laureate born that date"}

  Scenario: Test Get Nobel Prizes Endpoint with non-existing year
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1800
    When method get
    Then status 404
    And match response contains {"code": "404", "message": "There is not Laureate born that date"}

  Scenario: Test Get Nobel Prizes Endpoint with unprocessable year range
    Given path '/2.1/nobelPrizes'
    And param nobelPrizeYear = 1901
    And param yearTo = 1800
    When method get
    Then status 422
    And match response contains {"code": "422", "message": "There is not Laureate born that date"}
