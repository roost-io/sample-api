# ********RoostGPT********

# Test generated by RoostGPT for test azure-karate-apitest using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=977dd819cb
# 
# 

# ********RoostGPT********
Feature: Nobel Prizes Endpoint Tests

  Background:
    * def urlBase = karate.properties['url.base'] || 'http://localhost:4010'
    * url urlBase
    * def authHeader = { Authorization: '#(karate.properties['AUTH_TOKEN'])' }

  Scenario Outline: Validate Correctness of Nobel Prizes Endpoint
    Given path '2.1/nobelPrizes'
    And params { offset: '#(offset)', limit: '#(limit)', sort: '#(sort)', 
                      nobelPrizeYear: '#(nobelPrizeYear)', nobelPrizeCategory: '#(nobelPrizeCategory)', 
                      format: '#(format)', csvLang: '#(csvLang)' }
    And headers authHeader
    When method get
    Then status 200
    And match response contains { nobelPrizes: '#(nobelPrizes)' }
    And match each response.nobelPrizes[*] contains {awardYear: '#String', category: '#String', categoryFullName: '#String',
                                  dateAwarded: '#String', prizeAmount: '#String', prizeAmountAdjusted: '#String', 
                                  topMotivation: '#String'}
    And match each response.nobelPrizes[*].laureates[*] contains {id: '#String', name: '#String', portion: '1', sortOrder: '1', motivation: '#String'}
    And match each response.nobelPrizes[*].laureates[*].links[*] contains {rel: '#String', href: '#String', action: '#String', types: '#String'}

    Examples:
      | offset |  limit | sort | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang | nobelPrizes |
      |   0    |   10   | asc  |     1901       |  1950  |        eco         | json   |   en    |     {}      |
