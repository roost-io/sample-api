# ********RoostGPT********

# Test generated by RoostGPT for test karate-api using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /oauth20/token (DR hosted shopper)_post for http method type POST 
# RoostTestHash=7ce2c1b817
# 
# 

# ********RoostGPT********
Feature: Authenticated Shopper Token

Background: 
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['auth.token']
    * configure headers = {Authorization: '#(authToken)'}

Scenario: Get an authenticated shopper token
    Given path '/oauth20/token'
    And params {grant_type: '#(grantType)', username: '#(username)', password: '#(password)'}
    When method post
    Then status 200
    And match response ==
    """
    {
        "access_token": '#string',
        "token_type": "bearer",
        "expires_in": '#string',
        "refresh_token": '#string',
    }
    """
    Examples:
    | grantType     | username      | password      |
    | 'password'    | 'testUser'    | 'Test@123'    |
    | 'refresh_token'   | 'testUser'    | 'Test@123'    |

Scenario: Invalid request due to missing parameters
    Given path '/oauth20/token'
    And params {grant_type: '#(grantType)', username: '#(username)'}
    When method post
    Then status 400
    And match response.errors.error == [{'code':'invalid_request', 'description':'#string'}]
    Examples:
    | grantType     | username      |
    | 'password'    | 'testUser'    |
    | 'refresh_token'   | 'testUser'    |

Scenario: Invalid client or request
    Given path '/oauth20/token'
    When method post
    Then status 401
    And match response.errors.error == [{'code':'invalid_client', 'description':'#string'}, {'code':'invalid_request', 'description':'#string'}]
 