# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circle-ci using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}/environment-variable/{env-var-name}_put for http method type PUT 
# RoostTestHash=a071a14843
# 
# 

# ********RoostGPT********
Feature: Add or Update Environment Variable in Context
  This feature validates the functionality of the API endpoint that creates or updates an environment variable within a context.

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase

  Scenario Outline: Validate response for adding/updating environment variable
    Given path '/context/<context-id>/environment-variable/<env-var-name>'
    And request ''' 
    { 
      value: '<value>' 
    } 
    '''
    And header Authorization = 'Basic <auth>'
    And header content-type = 'application/json'
    When method PUT
    Then status <status_code>
    And match response == '#notnull'
    And match response.context_id == '<context-id>'
    And match response.variable == '#string'
    And match response.created_at == '#datetime'
    And match response.updated_at == '#datetime'

    Examples:
      | context-id                           | env-var-name  | value             | auth               | status_code |
      | 512baaf7-3412-45d5-8faa-870e34e30802 | POSTGRES_USER | some-secret-value | REPLACE_BASIC_AUTH |         200 |

  Scenario Outline: Validate error response when required fields are missing
    Given path '/context/<context-id>/environment-variable/<env-var-name>'
    And request ''' 
    { 
    } 
    '''
    And header Authorization = 'Basic <auth>'
    And header content-type = 'application/json'
    When method PUT
    Then status <status_code>
    And match response == '#notnull'
    And match response.message == '#string'

    Examples:
      | context-id                           | env-var-name  | auth               | status_code |
      | 512baaf7-3412-45d5-8faa-870e34e30802 | POSTGRES_USER | REPLACE_BASIC_AUTH |         400 |

  Scenario Outline: Validate not found response for invalid context-id
    Given path '/context/<context-id>/environment-variable/<env-var-name>'
    And request ''' 
    { 
      value: '<value>' 
    } 
    '''
    And header Authorization = 'Basic <auth>'
    And header content-type = 'application/json'
    When method PUT
    Then status <status_code>
    And match response == '#notnull'
    And match response.message == '#string'

    Examples:
      | context-id         | env-var-name  | value             | auth               | status_code |
      | invalid-context-id | POSTGRES_USER | some-secret-value | REPLACE_BASIC_AUTH |         404 |

  Scenario Outline: Validate response headers
    Given path '/context/<context-id>/environment-variable/<env-var-name>'
    And request ''' 
    { 
      value: '<value>' 
    } 
    '''
    And header Authorization = 'Basic <auth>'
    And header content-type = 'application/json'
    When method PUT
    Then status <status_code>
    And match responseHeaders['content-type'] == 'application/json'

    Examples:
      | context-id                           | env-var-name  | value             | auth               | status_code |
      | 512baaf7-3412-45d5-8faa-870e34e30802 | POSTGRES_USER | some-secret-value | REPLACE_BASIC_AUTH |         200 |
