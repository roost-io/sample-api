# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /insights/{org-slug}/summary_get for http method type GET 
# RoostTestHash=c513aeede2
# 
# 

# ********RoostGPT********
Feature: Insights API - Get Organization Summary Metrics

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * url urlBase

  Scenario Outline: Get summary metrics for an organization with different reporting windows
    Given path '/insights/', <org-slug>, '/summary'
    And param reporting-window = <reporting-window>
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_data: {
          metrics: {
            total_runs: '#number',
            total_duration_secs: '#number',
            total_credits_used: '#number',
            success_rate: '#number',
            throughput: '#number'
          },
          trends: {
            total_runs: '#number',
            total_duration_secs: '#number',
            total_credits_used: '#number',
            success_rate: '#number',
            throughput: '#number'
          }
        },
        org_project_data: '#array',
        all_projects: '#array'
      }
      """
    And match each response.org_data.metrics ==
      """
      {
        total_runs: '#number? _ >= 0',
        total_duration_secs: '#number? _ >= 0',
        total_credits_used: '#number? _ >= 0',
        success_rate: '#number',
        throughput: '#number'
      }
      """
    And match each response.org_data.trends ==
      """
      {
        total_runs: '#number',
        total_duration_secs: '#number',
        total_credits_used: '#number',
        success_rate: '#number',
        throughput: '#number'
      }
      """
    And match each response.org_project_data ==
      """
      {
        project_name: '#string',
        metrics: {
          total_credits_used: '#number? _ >= 0',
          total_duration_secs: '#number? _ >= 0',
          total_runs: '#number? _ >= 0',
          success_rate: '#number'
        },
        trends: {
          total_credits_used: '#number',
          total_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        }
      }
      """
    And match each response.all_projects == '#string'

    Examples:
      | read('insights_org-slug_summary_get.csv') |

  Scenario: Get summary metrics for an organization with default reporting window
    Given path '/insights/gh/CircleCI-Public/summary'
    When method GET
    Then status 200
    And match response.org_data.metrics.total_runs == '#number? _ >= 0'
    And match response.org_data.metrics.total_duration_secs == '#number? _ >= 0'
    And match response.org_data.metrics.total_credits_used == '#number? _ >= 0'
    And match response.org_data.metrics.success_rate == '#number'
    And match response.org_data.metrics.throughput == '#number'
    And match response.org_data.trends.total_runs == '#number'
    And match response.org_data.trends.total_duration_secs == '#number'
    And match response.org_data.trends.total_credits_used == '#number'
    And match response.org_data.trends.success_rate == '#number'
    And match response.org_data.trends.throughput == '#number'
    And match response.org_project_data == '#array'
    And match response.all_projects == '#array'

  Scenario: Get summary metrics for an organization with a specific project
    Given path '/insights/gh/CircleCI-Public/summary'
    And param project-names = 'api-preview-docs'
    When method GET
    Then status 200
    And match response.org_data.metrics.total_runs == '#number? _ >= 0'
    And match response.org_data.metrics.total_duration_secs == '#number? _ >= 0'
    And match response.org_data.metrics.total_credits_used == '#number? _ >= 0'
    And match response.org_data.metrics.success_rate == '#number'
    And match response.org_data.metrics.throughput == '#number'
    And match response.org_project_data[*].project_name contains 'api-preview-docs'
    And match each response.org_project_data[*].metrics ==
      """
      {
        total_credits_used: '#number? _ >= 0',
        total_duration_secs: '#number? _ >= 0',
        total_runs: '#number? _ >= 0',
        success_rate: '#number'
      }
      """

  Scenario: Get summary metrics for an organization with multiple projects
    Given path '/insights/gh/CircleCI-Public/summary'
    And param project-names = ['project1', 'project2']
    When method GET
    Then status 200
    And match response.org_data.metrics.total_runs == '#number? _ >= 0'
    And match response.org_data.metrics.total_duration_secs == '#number? _ >= 0'
    And match response.org_data.metrics.total_credits_used == '#number? _ >= 0'
    And match response.org_data.metrics.success_rate == '#number'
    And match response.org_data.metrics.throughput == '#number'
    And match response.org_project_data == '#array'
    And match each response.org_project_data ==
      """
      {
        project_name: '#string',
        metrics: {
          total_credits_used: '#number? _ >= 0',
          total_duration_secs: '#number? _ >= 0',
          total_runs: '#number? _ >= 0',
          success_rate: '#number'
        },
        trends: {
          total_credits_used: '#number',
          total_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        }
      }
      """

  Scenario: Get summary metrics with invalid org slug
    Given path '/insights/invalid-org-slug/summary'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Get summary metrics with invalid reporting window
    Given path '/insights/gh/CircleCI-Public/summary'
    And param reporting-window = 'invalid-window'
    When method GET
    Then status 400
    And match response.message == '#string'
