# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circle-ci using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /user/{id}_get for http method type GET 
# RoostTestHash=fd32f69a5a
# 
# 

# ********RoostGPT********
Feature: User Information Endpoint Tests
  Description: Tests for the '/user/{id}' endpoint, which retrieves user information based on their unique ID.

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase

  Scenario Outline: Retrieve User Information with Valid ID
    Given path '/user/<id>'
    When method GET
    Then status 200
    And match response.id == '#uuid'
    And match response.login == '#string'
    And match response.name == '#string'
    And match response ==
      """
      {
        "id": "#uuid",
        "login": "#string",
        "name": "#string"
      }
      """

    Examples:
      | read('user_id_get.csv') |

  Scenario: Retrieve User Information with Invalid ID
    Given path '/user/invalidID'
    When method GET
    Then status 400
    And match response ==
      """
      {
        "message": "#string"
      }
      """

  Scenario: Retrieve User Information Without Authorization
    Given path '/user/a1234567-bc89-12d3-e456-426655440001'
    When method GET
    Then status 401
    And match response ==
      """
      {
        "message": "#string"
      }
      """

  Scenario: Retrieve User Information with Missing ID
    Given path '/user/'
    When method GET
    Then status 404
    And match response ==
      """
      {
        "message": "#string"
      }
      """

  Scenario: Response Headers Validation
    Given path '/user/a1234567-bc89-12d3-e456-426655440001'
    When method GET
    Then status 200
    And match responseHeaders ==
      """
      {
        "content-type": "#string",
        "date": "#string",
        "server": "#string"
      }
      """
