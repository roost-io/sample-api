# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /organization/{org-slug-or-id}/project_post for http method type POST 
# RoostTestHash=7c6c08b626
# 
# 

# ********RoostGPT********
Feature: Create a new project in an organization

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def authHeader = { Authorization: 'Basic ' + karate.properties['API_TOKEN'] }

  Scenario Outline: Create a new project with valid data
    Given url urlBase
    And path 'organization', <orgSlugOrId>, 'project'
    And headers authHeader
    And request { name: <projectName> }
    And header Content-Type = 'application/json'
    When method POST
    Then status 200
    And match response == """
    {
      slug: '#string',
      name: <projectName>,
      id: '#uuid',
      organization_name: '#string',
      organization_slug: '#string',
      organization_id: '#uuid',
      vcs_info: {
        vcs_url: '#string',
        provider: '#? _ == "Bitbucket" || _ == "CircleCI" || _ == "GitHub"',
        default_branch: '#string'
      }
    }
    """
    And match response.slug != null
    And match response.name == <projectName>
    And match response.id matches /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/
    And match response.organization_name != null
    And match response.organization_slug != null
    And match response.organization_id matches /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/
    And match response.vcs_info.vcs_url != null
    And match response.vcs_info.provider != null
    And match response.vcs_info.default_branch != null

    Examples:
      | orgSlugOrId                                      | projectName       |
      | 'gh/CircleCI-Public'                             | 'api-preview-docs' |
      | 'circleci/ec6887ec-7d44-4b31-b468-7e552408ee32' | 'test-project'    |

  Scenario: Create a project with missing name field
    Given url urlBase
    And path 'organization', 'gh/CircleCI-Public', 'project'
    And headers authHeader
    And request {}
    And header Content-Type = 'application/json'
    When method POST
    Then status 400
    And match response.message != null

  Scenario: Create a project with invalid organization ID
    Given url urlBase
    And path 'organization', 'invalid-org-id', 'project'
    And headers authHeader
    And request { name: 'test-project' }
    And header Content-Type = 'application/json'
    When method POST
    Then status 404
    And match response.message != null

  Scenario: Create a project with unauthorized access
    Given url urlBase
    And path 'organization', 'gh/CircleCI-Public', 'project'
    And header Content-Type = 'application/json'
    And request { name: 'test-project' }
    When method POST
    Then status 401
    And match response.message != null
