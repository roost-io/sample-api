# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /context/{context-id}/environment-variable_get for http method type GET 
# RoostTestHash=cbf5028a22
# 
# 

# ********RoostGPT********
Feature: List environment variables in a context

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def contextId = '123e4567-e89b-12d3-a456-426614174000'
    * configure headers = { 'Authorization': 'Basic ' + karate.properties['API_TOKEN'] }

  Scenario: Successfully list environment variables in a context
    Given url urlBase
    And path 'context', contextId, 'environment-variable'
    When method GET
    Then status 200
    And match response ==
      """
      {
        items: '#array',
        next_page_token: '##string'
      }
      """
    And match each response.items ==
      """
      {
        variable: '#string',
        created_at: '#string',
        updated_at: '#string',
        context_id: '#uuid'
      }
      """
    And match each response.items[*].created_at == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z'
    And match each response.items[*].updated_at == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z'
    And match each response.items[*].context_id == contextId

  Scenario: List environment variables with pagination
    Given url urlBase
    And path 'context', contextId, 'environment-variable'
    And param page-token = 'some-token-value'
    When method GET
    Then status 200
    And match response ==
      """
      {
        items: '#array',
        next_page_token: '##string'
      }
      """
    And match each response.items ==
      """
      {
        variable: '#string',
        created_at: '#string',
        updated_at: '#string',
        context_id: '#uuid'
      }
      """

  Scenario: List environment variables with empty page token
    Given url urlBase
    And path 'context', contextId, 'environment-variable'
    And param page-token = ''
    When method GET
    Then status 200
    And match response ==
      """
      {
        items: '#array',
        next_page_token: '##string'
      }
      """

  Scenario: Try to list environment variables with invalid context ID
    Given url urlBase
    And path 'context', 'invalid-uuid', 'environment-variable'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Try to list environment variables with non-existent context ID
    Given url urlBase
    And path 'context', '123e4567-e89b-12d3-a456-999999999999', 'environment-variable'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario Outline: List environment variables with different context IDs
    Given url urlBase
    And path 'context', <contextId>, 'environment-variable'
    When method GET
    Then status 200
    And match response.items == '#array'
    And match response.next_page_token == '##string'

    Examples:
      | read('context_context-id_environment-variable_get.csv') |
