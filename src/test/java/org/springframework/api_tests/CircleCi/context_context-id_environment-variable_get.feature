# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /context/{context-id}/environment-variable_get for http method type GET 
# RoostTestHash=cbf5028a22
# 
# 

# ********RoostGPT********
Feature: List environment variables from a context

  Background:
    * def urlBase = karate.properties['API_HOST']
    * configure headers = { Authorization: karate.properties['AUTH_TOKEN'] }

  Scenario: List environment variables successfully
    Given url urlBase
    And path '/context', 'a1234567-89ab-cdef-0123-456789abcdef', 'environment-variable'
    When method GET
    Then status 200
    And match response ==
      """
      {
        items: '#array',
        next_page_token: '##string'
      }
      """
    And match each response.items[*] ==
      """
      {
        variable: '#string',
        created_at: '#string',
        updated_at: '#string',
        context_id: '#string'
      }
      """
    And match each response.items[*].created_at contains 'T'
    And match each response.items[*].updated_at contains 'T'
    And match each response.items[*].context_id == '#uuid'

  Scenario: List environment variables with pagination
    Given url urlBase
    And path '/context', 'a1234567-89ab-cdef-0123-456789abcdef', 'environment-variable'
    And param page-token = 'some-token-value'
    When method GET
    Then status 200
    And match response ==
      """
      {
        items: '#array',
        next_page_token: '##string'
      }
      """
    And match each response.items[*] ==
      """
      {
        variable: '#string',
        created_at: '#string',
        updated_at: '#string',
        context_id: '#string'
      }
      """

  Scenario: List environment variables with invalid context ID
    Given url urlBase
    And path '/context', 'invalid-uuid', 'environment-variable'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: List environment variables with non-existent context ID
    Given url urlBase
    And path '/context', '00000000-0000-0000-0000-000000000000', 'environment-variable'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario: List environment variables with unauthorized access
    * configure headers = { Authorization: '' }
    Given url urlBase
    And path '/context', 'a1234567-89ab-cdef-0123-456789abcdef', 'environment-variable'
    When method GET
    Then status 401
    And match response.message == '#string'

  Scenario Outline: List environment variables with different context IDs
    Given url urlBase
    And path '/context', '<context-id>', 'environment-variable'
    When method GET
    Then status <status>
    And match response == <expected>

    Examples:
      | context-id                           | status | expected                                         |
      | a1234567-89ab-cdef-0123-456789abcdef |    200 | { items: '#array', next_page_token: '##string' } |
      | b2345678-9abc-def0-1234-56789abcdef0 |    200 | { items: '#array', next_page_token: '##string' } |
      | c3456789-abcd-ef01-2345-6789abcdef01 |    200 | { items: '#array', next_page_token: '##string' } |
      | invalid-uuid                         |    400 | { message: '#string' }                           |
