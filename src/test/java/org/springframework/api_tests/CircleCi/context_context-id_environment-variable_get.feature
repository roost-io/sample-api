# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /context/{context-id}/environment-variable_get for http method type GET 
# RoostTestHash=cbf5028a22
# 
# 

# ********RoostGPT********
Feature: List environment variables from a context

  Background:
    * def urlBase = karate.properties['API_HOST']
    * def username = karate.properties['CIRCLE_USER']
    * def password = karate.properties['CIRCLE_PASS']
    * def credentials = username+':'+password
    * def encoded = Java.type('java.util.Base64').getEncoder().encodeToString(credentials.getBytes())
    * def authHeader = 'Basic ' + encoded
    * configure headers = { Authorization: '#(authHeader)' }

  Scenario: Get environment variables with valid context ID
    Given url urlBase
    And path '/context', 'a1b2c3d4-e5f6-7890-abcd-1234567890ab', 'environment-variable'
    When method GET
    Then status 200
    And match response == { items: '#array', next_page_token: '##string' }
    And match each response.items[*] == { variable: '#string', created_at: '#string', updated_at: '#string', context_id: '#string' }
    And match each response.items[*].created_at == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z'
    And match each response.items[*].updated_at == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z'
    And match each response.items[*].context_id == '#uuid'

  Scenario: Get environment variables with pagination
    Given url urlBase
    And path '/context', 'a1b2c3d4-e5f6-7890-abcd-1234567890ab', 'environment-variable'
    And param page-token = 'some-token-value'
    When method GET
    Then status 200
    And match response == { items: '#array', next_page_token: '##string' }
    And match each response.items[*] == { variable: '#string', created_at: '#string', updated_at: '#string', context_id: '#string' }

  Scenario: Get environment variables with invalid context ID
    Given url urlBase
    And path '/context', 'invalid-uuid', 'environment-variable'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Get environment variables with non-existent context ID
    Given url urlBase
    And path '/context', '00000000-0000-0000-0000-000000000000', 'environment-variable'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario Outline: Get environment variables with different context IDs
    Given url urlBase
    And path '/context', '<context-id>', 'environment-variable'
    When method GET
    Then status <status>
    And match response.<response_field> == '#<type>'

    Examples:
      | context-id                           | status | response_field  | type    |
      | a1b2c3d4-e5f6-7890-abcd-1234567890ab |    200 | items           | array   |
      | a1b2c3d4-e5f6-7890-abcd-1234567890ab |    200 | next_page_token | string? |
      | 00000000-0000-0000-0000-000000000000 |    404 | message         | string  |

  Scenario: Get environment variables with empty page token
    Given url urlBase
    And path '/context', 'a1b2c3d4-e5f6-7890-abcd-1234567890ab', 'environment-variable'
    And param page-token = ''
    When method GET
    Then status 200
    And match response == { items: '#array', next_page_token: '##string' }
    And match each response.items[*].variable == '#string'
    And match each response.items[*].created_at == '#string'
    And match each response.items[*].updated_at == '#string'
    And match each response.items[*].context_id == '#string'
