# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /insights/{project-slug}/workflows/{workflow-name}/jobs_get for http method type GET 
# RoostTestHash=f1a60c8fec
# 
# 

# ********RoostGPT********
Feature: Get summary metrics for a project workflow's jobs

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def authToken = karate.properties['AUTH_TOKEN']
    * configure headers = { 'Authorization': 'Basic ' + authToken }

  Scenario Outline: Get workflow job metrics with different parameters
    Given url urlBase
    And path 'insights', '<project-slug>', 'workflows', '<workflow-name>', 'jobs'
    And param page-token = '<page-token>'
    And param all-branches = <all-branches>
    And param branch = '<branch>'
    And param reporting-window = '<reporting-window>'
    And param job-name = '<job-name>'
    When method GET
    Then status 200
    And match response == { items: '#array', next_page_token: '##string' }
    And match each response.items contains { name: '#string', metrics: '#object', window_start: '#string', window_end: '#string' }
    And match each response.items[*].metrics contains { 
      total_runs: '#number', 
      failed_runs: '#number', 
      successful_runs: '#number', 
      duration_metrics: '#object', 
      success_rate: '#number', 
      total_credits_used: '#number', 
      throughput: '#number' 
    }
    And match each response.items[*].metrics.duration_metrics contains { 
      min: '##number', 
      mean: '##number', 
      median: '##number', 
      p95: '##number', 
      max: '##number', 
      standard_deviation: '##number' 
    }
    And match each response.items[*].window_start == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z'
    And match each response.items[*].window_end == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z'

    Examples:
      | project-slug                        | workflow-name   | page-token | all-branches | branch | reporting-window | job-name |
      | gh/CircleCI-Public/api-preview-docs | build-and-test  |            | false        |        | last-90-days     |          |
      | gh/CircleCI-Public/api-preview-docs | build-and-test  |            | true         |        | last-30-days     |          |
      | gh/CircleCI-Public/api-preview-docs | build-and-test  |            | false        | main   | last-7-days      |          |
      | gh/CircleCI-Public/api-preview-docs | build-and-test  |            | false        |        | last-90-days     | lint     |

  Scenario: Get workflow job metrics with default parameters
    Given url urlBase
    And path 'insights', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    When method GET
    Then status 200
    And match response == { items: '#array', next_page_token: '##string' }
    And match each response.items contains { name: '#string', metrics: '#object', window_start: '#string', window_end: '#string' }
    And match each response.items[*].metrics contains { 
      total_runs: '#number', 
      failed_runs: '#number', 
      successful_runs: '#number', 
      duration_metrics: '#object', 
      success_rate: '#number', 
      total_credits_used: '#number', 
      throughput: '#number' 
    }
    And match each response.items[*].metrics.duration_metrics contains { 
      min: '##number', 
      mean: '##number', 
      median: '##number', 
      p95: '##number', 
      max: '##number', 
      standard_deviation: '##number' 
    }
    And match each response.items[*].window_start == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z'
    And match each response.items[*].window_end == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z'

  Scenario: Get workflow job metrics with pagination
    Given url urlBase
    And path 'insights', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    When method GET
    Then status 200
    And def nextPageToken = response.next_page_token

  Scenario: Fetch next page of workflow job metrics
    Given url urlBase
    And path 'insights', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    And param page-token = nextPageToken
    When method GET
    Then status 200
    And match response == { items: '#array', next_page_token: '##string' }

  Scenario: Verify error response for invalid project slug
    Given url urlBase
    And path 'insights', 'invalid-project-slug', 'workflows', 'build-and-test', 'jobs'
    When method GET
    Then status 400
    And match response contains { message: '#string' }

  Scenario: Verify error response for non-existent workflow
    Given url urlBase
    And path 'insights', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'non-existent-workflow', 'jobs'
    When method GET
    Then status 404
    And match response contains { message: '#string' }

  Scenario: Verify error response for invalid reporting window
    Given url urlBase
    And path 'insights', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    And param reporting-window = 'invalid-window'
    When method GET
    Then status 400
    And match response contains { message: '#string' }
