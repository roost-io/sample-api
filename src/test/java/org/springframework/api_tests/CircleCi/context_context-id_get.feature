# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=4b383a9190
# 
# 

# ********RoostGPT********
Feature: Get Context API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def uuidPattern = '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
    * def dateTimePattern = '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z$'

  Scenario: Get context with valid context-id
    Given url urlBase
    And path 'context', '123e4567-e89b-12d3-a456-426614174000'
    And header Authorization = 'Basic REPLACE_BASIC_AUTH'
    When method GET
    Then status 200
    And match response ==
      """
      {
        id: '#string',
        name: '#string',
        created_at: '#string'
      }
      """
    And match response.id == '#regex ' + uuidPattern
    And match response.created_at == '#regex ' + dateTimePattern

  Scenario Outline: Get context with different valid context-ids
    Given url urlBase
    And path 'context', '<context-id>'
    And header Authorization = 'Basic REPLACE_BASIC_AUTH'
    When method GET
    Then status 200
    And match response ==
      """
      {
        id: '#string',
        name: '#string',
        created_at: '#string'
      }
      """
    And match response.id == '<context-id>'
    And match response.id == '#regex ' + uuidPattern
    And match response.name == '#string'
    And match response.created_at == '#regex ' + dateTimePattern

    Examples:
      | read('context_context-id_get.csv') |

  Scenario: Get context with invalid context-id format
    Given url urlBase
    And path 'context', 'invalid-uuid'
    And header Authorization = 'Basic REPLACE_BASIC_AUTH'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Get context with non-existent context-id
    Given url urlBase
    And path 'context', '00000000-0000-0000-0000-000000000000'
    And header Authorization = 'Basic REPLACE_BASIC_AUTH'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario: Get context without authentication
    Given url urlBase
    And path 'context', '123e4567-e89b-12d3-a456-426614174000'
    When method GET
    Then status 401
    And match response.message == '#string'

  Scenario: Verify all required fields are present in the response
    Given url urlBase
    And path 'context', '123e4567-e89b-12d3-a456-426614174000'
    And header Authorization = 'Basic REPLACE_BASIC_AUTH'
    When method GET
    Then status 200
    And match response contains { id: '#present', name: '#present', created_at: '#present' }
    And match response.id == '#regex ' + uuidPattern
    And match response.name == '#string'
    And match response.created_at == '#regex ' + dateTimePattern
