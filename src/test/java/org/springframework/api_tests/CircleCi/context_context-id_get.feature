# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circle-ci using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=4b383a9190
# 
# 

# ********RoostGPT********
Feature: Verify the /context/{context-id} endpoint functionality

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * url urlBase
    Given path 'context/{context-id}'
    And header Authorization = 'Basic REPLACE_BASIC_AUTH'

  Scenario Outline: Validate /context/{context-id} endpoint with valid UUID in path parameter
    Given path '<context-id>'
    When method GET
    Then status 200
    And match response == """
    {
      id: '#string',
      name: '#string',
      created_at: '#string',
      created_at: '#dateTime'
    }
    """
    And match response.id == '#uuid'

    Examples:
      | context-id                          |
      | 23e4567-e89b-12d3-a456-426614174000 |

  Scenario Outline: Validate /context/{context-id} endpoint with invalid UUID in path parameter
    Given path '<context-id>'
    When method GET
    Then status 400
    And match response == """
    {
      message: '#string'
    }
    """

    Examples:
      | context-id   |
      | invalid-uuid |

  Scenario Outline: Verify /context/{context-id} endpoint for non-existing UUID
    Given path '<context-id>'
    When method GET
    Then status 404
    And match response == """
    {
      message: '#string'
    }
    """

    Examples:
      | context-id                           |
      | 00000000-0000-0000-0000-000000000000 |

  Scenario: Validate response headers for successful request
    Given path '23e4567-e89b-12d3-a456-426614174000'
    When method GET
    Then status 200
    And match responseHeaders == """
    {
      'Content-Type': 'application/json'
    }
    """

  Scenario: Validate response schema for 200 success
    Given path '23e4567-e89b-12d3-a456-426614174000'
    When method GET
    Then status 200
    And match response == """
    {
      id: '#uuid',
      name: '#string',
      created_at: '#string',
      created_at: '#dateTime'
    }
    """

  Scenario: Validate response schema for error response
    Given path '00000000-0000-0000-0000-000000000000'
    When method GET
    Then status 404
    And match response == """
    {
      message: '#string'
    }
    """
