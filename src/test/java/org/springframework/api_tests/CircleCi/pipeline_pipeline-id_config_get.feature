# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /pipeline/{pipeline-id}/config_get for http method type GET 
# RoostTestHash=1b2cb0abc0
# 
# 

# ********RoostGPT********
Feature: Get a pipeline's configuration

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def pipelineId = '5034460f-c7c4-4c43-9457-de07e2029e7b'

  Scenario: Successfully retrieve a pipeline's configuration
    Given url urlBase
    And path 'pipeline', pipelineId, 'config'
    When method GET
    Then status 200
    And match response ==
      """
      {
        source: '#string',
        compiled: '#string',
        setup-config: '##string',
        compiled-setup-config: '##string'
      }
      """
    And match response contains { source: '#present', compiled: '#present' }
    And match response.source != null
    And match response.compiled != null

  Scenario Outline: Retrieve pipeline configuration with different pipeline IDs
    Given url urlBase
    And path 'pipeline', <pipelineId>, 'config'
    When method GET
    Then status 200
    And match response contains { source: '#string', compiled: '#string' }
    And match response.source != null
    And match response.compiled != null
    And if (response['setup-config']) match response['setup-config'] == '#string'
    And if (response['compiled-setup-config']) match response['compiled-setup-config'] == '#string'

    Examples:
      | read('pipeline_pipeline-id_config_get.csv') |

  Scenario: Attempt to retrieve configuration with invalid pipeline ID format
    Given url urlBase
    And path 'pipeline', 'invalid-uuid-format', 'config'
    When method GET
    Then status 400
    And match response contains { message: '#string' }

  Scenario: Attempt to retrieve configuration for non-existent pipeline ID
    Given url urlBase
    And path 'pipeline', '00000000-0000-0000-0000-000000000000', 'config'
    When method GET
    Then status 404
    And match response contains { message: '#string' }

  Scenario: Verify response headers for pipeline configuration
    Given url urlBase
    And path 'pipeline', pipelineId, 'config'
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'] contains 'application/json'
