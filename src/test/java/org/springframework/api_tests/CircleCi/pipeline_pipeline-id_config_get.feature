# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /pipeline/{pipeline-id}/config_get for http method type GET 
# RoostTestHash=1b2cb0abc0
# 
# 

# ********RoostGPT********
Feature: Pipeline Configuration API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def validPipelineId = '5034460f-c7c4-4c43-9457-de07e2029e7b'
    * def invalidPipelineId = 'invalid-id'
    * def nonExistentPipelineId = '12345678-abcd-4321-efgh-987654321012'

  Scenario: Get a pipeline's configuration with valid pipeline ID
    Given url urlBase
    And path 'pipeline', validPipelineId, 'config'
    When method GET
    Then status 200
    And match response ==
      """
      {
        source: '#string',
        compiled: '#string',
        setup-config: '##string',
        compiled-setup-config: '##string'
      }
      """
    And match response.source != null
    And match response.compiled != null
    And match response contains { source: '#string', compiled: '#string' }

  Scenario: Get a pipeline's configuration with invalid pipeline ID format
    Given url urlBase
    And path 'pipeline', invalidPipelineId, 'config'
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Get a pipeline's configuration with non-existent pipeline ID
    Given url urlBase
    And path 'pipeline', nonExistentPipelineId, 'config'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario Outline: Get pipeline configurations with different valid pipeline IDs
    Given url urlBase
    And path 'pipeline', pipelineId, 'config'
    When method GET
    Then status 200
    And match response contains { source: '#string', compiled: '#string' }
    And match response.source != null
    And match response.compiled != null
    And match response['setup-config'] == '##string'
    And match response['compiled-setup-config'] == '##string'

    Examples:
      | read('pipeline_pipeline-id_config_get.csv') |

  Scenario: Verify response headers for pipeline configuration
    Given url urlBase
    And path 'pipeline', validPipelineId, 'config'
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'][0] contains 'application/json'
