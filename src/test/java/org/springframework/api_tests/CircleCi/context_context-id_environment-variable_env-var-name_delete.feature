# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /context/{context-id}/environment-variable/{env-var-name}_delete for http method type DELETE 
# RoostTestHash=197f97d38b
# 
# 

# ********RoostGPT********
Feature: Delete Environment Variable from Context API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def uuidPattern = '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

  Scenario Outline: Delete environment variable from context
    Given url urlBase
    And path 'context', contextId, 'environment-variable', envVarName
    When method DELETE
    Then status 200
    And match response == { message: '#string' }
    And match response.message != null

    Examples:
      | read('context_context-id_environment-variable_env-var-name_delete.csv') |

  Scenario: Delete environment variable with invalid context ID
    Given url urlBase
    And path 'context', 'invalid-uuid', 'environment-variable', 'POSTGRES_USER'
    When method DELETE
    Then status 400
    And match response == { message: '#string' }

  Scenario: Delete environment variable that doesn't exist
    Given url urlBase
    And path 'context', '3fa85f64-5717-4562-b3fc-2c963f66afa6', 'environment-variable', 'NON_EXISTENT_VAR'
    When method DELETE
    Then status 404
    And match response == { message: '#string' }

  Scenario: Delete environment variable with valid UUID format
    Given url urlBase
    And path 'context', '3fa85f64-5717-4562-b3fc-2c963f66afa6', 'environment-variable', 'POSTGRES_USER'
    When method DELETE
    Then status 200
    And match response == { message: '#string' }
    And match response.message contains 'environment variable'

  Scenario: Verify response headers for delete environment variable
    Given url urlBase
    And path 'context', '3fa85f64-5717-4562-b3fc-2c963f66afa6', 'environment-variable', 'POSTGRES_USER'
    When method DELETE
    Then status 200
    And match responseHeaders['Content-Type'][0] contains 'application/json'
    And match response == { message: '#string' }
    And match response.message != null
