# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=73acfe91d1
# 
# 

# ********RoostGPT********
Feature: Project Summary Insights API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def basicAuth = call read('classpath:basic-auth.js')
    * configure headers = { 'Authorization': '#(basicAuth)' }

  Scenario: Get project summary with default reporting window
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_id: '#string',
        project_id: '#string',
        project_data: {
          metrics: {
            total_runs: '#number? _ >= 0',
            total_duration_secs: '#number? _ >= 0',
            total_credits_used: '#number? _ >= 0',
            success_rate: '#number',
            throughput: '#number'
          },
          trends: {
            total_runs: '#number',
            total_duration_secs: '#number',
            total_credits_used: '#number',
            success_rate: '#number',
            throughput: '#number'
          }
        },
        project_workflow_data: '#array',
        project_workflow_branch_data: '#array',
        all_branches: '#array',
        all_workflows: '#array'
      }
      """
    And match each response.project_workflow_data contains
      """
      {
        workflow_name: '#string',
        metrics: {
          total_credits_used: '#number? _ >= 0',
          p95_duration_secs: '#number',
          total_runs: '#number? _ >= 0',
          success_rate: '#number'
        },
        trends: {
          total_credits_used: '#number',
          p95_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        }
      }
      """
    And match each response.project_workflow_branch_data contains
      """
      {
        workflow_name: '#string',
        branch: '#string',
        metrics: {
          total_credits_used: '#number? _ >= 0',
          p95_duration_secs: '#number',
          total_runs: '#number? _ >= 0',
          success_rate: '#number'
        },
        trends: {
          total_credits_used: '#number',
          p95_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        }
      }
      """
    And match each response.all_branches == '#string'
    And match each response.all_workflows == '#string'

  Scenario Outline: Get project summary with different reporting windows
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param reporting-window = '<reporting-window>'
    When method GET
    Then status 200
    And match response.project_data.metrics.total_runs == '#number? _ >= 0'
    And match response.project_data.metrics.total_duration_secs == '#number? _ >= 0'
    And match response.project_data.metrics.total_credits_used == '#number? _ >= 0'
    And match response.project_data.metrics.success_rate == '#number'
    And match response.project_data.metrics.throughput == '#number'
    And match response.project_data.trends.total_runs == '#number'
    And match response.project_data.trends.total_duration_secs == '#number'
    And match response.project_data.trends.total_credits_used == '#number'
    And match response.project_data.trends.success_rate == '#number'
    And match response.project_data.trends.throughput == '#number'

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Get project summary with specific branch filter
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param branches = 'main'
    When method GET
    Then status 200
    And match response.project_workflow_branch_data[*].branch contains 'main'

  Scenario: Get project summary with multiple branch filters
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param branches = 'main'
    And param branches = 'develop'
    When method GET
    Then status 200
    And match response.project_workflow_branch_data[*].branch contains only ['main', 'develop']

  Scenario: Get project summary with specific workflow filter
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param workflow-names = 'build-and-test'
    When method GET
    Then status 200
    And match response.project_workflow_data[*].workflow_name contains 'build-and-test'

  Scenario: Get project summary with multiple workflow filters
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param workflow-names = 'build-and-test'
    And param workflow-names = 'deploy'
    When method GET
    Then status 200
    And match response.project_workflow_data[*].workflow_name contains only ['build-and-test', 'deploy']

  Scenario: Get project summary with combined filters
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param reporting-window = 'last-30-days'
    And param branches = 'main'
    And param workflow-names = 'build-and-test'
    When method GET
    Then status 200
    And match response.project_data.metrics.total_runs == '#number? _ >= 0'
    And match response.project_workflow_data[*].workflow_name contains 'build-and-test'
    And match response.project_workflow_branch_data[*].branch contains 'main'

  Scenario: Get project summary with invalid project slug
    Given url urlBase
    And path '/insights/pages/gh/invalid-org/invalid-repo/summary'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario: Get project summary with invalid reporting window
    Given url urlBase
    And path '/insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param reporting-window = 'invalid-window'
    When method GET
    Then status 400
    And match response.message == '#string'
