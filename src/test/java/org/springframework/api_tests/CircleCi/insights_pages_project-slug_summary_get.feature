# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circle-ci using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=d36b00fabb
# 
# 

# ********RoostGPT********
Feature: Test Insights API Endpoint GET /insights/pages/{project-slug}/summary

  Background:
    * def urlBase = karate.properties['API_HOST_URL']
    * url urlBase

  Scenario Outline: Validate successful response for summary metrics and trends
    Given path 'insights/pages/<project-slug>/summary'
    And param reporting-window = '<reporting-window>'
    And param branches = <branches>
    And param workflow-names = <workflow-names>
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_id: '#string',
        project_id: '#string',
        project_data: {
          metrics: {
            total_runs: '#number',
            total_duration_secs: '#number',
            total_credits_used: '#number',
            success_rate: '#number',
            throughput: '#number'
          },
          trends: {
            total_runs: '#number',
            total_duration_secs: '#number',
            total_credits_used: '#number',
            success_rate: '#number',
            throughput: '#number'
          }
        },
        project_workflow_data: [
          {
            workflow_name: '#string',
            metrics: {
              total_credits_used: '#number',
              p95_duration_secs: '#number',
              total_runs: '#number',
              success_rate: '#number'
            },
            trends: {
              total_credits_used: '#number',
              p95_duration_secs: '#number',
              total_runs: '#number',
              success_rate: '#number'
            }
          }
        ],
        project_workflow_branch_data: [
          {
            workflow_name: '#string',
            branch: '#string',
            metrics: {
              total_credits_used: '#number',
              p95_duration_secs: '#number',
              total_runs: '#number',
              success_rate: '#number'
            },
            trends: {
              total_credits_used: '#number',
              p95_duration_secs: '#number',
              total_runs: '#number',
              success_rate: '#number'
            }
          }
        ],
        all_branches: ['#string'],
        all_workflows: ['#string']
      }
      """

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Validate response for invalid project-slug
    Given path 'insights/pages/invalid_slug/summary'
    When method GET
    Then status 404
    And match response ==
      """
      {
        message: '#string'
      }
      """

  Scenario Outline: Validate response with missing required query parameters
    Given path 'insights/pages/<project-slug>/summary'
    When method GET
    Then status <status_code>
    And match response ==
      """
      {
        message: '#string'
      }
      """

    Examples:
      | project-slug                        | status_code |
      | gh/CircleCI-Public/api-preview-docs |         400 |
