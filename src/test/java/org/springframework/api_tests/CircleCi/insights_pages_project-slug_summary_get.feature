# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-karate-circle-ci using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=d36b00fabb
# 
# 

# ********RoostGPT********
Feature: Insights API Summary Endpoint

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * url urlBase

  Scenario Outline: Validate successful API response with different query parameters
    Given path 'insights/pages/<projectSlug>/summary'
    And param reporting-window = <reportingWindow>
    And param branches = <branches>
    And param workflow-names = <workflowNames>
    When method GET
    Then status 200
    And match response.org_id == '#string'
    And match response.project_id == '#string'
    And match response.project_data.metrics ==
      """
      {
        total_runs: '#number',
        total_duration_secs: '#number',
        total_credits_used: '#number',
        success_rate: '#number',
        throughput: '#number'
      }
      """
    And match response.project_data.trends ==
      """
      {
        total_runs: '#number',
        total_duration_secs: '#number',
        total_credits_used: '#number',
        success_rate: '#number',
        throughput: '#number'
      }
      """
    And match response.project_workflow_data contains
      """
      {
        workflow_name: '#string',
        metrics: {
          total_credits_used: '#number',
          p95_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        },
        trends: {
          total_credits_used: '#number',
          p95_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        }
      }
      """
    And match response.project_workflow_branch_data contains
      """
      {
        workflow_name: '#string',
        branch: '#string',
        metrics: {
          total_credits_used: '#number',
          p95_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        },
        trends: {
          total_credits_used: '#number',
          p95_duration_secs: '#number',
          total_runs: '#number',
          success_rate: '#number'
        }
      }
      """
    And match response.all_branches == '#array'
    And match response.all_workflows == '#array'

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Validate response for invalid project slug
    Given path 'insights/pages/invalid-slug/summary'
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario Outline: Validate query parameter variations
    Given path 'insights/pages/<projectSlug>/summary'
    And param reporting-window = <reportingWindow>
    And param branches = <branches>
    And param workflow-names = <workflowNames>
    When method GET
    Then status 200
    And match response != null

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Validate default error response
    Given path 'insights/pages/gh/CircleCI-Public/api-preview-docs/summary'
    And param reporting-window = 'invalid-window'
    When method GET
    Then status 400
    And match response.message == '#string'
