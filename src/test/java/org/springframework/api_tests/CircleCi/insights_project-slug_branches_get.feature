# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /insights/{project-slug}/branches_get for http method type GET 
# RoostTestHash=0141277696
# 
# 

# ********RoostGPT********
Feature: Insights API - Get all branches for a project

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def authHeader = { Authorization: 'Basic ' + karate.properties['API_TOKEN'] }

  Scenario: Get all branches for a project successfully
    Given url urlBase
    And path '/insights/gh/CircleCI-Public/api-preview-docs/branches'
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_id: '#string',
        project_id: '#string',
        branches: '#array'
      }
      """
    And match each response.branches == '#string'
    And match response.branches == '#[_ > 0]'

  Scenario: Get all branches for a project with workflow-name parameter
    Given url urlBase
    And path '/insights/gh/CircleCI-Public/api-preview-docs/branches'
    And param workflow-name = 'build-and-test'
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_id: '#string',
        project_id: '#string',
        branches: '#array'
      }
      """
    And match each response.branches == '#string'

  Scenario Outline: Get all branches for different project slugs
    Given url urlBase
    And path '/insights/<project-slug>/branches'
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_id: '#string',
        project_id: '#string',
        branches: '#array'
      }
      """
    And match each response.branches == '#string'

    Examples:
      | read('insights_project-slug_branches_get.csv') |

  Scenario: Get all branches with invalid project slug
    Given url urlBase
    And path '/insights/invalid-project-slug/branches'
    And headers authHeader
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario: Get all branches with unauthorized access
    Given url urlBase
    And path '/insights/gh/CircleCI-Public/api-preview-docs/branches'
    When method GET
    Then status 401
    And match response.message == '#string'

  Scenario: Get all branches with non-existent workflow name
    Given url urlBase
    And path '/insights/gh/CircleCI-Public/api-preview-docs/branches'
    And param workflow-name = 'non-existent-workflow'
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        org_id: '#string',
        project_id: '#string',
        branches: '#array'
      }
      """
