# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /insights/time-series/{project-slug}/workflows/{workflow-name}/jobs_get for http method type GET 
# RoostTestHash=682018cf14
# 
# 

# ********RoostGPT********
Feature: Job Timeseries Data API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def authHeader = { Authorization: 'Basic ' + karate.properties['CIRCLECI_TOKEN'] }

  Scenario Outline: Get job timeseries data with different parameters
    Given url urlBase
    And path '/insights/time-series', '<project-slug>', 'workflows', '<workflow-name>', 'jobs'
    And params { branch: '<branch>', granularity: '<granularity>', 'start-date': '<start-date>', 'end-date': '<end-date>' }
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        next_page_token: ##string,
        items: #array
      }
      """
    And match each response.items[*] contains
      """
      {
        name: #string,
        min_started_at: #string,
        max_ended_at: #string,
        timestamp: #string,
        metrics: {
          total_runs: #number,
          failed_runs: #number,
          successful_runs: #number,
          throughput: #number,
          median_credits_used: #number,
          total_credits_used: #number,
          duration_metrics: {
            min: ##number,
            median: ##number,
            max: ##number,
            p95: ##number,
            total: ##number
          }
        }
      }
      """
    And match each response.items[*].metrics.total_runs >= 0
    And match each response.items[*].metrics.failed_runs >= 0
    And match each response.items[*].metrics.successful_runs >= 0
    And match each response.items[*].metrics.median_credits_used >= 0
    And match each response.items[*].metrics.total_credits_used >= 0
    And match each response.items[*].min_started_at == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z'
    And match each response.items[*].max_ended_at == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z'
    And match each response.items[*].timestamp == '#regex \\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z'

    Examples:
      | read('insights_time-series_project-slug_workflows_workflow-name_jobs_get.csv') |

  Scenario: Get job timeseries data without optional parameters
    Given url urlBase
    And path '/insights/time-series', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        next_page_token: ##string,
        items: #array
      }
      """
    And match each response.items[*] contains
      """
      {
        name: #string,
        min_started_at: #string,
        max_ended_at: #string,
        timestamp: #string,
        metrics: {
          total_runs: #number,
          failed_runs: #number,
          successful_runs: #number,
          throughput: #number,
          median_credits_used: #number,
          total_credits_used: #number,
          duration_metrics: {
            min: ##number,
            median: ##number,
            max: ##number,
            p95: ##number,
            total: ##number
          }
        }
      }
      """

  Scenario: Get job timeseries data with pagination
    Given url urlBase
    And path '/insights/time-series', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    And param granularity = 'daily'
    And param 'start-date' = '2023-01-01T00:00:00Z'
    And param 'end-date' = '2023-01-30T00:00:00Z'
    And headers authHeader
    When method GET
    Then status 200
    * def nextPageToken = response.next_page_token
    * if (nextPageToken != null) karate.call('job-timeseries-pagination.feature', { token: nextPageToken })

  Scenario: Verify error response for invalid project slug
    Given url urlBase
    And path '/insights/time-series', 'invalid-project-slug', 'workflows', 'build-and-test', 'jobs'
    And headers authHeader
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Verify error response for non-existent workflow
    Given url urlBase
    And path '/insights/time-series', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'non-existent-workflow', 'jobs'
    And headers authHeader
    When method GET
    Then status 404
    And match response.message == '#string'

  Scenario: Verify error response for invalid date range
    Given url urlBase
    And path '/insights/time-series', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    And param 'start-date' = '2023-01-30T00:00:00Z'
    And param 'end-date' = '2023-01-01T00:00:00Z'
    And headers authHeader
    When method GET
    Then status 400
    And match response.message == '#string'

  Scenario: Verify error response for date range exceeding 90 days
    Given url urlBase
    And path '/insights/time-series', 'gh/CircleCI-Public/api-preview-docs', 'workflows', 'build-and-test', 'jobs'
    And param 'start-date' = '2023-01-01T00:00:00Z'
    And param 'end-date' = '2023-05-01T00:00:00Z'
    And headers authHeader
    When method GET
    Then status 400
    And match response.message == '#string'
