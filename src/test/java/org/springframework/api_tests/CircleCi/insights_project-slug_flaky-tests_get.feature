# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /insights/{project-slug}/flaky-tests_get for http method type GET 
# RoostTestHash=dc5a38e5b0
# 
# 

# ********RoostGPT********
Feature: Get flaky tests for a project

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def authHeader = { Authorization: 'Basic ' + karate.properties['API_TOKEN'] }

  Scenario Outline: Get flaky tests for a project with valid project slug
    Given url urlBase
    And path 'insights', '<project-slug>', 'flaky-tests'
    And headers authHeader
    When method GET
    Then status 200
    And match response ==
      """
      {
        "flaky-tests": "#array",
        "total-flaky-tests": "#number"
      }
      """
    And match response['total-flaky-tests'] == "#number"
    And match each response['flaky-tests'] contains
      """
      {
        "time-wasted": "#? _ >= 0 && _ == ~~_",
        "workflow-created-at": "#string",
        "workflow-id": "#string",
        "classname": "##string",
        "pipeline-number": "#? _ >= 0 && _ == ~~_",
        "workflow-name": "#string",
        "test-name": "#string",
        "job-name": "#string",
        "job-number": "#? _ >= 0 && _ == ~~_",
        "times-flaked": "#? _ >= 0 && _ == ~~_",
        "source": "##string",
        "file": "##string"
      }
      """

    Examples:
      | read('insights_project-slug_flaky-tests_get.csv') |

  Scenario: Get flaky tests with invalid project slug
    Given url urlBase
    And path 'insights', 'invalid-project-slug', 'flaky-tests'
    And headers authHeader
    When method GET
    Then status 400
    And match response.message == "#string"

  Scenario: Get flaky tests with unauthorized access
    Given url urlBase
    And path 'insights', 'gh/CircleCI-Public/api-preview-docs', 'flaky-tests'
    When method GET
    Then status 401
    And match response.message == "#string"

  Scenario: Get flaky tests for a non-existent project
    Given url urlBase
    And path 'insights', 'gh/non-existent/project', 'flaky-tests'
    And headers authHeader
    When method GET
    Then status 404
    And match response.message == "#string"
