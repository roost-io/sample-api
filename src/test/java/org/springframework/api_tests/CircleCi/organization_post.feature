# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /organization_post for http method type POST 
# RoostTestHash=38d3369db2
# 
# 

# ********RoostGPT********
Feature: Organization API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def basicAuth = 'Basic ' + karate.properties['BASIC_AUTH']

  Scenario Outline: Create a new organization with different VCS types
    Given url urlBase
    And path '/organization'
    And header Authorization = basicAuth
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "<name>",
        "vcs_type": "<vcs_type>"
      }
      """
    When method POST
    Then status 201
    And match response == { id: '#string', name: '#string', slug: '#string', vcs_type: '#string' }
    And match response.id != null
    And match response.name == '<name>'
    And match response.slug contains '/'
    And match response.vcs_type == '<vcs_type>'

    Examples:
      | read('organization_post.csv') |

  Scenario: Create a new organization with minimal valid data
    Given url urlBase
    And path '/organization'
    And header Authorization = basicAuth
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Minimal Org",
        "vcs_type": "github"
      }
      """
    When method POST
    Then status 201
    And match response.id == '#string'
    And match response.name == 'Minimal Org'
    And match response.slug == '#string'
    And match response.slug contains '/'
    And match response.vcs_type == 'github'

  Scenario: Attempt to create an organization without required name
    Given url urlBase
    And path '/organization'
    And header Authorization = basicAuth
    And header Content-Type = 'application/json'
    And request
      """
      {
        "vcs_type": "github"
      }
      """
    When method POST
    Then status 400
    And match response.message == '#string'

  Scenario: Attempt to create an organization without required vcs_type
    Given url urlBase
    And path '/organization'
    And header Authorization = basicAuth
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Missing VCS Org"
      }
      """
    When method POST
    Then status 400
    And match response.message == '#string'

  Scenario: Attempt to create an organization with invalid vcs_type
    Given url urlBase
    And path '/organization'
    And header Authorization = basicAuth
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Invalid VCS Org",
        "vcs_type": "gitlab"
      }
      """
    When method POST
    Then status 400
    And match response.message == '#string'

  Scenario: Attempt to create an organization without authentication
    Given url urlBase
    And path '/organization'
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Unauthenticated Org",
        "vcs_type": "github"
      }
      """
    When method POST
    Then status 401
    And match response.message == '#string'
