# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /context/{context-id}_delete for http method type DELETE 
# RoostTestHash=880ca4aa89
# 
# 

# ********RoostGPT********
Feature: Delete a context API endpoint

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def uuidPattern = '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

  Scenario Outline: Delete a context with valid context-id
    Given url urlBase
    And path 'context', '<context-id>'
    When method DELETE
    Then status 200
    And match response == { message: '#string' }
    And match response.message != null
    And match response.message == '#present'

    Examples:
      | read('context_context-id_delete.csv') |

  Scenario: Delete a context with invalid context-id format
    Given url urlBase
    And path 'context', 'invalid-uuid'
    When method DELETE
    Then status 400
    And match response == { message: '#string' }
    And match response.message != null

  Scenario: Delete a non-existent context
    Given url urlBase
    And path 'context', '00000000-0000-0000-0000-000000000000'
    When method DELETE
    Then status 404
    And match response == { message: '#string' }
    And match response.message != null

  Scenario: Delete a context without authorization
    Given url urlBase
    And path 'context', '1b969edb-7c71-4d61-8033-b461aab4eece'
    And header Authorization = ''
    When method DELETE
    Then status 401
    And match response == { message: '#string' }
    And match response.message != null

  Scenario: Validate UUID format in path parameter
    * def contextId = '1b969edb-7c71-4d61-8033-b461aab4eece'
    * match contextId == '#regex' + uuidPattern
    Given url urlBase
    And path 'context', contextId
    When method DELETE
    Then status 200
    And match response == { message: '#string' }
    And match response.message != null
