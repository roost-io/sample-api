# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /organization/{org-slug-or-id}/url-orb-allow-list_get for http method type GET 
# RoostTestHash=f475427f04
# 
# 

# ********RoostGPT********
Feature: Organization URL Orb Allow List API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def basicAuth = 'Basic ' + karate.properties['BASIC_AUTH']

  Scenario Outline: List URL Orb allow-list entries for an organization
    Given url urlBase
    And path 'organization', '<org-slug-or-id>', 'url-orb-allow-list'
    And header Authorization = basicAuth
    When method GET
    Then status 200
    And match response == { items: '#array' }
    And match each response.items ==
      """
      {
        id: '#string',
        name: '#string',
        prefix: '#string',
        auth: '#? _ == "github-oauth" || _ == "none" || _ == "bitbucket-oauth" || _ == "github-app"'
      }
      """
    And match each response.items[*].id == '#uuid'
    And match each response.items[*].name != null
    And match each response.items[*].prefix != null
    And match each response.items[*].auth != null

    Examples:
      | read('organization_org-slug-or-id_url-orb-allow-list_get.csv') |

  Scenario Outline: Verify specific properties of URL Orb allow-list entries
    Given url urlBase
    And path 'organization', '<org-slug-or-id>', 'url-orb-allow-list'
    And header Authorization = basicAuth
    When method GET
    Then status 200
    And match response.items[0] contains
      """
      {
        id: '#uuid',
        name: '#string',
        prefix: '#string',
        auth: '#? _ == "github-oauth" || _ == "none" || _ == "bitbucket-oauth" || _ == "github-app"'
      }
      """

    Examples:
      | read('organization_org-slug-or-id_url-orb-allow-list_get.csv') |

  Scenario: Error handling for invalid organization
    Given url urlBase
    And path 'organization', 'invalid-org', 'url-orb-allow-list'
    And header Authorization = basicAuth
    When method GET
    Then status 404
    And match response == { message: '#string' }

  Scenario: Error handling for unauthorized access
    Given url urlBase
    And path 'organization', 'gh/CircleCI-Public', 'url-orb-allow-list'
    # No authorization header
    When method GET
    Then status 401
    And match response == { message: '#string' }
