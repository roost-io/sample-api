# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /organization/{org-slug-or-id}/url-orb-allow-list_post for http method type POST 
# RoostTestHash=b75dae64e4
# 
# 

# ********RoostGPT********
Feature: Create a new URL Orb allow-list entry

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def authHeader = call read('classpath:helpers/basic-auth.js')

  Scenario Outline: Create a URL Orb allow-list entry with valid data
    Given url urlBase
    And path 'organization', <orgSlugOrId>, 'url-orb-allow-list'
    And header Authorization = authHeader
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": <name>,
        "prefix": <prefix>,
        "auth": <auth>
      }
      """
    When method POST
    Then status 200
    And match response.id == '#string'
    And match response.id == '#regex [a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}'
    And match response.message == '#string'
    And match response.message == 'Created.'
    And match response == { id: '#string', message: '#string' }

    Examples:
      | read('organization_org-slug-or-id_url-orb-allow-list_post.csv') |

  Scenario: Create a URL Orb allow-list entry with missing required fields
    Given url urlBase
    And path 'organization', 'gh/CircleCI-Public', 'url-orb-allow-list'
    And header Authorization = authHeader
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Allow URL orbs from raw.githubusercontent.com/CircleCI-Public"
      }
      """
    When method POST
    Then status 400
    And match response.message == '#string'

  Scenario: Create a URL Orb allow-list entry with invalid auth type
    Given url urlBase
    And path 'organization', 'gh/CircleCI-Public', 'url-orb-allow-list'
    And header Authorization = authHeader
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Allow URL orbs from raw.githubusercontent.com/CircleCI-Public",
        "prefix": "https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/",
        "auth": "invalid-auth-type"
      }
      """
    When method POST
    Then status 400
    And match response.message == '#string'

  Scenario: Create a URL Orb allow-list entry with invalid organization
    Given url urlBase
    And path 'organization', 'invalid-org', 'url-orb-allow-list'
    And header Authorization = authHeader
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Allow URL orbs from raw.githubusercontent.com/CircleCI-Public",
        "prefix": "https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/",
        "auth": "github-app"
      }
      """
    When method POST
    Then status 404
    And match response.message == '#string'

  Scenario: Create a URL Orb allow-list entry without authentication
    Given url urlBase
    And path 'organization', 'gh/CircleCI-Public', 'url-orb-allow-list'
    And header Content-Type = 'application/json'
    And request
      """
      {
        "name": "Allow URL orbs from raw.githubusercontent.com/CircleCI-Public",
        "prefix": "https://raw.githubusercontent.com/CircleCI-Public/orbs/refs/heads/main/",
        "auth": "github-app"
      }
      """
    When method POST
    Then status 401
    And match response.message == '#string'
