# ********RoostGPT********

# Test generated by RoostGPT for test karateCircleCIFile using AI Type Claude AI and AI Model claude-3-7-sonnet-20250219
# 
# Feature file generated for /me_get for http method type GET 
# RoostTestHash=4f4e94f0a0
# 
# 

# ********RoostGPT********
Feature: User Information API

  Background:
    * def urlBase = karate.properties['URL_BASE']
    * def basicAuth = call read('classpath:basic-auth.js')
    * configure headers = { 'Authorization': 'Basic ' + basicAuth }

  Scenario: Get current user information
    Given url urlBase
    And path '/me'
    When method GET
    Then status 200
    And match response ==
      """
      {
        id: '#string',
        login: '#string',
        name: '#string'
      }
      """
    And match response.id == '#uuid'
    And match response.login != null
    And match response.name != null
    And match response.id == '#present'
    And match response.login == '#present'
    And match response.name == '#present'

  Scenario: Get current user information and validate response headers
    Given url urlBase
    And path '/me'
    When method GET
    Then status 200
    And match responseHeaders['Content-Type'][0] contains 'application/json'
    And match response.id == '#uuid'
    And match response.login == '#string'
    And match response.name == '#string'

  Scenario: Error response when authentication fails
    Given url urlBase
    And path '/me'
    And configure headers = { 'Authorization': 'Basic invalid_token' }
    When method GET
    Then status 401
    And match response.message == '#string'

  Scenario: Error response when authorization is missing
    Given url urlBase
    And path '/me'
    And configure headers = null
    When method GET
    Then status 401
    And match response.message == '#string'
