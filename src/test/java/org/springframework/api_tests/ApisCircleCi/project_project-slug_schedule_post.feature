# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /project/{project-slug}/schedule_post for http method type POST 
# RoostTestHash=007057fd92
# 
# 

# ********RoostGPT********
Feature: Create Schedule API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase

  Scenario Outline: Create a schedule with valid inputs
    Given path 'project', '<project-slug>', 'schedule'
    And request
      """
      { 
        "name": "<name>",
        "timetable": <timetable>,
        "attribution-actor": "<attribution-actor>",
        "parameters": <parameters>,
        "description": "<description>"
      }
      """
    When method POST
    Then status 201
    And match response == '#object'
    And match response.id == '#uuid'
    And match response.name == '<name>'
    And match response.timetable == <timetable>
    And match response.actor == '#object'
    And match response.actor.id == '#uuid'
    And match response.actor.login == '#string'
    And match response.actor.name == '#string'
    And match response.created-at == '#date-time'
    And match response.updated-at == '#date-time'
    And match response.project-slug == '<project-slug>'
    And match response.parameters == <parameters>
    And match response.description == '<description>'
    And match response.headers['Content-Type'] contains 'application/json'

    Examples:
      | read('project_project-slug_schedule_post.csv') |

  Scenario Outline: Error response for invalid project-slug
    Given path 'project', '<project-slug>', 'schedule'
    And request
      """
      { 
        "name": "Invalid Test",
        "timetable": { "per-hour": 1, "hours-of-day": [0], "days-of-week": ["MON"] },
        "attribution-actor": "current",
        "parameters": { "branch": "feature/test" },
        "description": "Invalid test"
      }
      """
    When method POST
    Then status 404
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | project-slug           |
      | 'invalid/project-slug' |
