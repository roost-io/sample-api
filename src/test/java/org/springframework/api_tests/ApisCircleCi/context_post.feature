# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /context_post for http method type POST 
# RoostTestHash=88dc48acd7
# 
# 

# ********RoostGPT********
Feature: Context API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'
    * header Content-Type = 'application/json'

  Scenario Outline: Create a new context with valid input
    Given path '/context'
    And request
      """
      { 
        "name": "<name>", 
        "owner": { 
          "id": "<ownerId>", 
          "type": "<ownerType>" 
        } 
      }
      """
    When method POST
    Then status 200
    And match response == '#object'
    And match response.id == '#string'
    And match response.name == '<name>'
    And match response.created_at == '#string'
    And match response.created_at == '#regex ^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{3}Z'

    Examples:
      | read('context_post.csv') |

  Scenario Outline: Create a new context with invalid input
    Given path '/context'
    And request
      """
      { 
        "name": "<name>", 
        "owner": { 
          "id": "<ownerId>", 
          "type": "<ownerType>" 
        } 
      }
      """
    When method POST
    Then status 400
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | name     | ownerId                              | ownerType    |
      |          | 497f6eca-6276-4993-bfeb-53cbbbba6f08 | organization |
      | TestName |                                      | organization |
      | TestName | 497f6eca-6276-4993-bfeb-53cbbbba6f08 |              |

  Scenario Outline: Create a new context with invalid owner type
    Given path '/context'
    And request
      """
      { 
        "name": "<name>", 
        "owner": { 
          "id": "<ownerId>", 
          "type": "<ownerType>" 
        } 
      }
      """
    When method POST
    Then status 400
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | name     | ownerId                              | ownerType |
      | TestName | 497f6eca-6276-4993-bfeb-53cbbbba6f08 | account   |
