# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /insights/pages/{project-slug}/summary_get for http method type GET 
# RoostTestHash=73acfe91d1
# 
# 

# ********RoostGPT********
Feature: Insights API - Get Project Summary

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'

  Scenario Outline: Get summary metrics and trends for a project
    Given path 'insights/pages/<project-slug>/summary'
    And param 'reporting-window' = '<reporting-window>'
    And param 'branches' = '<branches>'
    And param 'workflow-names' = '<workflow-names>'
    When method GET
    Then status 200
    And match response.org_id == '#string'
    And match response.project_id == '#string'
    And match response.project_data.metrics.total_runs == '#number'
    And match response.project_data.metrics.total_duration_secs == '#number'
    And match response.project_data.metrics.total_credits_used == '#number'
    And match response.project_data.metrics.success_rate == '#number'
    And match response.project_data.metrics.throughput == '#number'
    And match response.project_data.trends.total_runs == '#number'
    And match response.project_data.trends.total_duration_secs == '#number'
    And match response.project_data.trends.total_credits_used == '#number'
    And match response.project_data.trends.success_rate == '#number'
    And match response.project_data.trends.throughput == '#number'
    And match response.project_workflow_data[*].workflow_name == '#string'
    And match response.project_workflow_data[*].metrics.total_credits_used == '#number'
    And match response.project_workflow_data[*].metrics.p95_duration_secs == '#number'
    And match response.project_workflow_data[*].metrics.total_runs == '#number'
    And match response.project_workflow_data[*].metrics.success_rate == '#number'
    And match response.project_workflow_data[*].trends.total_credits_used == '#number'
    And match response.project_workflow_data[*].trends.p95_duration_secs == '#number'
    And match response.project_workflow_data[*].trends.total_runs == '#number'
    And match response.project_workflow_data[*].trends.success_rate == '#number'
    And match response.project_workflow_branch_data[*].workflow_name == '#string'
    And match response.project_workflow_branch_data[*].branch == '#string'
    And match response.project_workflow_branch_data[*].metrics.total_credits_used == '#number'
    And match response.project_workflow_branch_data[*].metrics.p95_duration_secs == '#number'
    And match response.project_workflow_branch_data[*].metrics.total_runs == '#number'
    And match response.project_workflow_branch_data[*].metrics.success_rate == '#number'
    And match response.project_workflow_branch_data[*].trends.total_credits_used == '#number'
    And match response.project_workflow_branch_data[*].trends.p95_duration_secs == '#number'
    And match response.project_workflow_branch_data[*].trends.total_runs == '#number'
    And match response.project_workflow_branch_data[*].trends.success_rate == '#number'
    And match response.all_branches == '#[] string'
    And match response.all_workflows == '#[] string'

    Examples:
      | read('insights_pages_project-slug_summary_get.csv') |

  Scenario: Invalid project slug
    Given path 'insights/pages/invalid-slug/summary'
    When method GET
    Then status 404
    And match response.message == '#string'
