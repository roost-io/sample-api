# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /project/{project-slug}/envvar_post for http method type POST 
# RoostTestHash=9ce923d63b
# 
# 

# ********RoostGPT********
Feature: Environment Variable Management

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: 'Basic REPLACE_BASIC_AUTH', 'content-type': 'application/json' }

  Scenario Outline: Create a new environment variable
    Given path 'project/<project-slug>/envvar'
    And request
      """
      { 
        name: '<name>', 
        value: '<value>' 
      }
      """
    When method POST
    Then status 201
    And match response == '#object'
    And match response.name == '#string'
    And match response.value == '#string'
    And match response['created-at'] == '#string'
    And match response contains
      """
      { 
        name: '<name>', 
        value: '<value>' 
      }
      """
    And match responseHeaders['Content-Type'] == 'application/json'

    Examples:
      | read('project_project-slug_envvar_post.csv') |

  Scenario Outline: Error response for invalid project slug
    Given path 'project/<project-slug>/envvar'
    And request
      """
      { 
        name: '<name>', 
        value: '<value>' 
      }
      """
    When method POST
    Then status 404
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | project-slug         | name | value    |
      | invalid/project/slug | foo  | xxxx1234 |

  Scenario Outline: Error response for missing required fields
    Given path 'project/<project-slug>/envvar'
    And request
      """
      { 
        name: '<name>', 
        value: '<value>' 
      }
      """
    When method POST
    Then status 400
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | project-slug                        | name | value |
      | gh/CircleCI-Public/api-preview-docs |      |       |
