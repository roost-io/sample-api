# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /schedule/{schedule-id}_patch for http method type PATCH 
# RoostTestHash=4c0c527440
# 
# 

# ********RoostGPT********
Feature: Update Schedule API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'
    * path 'schedule'

  Scenario Outline: Update schedule with valid inputs
    Given path '<schedule-id>'
    And request
      """
      { 
        "description": "<description>",
        "name": "<name>",
        "timetable": {
          "per-hour": <per-hour>,
          "hours-of-day": <hours-of-day>,
          "days-of-week": <days-of-week>,
          "days-of-month": <days-of-month>,
          "months": <months>
        },
        "attribution-actor": "<attribution-actor>",
        "parameters": <parameters>
      }
      """
    When method PATCH
    Then status 200
    And match response == '#object'
    And match response.id == '#uuid'
    And match response.name == '#string'
    And match response.timetable == '#object'
    And match response.timetable.per-hour == '#number'
    And match response.timetable.hours-of-day == '#[] number'
    And match response.timetable.days-of-week == '#[] string'
    And match response.timetable.days-of-month == '#[] number'
    And match response.timetable.months == '#[] string'
    And match response.updated-at == '#string'
    And match response.created-at == '#string'
    And match response.project-slug == '#string'
    And match response.parameters == '#object'
    And match response.actor == '#object'
    And match response.actor.id == '#uuid'
    And match response.actor.login == '#string'
    And match response.actor.name == '#string'
    And match response.description == '#string'

    Examples:
      | read('schedule_schedule-id_patch.csv') |

  Scenario: Update schedule with invalid schedule-id
    Given path 'invalid-schedule-id'
    And request
      """
      { 
        "description": "Invalid Test",
        "name": "Invalid",
        "timetable": {
          "per-hour": 10,
          "hours-of-day": [10, 20],
          "days-of-week": ["TUE"],
          "days-of-month": [5, 25],
          "months": ["MAR"]
        },
        "attribution-actor": "system",
        "parameters": { "deploy_prod": false, "branch": "feature/invalid" }
      }
      """
    When method PATCH
    Then status 404
    And match response == '#object'
    And match response.message == '#string'
