# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /project/{project-slug}/checkout-key_post for http method type POST 
# RoostTestHash=ebb0d92604
# 
# 

# ********RoostGPT********
Feature: Create a new checkout key for a project

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'
    * header Content-Type = 'application/json'

  Scenario Outline: Create a new checkout key with valid input
    Given path 'project', '<project-slug>', 'checkout-key'
    And request
      """
      { "type": "<type>" }
      """
    When method POST
    Then status 201
    And match response == '#object'
    And match response contains
      """
      { 
        'public-key': '#string', 
        'type': '#string', 
        'fingerprint': '#string', 
        'preferred': '#boolean', 
        'created-at': '#string' 
      }
      """
    And match response.type == '#string'
    And match response['public-key'] == '#string'
    And match response.fingerprint == '#string'
    And match response.preferred == '#boolean'
    And match response['created-at'] == '#string'

    Examples:
      | read('project_project-slug_checkout-key_post.csv') |

  Scenario Outline: Attempt to create a checkout key with invalid input
    Given path 'project', '<project-slug>', 'checkout-key'
    And request
      """
      { "type": "<type>" }
      """
    When method POST
    Then status 400
    And match response == '#object'
    And match response contains
      """
      { message: '#string' }
      """

    Examples:
      | project-slug                        | type        |
      | gh/CircleCI-Public/api-preview-docs | invalid-key |
      | gh/CircleCI-Public/api-preview-docs |             |

  Scenario: Attempt to create a checkout key for a non-existent project
    Given path 'project', 'non-existent/project', 'checkout-key'
    And request
      """
      { "type": "deploy-key" }
      """
    When method POST
    Then status 404
    And match response == '#object'
    And match response contains
      """
      { message: '#string' }
      """
