# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /project/{project-slug}/pipeline_post for http method type POST 
# RoostTestHash=1c9cc386f1
# 
# 

# ********RoostGPT********
Feature: Trigger a new pipeline on a project

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'
    * header Content-Type = 'application/json'

  Scenario Outline: Trigger a new pipeline with valid inputs
    Given path 'project', '<project-slug>', 'pipeline'
    And request
      """
      { 
        "branch": "<branch>", 
        "tag": "<tag>", 
        "parameters": <parameters> 
      }
      """
    When method POST
    Then status 201
    And match response == '#object'
    And match response.id == '#string'
    And match response.state == '#string'
    And match response.number == '#number'
    And match response.created_at == '#string'

    Examples:
      | read('project_project-slug_pipeline_post.csv') |

  Scenario Outline: Trigger a new pipeline with missing branch and tag
    Given path 'project', '<project-slug>', 'pipeline'
    And request
      """
      { 
        "parameters": <parameters> 
      }
      """
    When method POST
    Then status 201
    And match response == '#object'
    And match response.id == '#string'
    And match response.state == '#string'
    And match response.number == '#number'
    And match response.created_at == '#string'

    Examples:
      | read('project_project-slug_pipeline_post.csv') |

  Scenario Outline: Trigger a new pipeline with invalid project slug
    Given path 'project', '<project-slug>', 'pipeline'
    And request
      """
      { 
        "branch": "<branch>", 
        "tag": "<tag>", 
        "parameters": <parameters> 
      }
      """
    When method POST
    Then status 404
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | project-slug         | branch                 | tag       | parameters              |
      | invalid/project-slug | feature/design-new-api | v3.1.4159 | { "deploy_prod": true } |

  Scenario Outline: Trigger a new pipeline with invalid request body
    Given path 'project', '<project-slug>', 'pipeline'
    And request
      """
      { 
        "branch": "<branch>", 
        "tag": "<tag>", 
        "parameters": <parameters> 
      }
      """
    When method POST
    Then status 400
    And match response == '#object'
    And match response.message == '#string'

    Examples:
      | project-slug                        | branch | tag | parameters                   |
      | gh/CircleCI-Public/api-preview-docs |        |     | { "deploy_prod": "invalid" } |
