# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /context_get for http method type GET 
# RoostTestHash=bc523b63e2
# 
# 

# ********RoostGPT********
Feature: Context API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Circle-Token = 'CIRCLE_TOKEN'

  Scenario Outline: List contexts with valid parameters
    Given path 'context'
    And param owner-id = '<ownerId>'
    And param owner-slug = '<ownerSlug>'
    And param owner-type = '<ownerType>'
    And param page-token = '<pageToken>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.items == '#array'
    And match response.items[*].id == '#string'
    And match response.items[*].name == '#string'
    And match response.items[*].created_at == '#string'
    And match response.next_page_token == '#string?'

    Examples:
      | read('context_get.csv') |

  Scenario: List contexts with invalid owner-id
    Given path 'context'
    And param owner-id = 'invalid-uuid'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.items == '#array'
    And match response.next_page_token == '#string?'

  Scenario: List contexts with invalid owner-type
    Given path 'context'
    And param owner-type = 'invalid-type'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.items == '#array'
    And match response.next_page_token == '#string?'

  Scenario: List contexts with no parameters
    Given path 'context'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.items == '#array'
    And match response.next_page_token == '#string?'

  Scenario: Error response for invalid request
    Given path 'context'
    And param owner-id = 'invalid-uuid'
    And param owner-type = 'invalid-type'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.message == '#string'
