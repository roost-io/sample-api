# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /context/{context-id}/environment-variable/{env-var-name}_put for http method type PUT 
# RoostTestHash=a071a14843
# 
# 

# ********RoostGPT********
Feature: Environment Variable Management API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'
    * header Content-Type = 'application/json'

  Scenario Outline: Add or update an environment variable
    Given path 'context', '<context-id>', 'environment-variable', '<env-var-name>'
    And request
      """
      { "value": "<value>" }
      """
    When method PUT
    Then status 200
    And match response == '#notnull'
    And match response.variable == '#string'
    And match response.created_at == '#string'
    And match response.updated_at == '#string'
    And match response.context_id == '#uuid'

    Examples:
      | read('context_context-id_environment-variable_env-var-name_put.csv') |

  Scenario Outline: Add or update an environment variable with invalid context-id
    Given path 'context', '<context-id>', 'environment-variable', '<env-var-name>'
    And request
      """
      { "value": "<value>" }
      """
    When method PUT
    Then status 400
    And match response.message == '#string'

    Examples:
      | context-id   | env-var-name  | value             |
      | invalid-uuid | POSTGRES_USER | some-secret-value |

  Scenario Outline: Add or update an environment variable with missing value
    Given path 'context', '<context-id>', 'environment-variable', '<env-var-name>'
    And request
      """
      {}
      """
    When method PUT
    Then status 400
    And match response.message == '#string'

    Examples:
      | context-id                           | env-var-name  |
      | 123e4567-e89b-12d3-a456-426614174000 | POSTGRES_USER |

  Scenario Outline: Verify response headers
    Given path 'context', '<context-id>', 'environment-variable', '<env-var-name>'
    And request
      """
      { "value": "<value>" }
      """
    When method PUT
    Then status 200
    And match responseHeaders['Content-Type'] == 'application/json'

    Examples:
      | read('context_context-id_environment-variable_env-var-name_put.csv') |
