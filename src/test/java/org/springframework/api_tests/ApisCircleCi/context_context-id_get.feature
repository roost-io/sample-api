# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /context/{context-id}_get for http method type GET 
# RoostTestHash=4b383a9190
# 
# 

# ********RoostGPT********
Feature: Context API Tests
  This feature file contains tests for the Context API endpoint.

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Authorization: 'Basic REPLACE_BASIC_AUTH' }

  Scenario Outline: Get context by ID
    Given path 'context', <contextId>
    When method GET
    Then status <statusCode>
    And match responseHeaders contains { 'Content-Type': '#string' }
    And match response == <responseSchema>

    Examples:
      | contextId                              | statusCode | responseSchema                                          |
      | '123e4567-e89b-12d3-a456-426614174000' |        200 | { id: '#uuid', name: '#string', created_at: '#string' } |
      | 'invalid-uuid'                         |        400 | { message: '#string' }                                  |
      | '00000000-0000-0000-0000-000000000000' |        404 | { message: '#string' }                                  |

  Scenario: Get context with valid UUID
    Given path 'context', '123e4567-e89b-12d3-a456-426614174000'
    When method GET
    Then status 200
    And match responseHeaders contains { 'Content-Type': '#string' }
    And match response.id == '#uuid'
    And match response.name == '#string'
    And match response.created_at == '#string'

  Scenario: Get context with invalid UUID
    Given path 'context', 'invalid-uuid'
    When method GET
    Then status 400
    And match responseHeaders contains { 'Content-Type': '#string' }
    And match response.message == '#string'

  Scenario: Get context with non-existent UUID
    Given path 'context', '00000000-0000-0000-0000-000000000000'
    When method GET
    Then status 404
    And match responseHeaders contains { 'Content-Type': '#string' }
    And match response.message == '#string'
