# ********RoostGPT********

# Test generated by RoostGPT for test Karate_Test using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /project/{project-slug}/pipeline/mine_get for http method type GET 
# RoostTestHash=a5d3e6e24e
# 
# 

# ********RoostGPT********
Feature: Test the /project/{project-slug}/pipeline/mine API endpoint

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * header Authorization = 'Basic REPLACE_BASIC_AUTH'

  Scenario Outline: Verify successful retrieval of pipelines with valid project-slug
    Given path 'project', '<project-slug>', 'pipeline', 'mine'
    And param page-token = '<page-token>'
    When method GET
    Then status 200
    And match response == '#object'
    And match response.items == '#array'
    And match response.items[*].id == '#string'
    And match response.items[*].errors == '#array'
    And match response.items[*].errors[*].type == '#string'
    And match response.items[*].errors[*].message == '#string'
    And match response.items[*].project_slug == '#string'
    And match response.items[*].updated_at == '#string'
    And match response.items[*].number == '#number'
    And match response.items[*].trigger_parameters == '#object'
    And match response.items[*].state == '#string'
    And match response.items[*].created_at == '#string'
    And match response.items[*].trigger == '#object'
    And match response.items[*].trigger.type == '#string'
    And match response.items[*].trigger.received_at == '#string'
    And match response.items[*].trigger.actor == '#object'
    And match response.items[*].trigger.actor.login == '#string'
    And match response.items[*].trigger.actor.avatar_url == '#string'
    And match response.items[*].vcs == '#object'
    And match response.items[*].vcs.provider_name == '#string'
    And match response.items[*].vcs.target_repository_url == '#string'
    And match response.items[*].vcs.branch == '#string'
    And match response.items[*].vcs.review_id == '#string'
    And match response.items[*].vcs.review_url == '#string'
    And match response.items[*].vcs.revision == '#string'
    And match response.items[*].vcs.tag == '#string'
    And match response.items[*].vcs.commit == '#object'
    And match response.items[*].vcs.commit.subject == '#string'
    And match response.items[*].vcs.commit.body == '#string'
    And match response.items[*].vcs.origin_repository_url == '#string'
    And match response.next_page_token == '#string'

    Examples:
      | read('project_project-slug_pipeline_mine_get.csv') |

  Scenario: Verify error response for invalid project-slug
    Given path 'project', 'invalid-slug', 'pipeline', 'mine'
    When method GET
    Then status 404
    And match response == '#object'
    And match response.message == '#string'
