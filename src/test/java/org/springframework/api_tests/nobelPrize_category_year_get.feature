# ********RoostGPT********

# Test generated by RoostGPT for test karate-sample-api using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=9818bf6b39
# 
# 

# ********RoostGPT********
Feature: Testing Nobel Prize API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase

Scenario: Test GET endpoint for nobel prize

    Given path '/2.1/nobelPrize', 'chemistry', 1989
    When method get
    Then status 200
    And match response contains { 'nobelPrize': '#object' }
    
    * def response_data = response.nobelPrize
    * match response_data.awardYear == 1989
    * match response_data.category.en == 'English'
    * match response_data.categoryFullName.en == 'English'
    * match response_data.dateAwarded == '2015-11-12'
    
    * match response_data.prizeAmount == '#number'
    * match response_data.prizeAmount == 1000000
    * match response_data.prizeAmountAdjusted == '#number'
    * match response_data.prizeAmountAdjusted == 1000000

    * match response_data.topMotivation.en == 'English'
    * def laureates_data = response_data.laureates
    * match laureates_data contains { 'id': '#number', 'portion': '1', 'sortOrder': '1' }
    * match laureates_data[0].name.en == 'English'
    * match laureates_data[0].motivation.en == 'English'
    * def links_data = laureates_data[0].links
    * match links_data contains { 'rel': '#string', 'href': '#string', 'action': '#string', 'types': '#string' }

Scenario: Test GET endpoint for nobel prize with incorrect parameters

    Given path '/2.1/nobelPrize', 'unknown', 1700
    When method get
    Then status 400
    And match response contains { 'code': '404', 'message': 'There is not Laureate born that date' }

Scenario: Test GET endpoint for nobel prize with missing parameters

    Given path '/2.1/nobelPrize', 'physics'
    When method get
    Then status 404
    And match response contains { 'code': '404', 'message': 'There is not Laureate born that date' }

Scenario: Test GET endpoint for nobel prize with invalid parameters

    Given path '/2.1/nobelPrize', 'chemistry', 'year'
    When method get
    Then status 422
    And match response contains { 'code': '404', 'message': 'There is not Laureate born that date' }
