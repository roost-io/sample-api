# ********RoostGPT********

# Test generated by RoostGPT for test claude-karate-apitest using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=adfce3f1d2
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API

Background:
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase

Scenario Outline: Get Nobel Prize by category and year
    Given path '/2.1/nobelPrize/<category>/<year>'
    When method GET
    Then status 200
    And match response.nobelPrize.awardYear == <year>
    And match response.nobelPrize.category.en == <categoryEn>
    And match response.nobelPrize.categoryFullName.en == <categoryFullNameEn>
    And match response.nobelPrize.dateAwarded == <dateAwarded>
    And match response.nobelPrize.prizeAmount == <prizeAmount>
    And match response.nobelPrize.prizeAmountAdjusted == <prizeAmountAdjusted>
    And match response.nobelPrize.topMotivation.en == <topMotivationEn>
    And match each response.nobelPrize.laureates == 
    """
        {
            id: '#number',
            name: {
                en: '#string',
                se: '##string',
                false: '##string'
            },
            portion: '#string',
            sortOrder: '#string',
            motivation: {
                en: '#string',
                se: '##string',
                false: '##string'  
            },
            links: '#[] link'
        }
    """
    
Examples:
| category | year | categoryEn | categoryFullNameEn   | dateAwarded | prizeAmount | prizeAmountAdjusted | topMotivationEn                                 |
| che      | 1989 | Chemistry  | Chemistry            | 2015-11-12  | 1000000     | 1000000             | "for their pioneering research on catalysis"    |
| eco      | 2005 | Economics  | Economic Sciences    | 2015-11-12  | 1000000     | 1000000             | "for having enhanced our understanding of conflict and cooperation" |

Scenario: Get Nobel Prize with invalid category
    Given path '/2.1/nobelPrize/invalid/2000'
    When method GET
    Then status 400
    And match response == 
    """
        {
            code: '#string',
            message: '#string'
        }
    """
    
Scenario: Get Nobel Prize with invalid year
    Given path '/2.1/nobelPrize/che/1800'
    When method GET
    Then status 400
    And match response == 
    """
        {  
            code: '#string',
            message: '#string'
        }
    """

Scenario: Get Nobel Prize with non-existent data
    Given path '/2.1/nobelPrize/lit/2030'
    When method GET 
    Then status 404
    And match response ==
    """
        {
            code: '#string',
            message: '#string'  
        }
    """
