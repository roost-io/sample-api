# ********RoostGPT********

# Test generated by RoostGPT for test azure-karate-apitest using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /nobelPrize/{category}/{year}_get for http method type GET 
# RoostTestHash=9818bf6b39
# 
# 

# ********RoostGPT********
Feature: Nobel Prize API

Background:    
* def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
* url urlBase
* def AUTH_TOKEN = karate.properties['AUTH_TOKEN']
* header Authorization = AUTH_TOKEN

Scenario Outline: Get specific Nobel prize given the category and year

Given path '/2.1/nobelPrize/', '<category>', '/', '<year>'
When method GET
Then status 200
And match response == {code: '#(200)', message: '#string'}
And match each response.nobelPrize.category == {en: '#string', se: '#string', no: '#string'}
And match response.nobelPrize.topMotivation == {en: '#string', se: '#string', no: '#string'}
And match response.nobelPrize.awardYear == #number
And match response.nobelPrize.dateAwarded == '#string'
And match response == {message: 'Successful call of the Nobel Prize giving the category and year'}

Examples:
| category | year |
| 'medicine' | '1901' |
| 'physics'  | '1923' |
| 'chemistry' | '1944' |

Scenario Outline: Handle error for bad requests

Given path '/2.1/nobelPrize/', '<category>', '/', '<year>'
When method GET
Then status <statusCode>
And match response == {code: '<statusCode>', message: '#string'}

Examples:
| category  | year  | statusCode |
| 'wrong_category'  | '1901' | 400  |
| 'physics' | 'not_valid_year' | 404 |
| 'chemistry' | 'future_year' | 422 |
