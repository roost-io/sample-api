# ********RoostGPT********

# Test generated by RoostGPT for test karateNobelSwaggerAPI using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=bb9ad621b1
# 
# 

# ********RoostGPT********
Feature: Test Nobel Prize Laureates API

  Background:
    * def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties["AUTH_TOKEN"])' }

  Scenario Outline: Get Laureates with valid parameters
    Given path '/2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param name = <name>
    When method GET
    Then status 200
    And match response.laureates == '#[]'
    And match response.meta.offset == <offset>
    And match response.meta.limit == <limit>
    And match response.meta.sort == <sort>

    Examples:
      | read('laureates_get.csv') |

  Scenario: Get Laureates with invalid sort parameter
    Given path '/2.1/laureates'
    And param sort = 'invalid'
    When method GET
    Then status 400
    And match response.code == '404'
    And match response.message == '#string'

  Scenario: Get Laureates with valid ID
    Given path '/2.1/laureates'
    And param ID = 1
    When method GET
    Then status 200
    And match response.laureates[0].id == 1
    And match response.laureates[0].laureateIfPerson.knownName.en == '#string'

  Scenario: Get Laureates with invalid ID
    Given path '/2.1/laureates'
    And param ID = -1
    When method GET
    Then status 400
    And match response.code == '404'
    And match response.message == '#string'

  Scenario: Get Laureates with birthDate range
    Given path '/2.1/laureates'
    And param birthDate = 1900
    And param birthDateTo = 2000
    When method GET
    Then status 200
    And match response.laureates == '#[]'

  Scenario: Get Laureates with unsupported HTTP method
    Given path '/2.1/laureates'
    When method POST
    Then status 405

  Scenario: Validate response schema for successful call
    Given path '/2.1/laureates'
    When method GET
    Then status 200
    And match response.laureates == '#[]'
    And match response.meta == '#object'
    And match each response.laureates == { id: '#number', laureateIfPerson: '#object?' }
