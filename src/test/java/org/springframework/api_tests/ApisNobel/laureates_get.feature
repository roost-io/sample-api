# ********RoostGPT********

# Test generated by RoostGPT for test karateNobelSwaggerAPI using AI Type Azure Open AI and AI Model Inference
# 
# Feature file generated for /laureates_get for http method type GET 
# RoostTestHash=9608ebea00
# 
# 

# ********RoostGPT********
Feature: Test /2.1/laureates endpoint

  Background:
    * def urlBase = karate.properties['URL1_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase

  Scenario Outline: Test GET /2.1/laureates with valid query parameters
    * configure headers = { Authorization: #(karate.properties['URL1_URL1_AUTH_TOKEN']) }
    Given path '/2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = '<sort>'
    And param ID = <ID>
    And param name = '<name>'
    And param gender = '<gender>'
    And param motivation = '<motivation>'
    And param affiliation = '<affiliation>'
    And param residence = '<residence>'
    And param birthDate = '<birthDate>'
    And param birthDateTo = '<birthDateTo>'
    And param deathDate = '<deathDate>'
    And param deathDateTo = '<deathDateTo>'
    And param foundedDate = '<foundedDate>'
    And param birthCity = '<birthCity>'
    And param birthCountry = '<birthCountry>'
    And param birthContinent = '<birthContinent>'
    And param deathCity = '<deathCity>'
    And param deathCountry = '<deathCountry>'
    And param deathContinent = '<deathContinent>'
    And param foundedCity = '<foundedCity>'
    And param foundedCountry = '<foundedCountry>'
    And param foundedContinent = '<foundedContinent>'
    And param HeadquartersCity = '<HeadquartersCity>'
    And param HeadquartersCountry = '<HeadquartersCountry>'
    And param HeadquartersContinent = '<HeadquartersContinent>'
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = '<nobelPrizeCategory>'
    And param format = '<format>'
    And param csvLang = '<csvLang>'
    When method get
    Then status 200
    And match response ==
    """
    {
      laureates: #array,
      laureates[0]: #object,
      laureates[0].id: #number,
      laureates[0].laureateIfPerson: #object,
      laureates[0].laureateIfPerson.knownName: #object,
      laureates[0].laureateIfPerson.knownName.en: #string,
      laureates[0].laureateIfPerson.knownName.se: #string,
      laureates[0].laureateIfPerson.knownName.false: #string,
      laureates[0].laureateIfPerson.givenName: #object,
      laureates[0].laureateIfPerson.givenName.en: #string,
      laureates[0].laureateIfPerson.givenName.se: #string,
      laureates[0].laureateIfPerson.givenName.false: #string,
      laureates[0].laureateIfPerson.familyName: #object,
      laureates[0].laureateIfPerson.familyName.en: #string,
      laureates[0].laureateIfPerson.familyName.se: #string,
      laureates[0].laureateIfPerson.familyName.false: #string,
      laureates[0].laureateIfPerson.fullName: #object,
      laureates[0].laureateIfPerson.fullName.en: #string,
      laureates[0].laureateIfPerson.fullName.se: #string,
      laureates[0].laureateIfPerson.fullName.false: #string,
      laureates[0].laureateIfPerson.filename: #string,
      laureates[0].laureateIfPerson.penname: #string,
      laureates[0].laureateIfPerson.gender: #string,
      laureates[0].laureateIfPerson.birth: #object,
      laureates[0].laureateIfPerson.birth.date: #string,
      laureates[0].laureateIfPerson.birth.place: #object,
      laureates[0].laureateIfPerson.birth.place.city: #object,
      laureates[0].laureateIfPerson.birth.place.city.en: #string,
      laureates[0].laureateIfPerson.birth.place.city.se: #string,
      laureates[0].laureateIfPerson.birth.place.city.false: #string,
      laureates[0].laureateIfPerson.birth.place.country: #object,
      laureates[0].laureateIfPerson.birth.place.country.en: #string,
      laureates[0].laureateIfPerson.birth.place.country.se: #string,
      laureates[0].laureateIfPerson.birth.place.country.false: #string,
      laureates[0].laureateIfPerson.birth.place.cityNow: #object,
      laureates[0].laureateIfPerson.birth.place.cityNow.en: #string,
      laureates[0].laureateIfPerson.birth.place.cityNow.se: #string,
      laureates[0].laureateIfPerson.birth.place.cityNow.false: #string,
      laureates[0].laureateIfPerson.birth.place.cityNow.sameAs: #array,
      laureates[0].laureateIfPerson.birth.place.cityNow.sameAs[0]: #string,
      laureates[0].laureateIfPerson.birth.place.countryNow: #object,
      laureates[0].laureateIfPerson.birth.place.countryNow.en: #string,
      laureates[0].laureateIfPerson.birth.place.countryNow.se: #string,
      laureates[0].laureateIfPerson.birth.place.countryNow.false: #string,
      laureates[0].laureateIfPerson.birth.place.countryNow.sameAs: #array,
      laureates[0].laureateIfPerson.birth.place.countryNow.sameAs[0]: #string,
      laureates[0].laureateIfPerson.birth.place.continent: #object,
      laureates[0].laureateIfPerson.birth.place.continent.en: #string,
      laureates[0].laureateIfPerson.birth.place.continent.se: #string,
      laureates[0].laureateIfPerson.birth.place.continent.false: #string,
      laureates[0].laureateIfPerson.birth.place.locationString: #object,
      laureates[0].laureateIfPerson.birth.place.locationString.en: #string,
      laureates[0].laureateIfPerson.birth.place.locationString.se: #string,
      laureates[0].laureateIfPerson.birth.place.locationString.false: #string,
      laureates[0].laureateIfPerson.death: #object,
      laureates[0].laureateIfPerson.death.date: #string,
      laureates[0].laureateIfPerson.death.place: #object,
      laureates[0].laureateIfPerson.death.place.city: #object,
      laureates[0].laureateIfPerson.death.place.city.en: #string,
      laureates[0].laureateIfPerson.death.place.city.se: #string,
      laureates[0].laureateIfPerson.death.place.city.false: #string,
      laureates[0].laureateIfPerson.death.place.country: #object,
      laureates[0].laureateIfPerson.death.place.country.en: #string,
      laureates[0].laureateIfPerson.death.place.country.se: #string,
      laureates[0].laureateIfPerson.death.place.country.false: #string,
      laureates[0].laureateIfPerson.death.place.cityNow: #object,
      laureates[0].laureateIfPerson.death.place.cityNow.en: #string,
      laureates[0].laureateIfPerson.death.place.cityNow.se: #string,
      laureates[0].laureateIfPerson.death.place.cityNow.false: #string,
      laureates[0].laureateIfPerson.death.place.cityNow.sameAs: #array,
      laureates[0].laureateIfPerson.death.place.cityNow.sameAs[0]: #string,
      laureates[0].laureateIfPerson.death.place.countryNow: #object,
      laureates[0].laureateIfPerson.death.place.countryNow.en: #string,
      laureates[0].laureateIfPerson.death.place.countryNow.se: #string,
      laureates[0].laureateIfPerson.death.place.countryNow.false: #string,
      laureates[0].laureateIfPerson.death.place.countryNow.sameAs: #array,
      laureates[0].laureateIfPerson.death.place.countryNow.sameAs[0]: #string,
      laureates[0].laureateIfPerson.death.place.continent: #object,
      laureates[0].laureateIfPerson.death.place.continent.en: #string,
      laureates[0].laureateIfPerson.death.place.continent.se: #string,
      laureates[0].laureateIfPerson.death.place.continent.false: #string,
      laureates[0].laureateIfPerson.death.place.locationString: #object,
      laureates[0].laureateIfPerson.death.place.locationString.en: #string,
      laureates[0].laureateIfPerson.death.place.locationString.se: #string,
      laureates[0].laureateIfPerson.death.place.locationString.false: #string,
      laureates[0].laureateIfOrg: #object,
      laureates[0].laureateIfOrg.orgName: #object,
      laureates[0].laureateIfOrg.orgName.en: #string,
      laureates[0].laureateIfOrg.orgName.se: #string,
      laureates[0].laureateIfOrg.orgName.false: #string,
      laureates[0].laureateIfOrg.nativeName: #string,
      laureates[0].laureateIfOrg.acronym: #string,
      laureates[0].laureateIfOrg.founded: #object,
      laureates[0].laureateIfOrg.founded.date: #string,
      laureates[0].laureateIfOrg.founded.place: #object,
      laureates[0].laureateIfOrg.founded.place.city: #object,
      laureates[0].laureateIfOrg.founded.place.city.en: #string,
      laureates[0].laureateIfOrg.founded.place.city.se: #string,
      laureates[0].laureateIfOrg.founded.place.city.false: #string,
      laureates[0].laureateIfOrg.founded.place.country: #object,
      laureates[0].laureateIfOrg.founded.place.country.en: #string,
      laureates[0].laureateIfOrg.founded.place.country.se: #string,
      laureates[0].laureateIfOrg.founded.place.country.false: #string,
      laureates[0].laureateIfOrg.founded.place.cityNow: #object,
      laureates[0].laureateIfOrg.founded.place.cityNow.en: #string,
      laureates[0].laureateIfOrg.founded.place.cityNow.se: #string,
      laureates[0].laureateIfOrg.founded.place.cityNow.false: #string,
      laureates[0].laureateIfOrg.founded.place.cityNow.sameAs: #array,
      laureates[0].laureateIfOrg.founded.place.cityNow.sameAs[0]: #string,
      laureates[0].laureateIfOrg.founded.place.countryNow: #object,
      laureates[0].laureateIfOrg.founded.place.countryNow.en: #string,
      laureates[0].laureateIfOrg.founded.place.countryNow.se: #string,
      laureates[0].laureateIfOrg.founded.place.countryNow.false: #string,
      laureates[0].laureateIfOrg.founded.place.countryNow.sameAs: #array,
      laureates[0].laureateIfOrg.founded.place.countryNow.sameAs[0]: #string,
      laureates[0].laureateIfOrg.founded.place.continent: #object,
      laureates[0].laureateIfOrg.founded.place.continent.en: #string,
      laureates[0].laureateIfOrg.founded.place.continent.se: #string,
      laureates[0].laureateIfOrg.founded.place.continent.false: #string,
      laureates[0].laureateIfOrg.founded.place.locationString: #object,
      laureates[0].laureateIfOrg.founded.place.locationString.en: #string,
      laureates[0].laureateIfOrg.founded.place.locationString.se: #string,
      laureates[0].laureateIfOrg.founded.place.locationString.false: #string,
      laureates[0].laureateIfOrg.dissolution: #object,
      laureates[0].laureateIfOrg.dissolution.date: #string,
      laureates[0].laureateIfOrg.dissolution.place: #object,
      laureates[0].laureateIfOrg.dissolution.place.city: #object,
      laureates[0].laureateIfOrg.dissolution.place.city.en: #string,
      laureates[0].laureateIfOrg.dissolution.place.city.se: #string,
      laureates[0].laureateIfOrg.dissolution.place.city.false: #string,
      laureates[0].laureateIfOrg.dissolution.place.country: #object,
      laureates[0].laureateIfOrg.dissolution.place.country.en: #string,
      laureates[0].laureateIfOrg.dissolution.place.country.se: #string,
      laureates[0].laureateIfOrg.dissolution.place.country.false: #string,
      laureates[0].laureateIfOrg.dissolution.place.cityNow: #object,
      laureates[0].laureateIfOrg.dissolution.place.cityNow.en: #string,
      laureates[0].laureateIfOrg.dissolution.place.cityNow.se: #string,
      laureates[0].laureateIfOrg.dissolution.place.cityNow.false: #string,
      laureates[0].laureateIfOrg.dissolution.place.cityNow.sameAs: #array,
      laureates[0].laureateIfOrg.dissolution.place.cityNow.sameAs[0]: #string,
      laureates[0].laureateIfOrg.dissolution.place.countryNow: #object,
      laureates[0].laureateIfOrg.dissolution.place.countryNow.en: #string,
      laureates[0].laureateIfOrg.dissolution.place.countryNow.se: #string,
      laureates[0].laureateIfOrg.dissolution.place.countryNow.false: #string,
      laureates[0].laureateIfOrg.dissolution.place.countryNow.sameAs: #array,
      laureates[0].laureateIfOrg.dissolution.place.countryNow.sameAs[0]: #string,
      laureates[0].laureateIfOrg.dissolution.place.continent: #object,
      laureates[0].laureateIfOrg.dissolution.place.continent.en: #string,
      laureates[0].laureateIfOrg.dissolution.place.continent.se: #string,
      laureates[0].laureateIfOrg.dissolution.place.continent.false: #string,
      laureates[0].laureateIfOrg.dissolution.place.locationString: #object,
      laureates[0].laureateIfOrg.dissolution.place.locationString.en: #string,
      laureates[0].laureateIfOrg.dissolution.place.locationString.se: #string,
      laureates[0].laureateIfOrg.dissolution.place.locationString.false: #string,
      laureates[0].laureateIfOrg.headquarters: #object,
      laureates[0].laureateIfOrg.headquarters.city: #object,
      laureates[0].laureateIfOrg.headquarters.city.en: #string,
      laureates[0].laureateIfOrg.headquarters.city.se: #string,
      laureates[0].laureateIfOrg.headquarters.city.false: #string,
      laureates[0].laureateIfOrg.headquarters.country: #object,
      laureates[0].laureateIfOrg.headquarters.country.en: #string,
      laureates[0].laureateIfOrg.headquarters.country.se: #string,
      laureates[0].laureateIfOrg.headquarters.country.false: #string,
      laureates[0].laureateIfOrg.headquarters.cityNow: #object,
      laureates[0].laureateIfOrg.headquarters.cityNow.en: #string,
      laureates[0].laureateIfOrg.headquarters.cityNow.se: #string,
      laureates[0].laureateIfOrg.headquarters.cityNow.false: #string,
      laureates[0].laureateIfOrg.headquarters.cityNow.sameAs: #array,
      laureates[0].laureateIfOrg.headquarters.cityNow.sameAs[0]: #string,
      laureates[0].laureateIfOrg.headquarters.countryNow: #object,
      laureates[0].laureateIfOrg.headquarters.countryNow.en: #string,
      laureates[0].laureateIfOrg.headquarters.countryNow.se: #string,
      laureates[0].laureateIfOrg.headquarters.countryNow.false: #string,
      laureates[0].laureateIfOrg.headquarters.countryNow.sameAs: #array,
      laureates[0].laureateIfOrg.headquarters.countryNow.sameAs[0]: #string,
      laureates[0].laureateIfOrg.headquarters.continent: #object,
      laureates[0].laureateIfOrg.headquarters.continent.en: #string,
      laureates[0].laureateIfOrg.headquarters.continent.se: #string,
      laureates[0].laureateIfOrg.headquarters.continent.false: #string,
      laureates[0].laureateIfOrg.headquarters.locationString: #object,
      laureates[0].laureateIfOrg.headquarters.locationString.en: #string,
      laureates[0].laureateIfOrg.headquarters.locationString.se: #string,
      laureates[0].laureateIfOrg.headquarters.locationString.false: #string,
      laureates[0].wikipedia: #object,
      laureates[0].wikipedia.slug: #string,
      laureates[0].wikipedia.english: #string,
      laureates[0].wikidata: #object,
      laureates[0].wikidata.id: #string,
      laureates[0].wikidata.url: #string,
      laureates[0].sameAs: #array,
      laureates[0].sameAs[0]: #string,
      laureates[0].links: #array,
      laureates[0].links[0]: #object,
      laureates[0].links[0].rel: #string,
      laureates[0].links[0].href: #string,
      laureates[0].links[0].action: #string,
      laureates[0].links[0].types: #string,
      laureates[0].nobelPrizes: #array,
      laureates[0].nobelPrizes[0]: #object,
      laureates[0].nobelPrizes[0].awardYear: #number,
      laureates[0].nobelPrizes[0].category: #object,
      laureates[0].nobelPrizes[0].category.en: #string,
      laureates[0].nobelPrizes[0].category.se: #string,
      laureates[0].nobelPrizes[0].category.false: #string,
      laureates[0].nobelPrizes[0].categoryFullName: #object,
      laureates[0].nobelPrizes[0].categoryFullName.en: #string,
      laureates[0].nobelPrizes[0].categoryFullName.se: #string,
      laureates[0].nobelPrizes[0].categoryFullName.false: #string,
      laureates[0].nobelPrizes[0].sortOrder: #string,
      laureates[0].nobelPrizes[0].portion: #string,
      laureates[0].nobelPrizes[0].dateAwarded: #string,
      laureates[0].nobelPrizes[0].prizeStatus: #string,
      laureates[0].nobelPrizes[0].motivation: #object,
      laureates[0].nobelPrizes[0].motivation.en: #string,
      laureates[0].nobelPrizes[0].motivation.se: #string,
      laureates[0].nobelPrizes[0].motivation.false: #string,
      laureates[0].nobelPrizes[0].prizeAmount: #number,
      laureates[0].nobelPrizes[0].prizeAmountAdjusted: #number,
      laureates[0].nobelPrizes[0].affiliations: #array,
      laureates[0].nobelPrizes[0].affiliations[0]: #object,
      laureates[0].nobelPrizes[0].affiliations[0].name: #object,
      laureates[0].nobelPrizes[0].affiliations[0].name.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].name.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].name.false: #string,
      laureates[0].nobelPrizes[0].affiliations[0].nameNow: #object,
      laureates[0].nobelPrizes[0].affiliations[0].nameNow.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].nameNow.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].nameNow.false: #string,
      laureates[0].nobelPrizes[0].affiliations[0].nativeName: #string,
      laureates[0].nobelPrizes[0].affiliations[0].city: #object,
      laureates[0].nobelPrizes[0].affiliations[0].city.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].city.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].city.false: #string,
      laureates[0].nobelPrizes[0].affiliations[0].country: #object,
      laureates[0].nobelPrizes[0].affiliations[0].country.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].country.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].country.false: #string,
      laureates[0].nobelPrizes[0].affiliations[0].cityNow: #object,
      laureates[0].nobelPrizes[0].affiliations[0].cityNow.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].cityNow.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].cityNow.false: #string,
      laureates[0].nobelPrizes[0].affiliations[0].cityNow.sameAs: #array,
      laureates[0].nobelPrizes[0].affiliations[0].cityNow.sameAs[0]: #string,
      laureates[0].nobelPrizes[0].affiliations[0].countryNow: #object,
      laureates[0].nobelPrizes[0].affiliations[0].countryNow.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].countryNow.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].countryNow.false: #string,
      laureates[0].nobelPrizes[0].affiliations[0].countryNow.sameAs: #array,
      laureates[0].nobelPrizes[0].affiliations[0].countryNow.sameAs[0]: #string,
      laureates[0].nobelPrizes[0].affiliations[0].locationString: #object,
      laureates[0].nobelPrizes[0].affiliations[0].locationString.en: #string,
      laureates[0].nobelPrizes[0].affiliations[0].locationString.se: #string,
      laureates[0].nobelPrizes[0].affiliations[0].locationString.false: #string,
      laureates[0].nobelPrizes[0].residences: #array,
      laureates[0].nobelPrizes[0].residences[0]: #object,
      laureates[0].nobelPrizes[0].residences[0].city: #object,
      laureates[0].nobelPrizes[0].residences[0].city.en: #string,
      laureates[0].nobelPrizes[0].residences[0].city.se: #string,
      laureates[0].nobelPrizes[0].residences[0].city.false: #string,
      laureates[0].nobelPrizes[0].residences[0].country: #object,
      laureates[0].nobelPrizes[0].residences[0].country.en: #string,
      laureates[0].nobelPrizes[0].residences[0].country.se: #string,
      laureates[0].nobelPrizes[0].residences[0].country.false: #string,
      laureates[0].nobelPrizes[0].residences[0].cityNow: #object,
      laureates[0].nobelPrizes[0].residences[0].cityNow.en: #string,
      laureates[0].nobelPrizes[0].residences[0].cityNow.se: #string,
      laureates[0].nobelPrizes[0].residences[0].cityNow.false: #string,
      laureates[0].nobelPrizes[0].residences[0].cityNow.sameAs: #array,
      laureates[0].nobelPrizes[0].residences[0].cityNow.sameAs[0]: #string,
      laureates[0].nobelPrizes[0].residences[0].countryNow: #object,
      laureates[0].nobelPrizes[0].residences[0].countryNow.en: #string,
      laureates[0].nobelPrizes[0].residences[0].countryNow.se: #string,
      laureates[0].nobelPrizes[0].residences[0].countryNow.false: #string,
      laureates[0].nobelPrizes[0].residences[0].countryNow.sameAs: #array,
      laureates[0].nobelPrizes[0].residences[0].countryNow.sameAs[0]: #string,
      laureates[0].nobelPrizes[0].residences[0].locationString: #object,
      laureates[0].nobelPrizes[0].residences[0].locationString.en: #string,
      laureates[0].nobelPrizes[0].residences[0].locationString.se: #string,
      laureates[0].nobelPrizes[0].residences[0].locationString.false: #string,
      laureates[0].nobelPrizes[0].links: #array,
      laureates[0].nobelPrizes[0].links[0]: #object,
      laureates[0].nobelPrizes[0].links[0].rel: #string,
      laureates[0].nobelPrizes[0].links[0].href: #string,
      laureates[0].nobelPrizes[0].links[0].action: #string,
      laureates[0].nobelPrizes[0].links[0].types: #string,
      meta: #object,
      meta.offset: #number,
      meta.limit: #number,
      meta.sort: #string,
      meta.ID: #number,
      meta.name: #string,
      meta.gender: #string,
      meta.motivation: #string,
      meta.affiliation: #string,
      meta.residence: #string,
      meta.birthDate: #string,
      meta.birthDateTo: #string,
      meta.deathDate: #string,
      meta.deathDateTo: #string,
      meta.foundedDate: #string,
      meta.birthCity: #string,
      meta.birthCountry: #string,
      meta.birthContinent: #string,
      meta.deathCity: #string,
      meta.deathCountry: #string,
      meta.deathContinent: #string,
      meta.foundedCity: #string,
      meta.foundedCountry: #string,
      meta.foundedContinent: #string,
      meta.headquartersCity: #string,
      meta.headquartersCountry: #string,
      meta.headquartersContinent: #string,
      meta.nobelPrizeYear: #number,
      meta.yearTo: #number,
      meta.nobelPrizeCategory: #string,
      meta.count: #number,
      links: #array,
      links[0]: #object,
      links[0].first: #string,
      links[0].prev: #string,
      links[0].self: #string,
      links[0].next: #string,
      links[0].last: #string
    }
    """
    Examples:
    | offset | limit | sort | ID | name | gender | motivation | affiliation | residence | birthDate | birthDateTo | deathDate | deathDateTo | foundedDate | birthCity | birthCountry | birthContinent | deathCity | deathCountry | deathContinent | foundedCity | foundedCountry | foundedContinent | HeadquartersCity | HeadquartersCountry | HeadquartersContinent | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang |
    | 1      | 10    | asc  | 1  | ''   | ''     | ''         | ''          | ''         | ''         | ''           | ''         | ''           | ''           | ''         | ''           | ''             | ''        | ''           | ''             | ''          | ''             | ''               | ''               | ''                 | ''                 | ''                 | 1901       | 2023  | ''                | ''     | ''     |
    | 1      | 10    | desc | 2  | ''   | ''     | ''         | ''          | ''         | ''         | ''           | ''         | ''           | ''           | ''         | ''           | ''             | ''        | ''           | ''             | ''          | ''             | ''               | ''               | ''                 | ''                 | ''                 | 1901       | 2023  | ''                | ''     | ''     |

  Scenario Outline: Test GET /2.1/laureates with invalid query parameters
    * configure headers = { Authorization: #(karate.properties['URL1_URL1_AUTH_TOKEN']) }
    Given path '/2.1/laureates'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = '<sort>'
    And param ID = <ID>
    And param name = '<name>'
    And param gender = '<gender>'
    And param motivation = '<motivation>'
    And param affiliation = '<affiliation>'
    And param residence = '<residence>'
    And param birthDate = '<birthDate>'
    And param birthDateTo = '<birthDateTo>'
    And param deathDate = '<deathDate>'
    And param deathDateTo = '<deathDateTo>'
    And param foundedDate = '<foundedDate>'
    And param birthCity = '<birthCity>'
    And param birthCountry = '<birthCountry>'
    And param birthContinent = '<birthContinent>'
    And param deathCity = '<deathCity>'
    And param deathCountry = '<deathCountry>'
    And param deathContinent = '<deathContinent>'
    And param foundedCity = '<foundedCity>'
    And param foundedCountry = '<foundedCountry>'
    And param foundedContinent = '<foundedContinent>'
    And param HeadquartersCity = '<HeadquartersCity>'
    And param HeadquartersCountry = '<HeadquartersCountry>'
    And param HeadquartersContinent = '<HeadquartersContinent>'
    And param nobelPrizeYear = <nobelPrizeYear>
    And param yearTo = <yearTo>
    And param nobelPrizeCategory = '<nobelPrizeCategory>'
    And param format = '<format>'
    And param csvLang = '<csvLang>'
    When method get
    Then status <status>
    And match response ==
    """
    {
      code: #string,
      message: #string
    }
    """
    Examples:
    | offset | limit | sort | ID | name | gender | motivation | affiliation | residence | birthDate | birthDateTo | deathDate | deathDateTo | foundedDate | birthCity | birthCountry | birthContinent | deathCity | deathCountry | deathContinent | foundedCity | foundedCountry | foundedContinent | HeadquartersCity | HeadquartersCountry | HeadquartersContinent | nobelPrizeYear | yearTo | nobelPrizeCategory | format | csvLang | status |
    | 0      | 10    | asc  | 1  | ''   | ''     | ''         | ''          | ''         | ''         | ''           | ''         | ''           | ''           | ''         | ''           | ''             | ''        | ''           | ''             | ''          | ''             | ''               | ''               | ''                 | ''                 | ''                 | 1901       | 2023  | ''                | ''     | ''     | 400    |
    | 1      | 0     | desc | 2  | ''   | ''     | ''         | ''          | ''         | ''         | ''           | ''         | ''           | ''           | ''         | ''           | ''             | ''        | ''           | ''             | ''          | ''             | ''               | ''               | ''                 | ''                 | ''                 | 1901       | 2023  | ''                | ''     | ''     | 400    |
