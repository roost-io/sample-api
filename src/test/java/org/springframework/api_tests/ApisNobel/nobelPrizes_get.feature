# ********RoostGPT********

# Test generated by RoostGPT for test karateNobelSwaggerAPI using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /nobelPrizes_get for http method type GET 
# RoostTestHash=4940f5c55b
# 
# 

# ********RoostGPT********
Feature: Test Nobel Prizes API

  Background:
    * def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties["AUTH_TOKEN"])' }

  Scenario Outline: Fetch Nobel Prizes with valid parameters
    Given path '2.1/nobelPrizes'
    And param offset = <offset>
    And param limit = <limit>
    And param sort = <sort>
    And param nobelPrizeYear = <nobelPrizeYear>
    And param nobelPrizeCategory = <nobelPrizeCategory>
    When method GET
    Then status 200
    And match response == '#object'
    And match response.nobelPrizes == '#array'
    And match response.nobelPrizes[*].awardYear == '#number'
    And match response.nobelPrizes[*].category == '#object'
    And match response.nobelPrizes[*].category.en == '#string'
    And match response.nobelPrizes[*].category.se == '#string'
    And match response.nobelPrizes[*].categoryFullName == '#object'
    And match response.nobelPrizes[*].categoryFullName.en == '#string'
    And match response.nobelPrizes[*].categoryFullName.se == '#string'
    And match response.nobelPrizes[*].dateAwarded == '#string'
    And match response.nobelPrizes[*].prizeAmount == '#number'
    And match response.nobelPrizes[*].prizeAmountAdjusted == '#number'
    And match response.nobelPrizes[*].topMotivation == '#object'
    And match response.nobelPrizes[*].topMotivation.en == '#string'
    And match response.nobelPrizes[*].topMotivation.se == '#string'
    And match response.nobelPrizes[*].laureates == '#array'
    And match response.meta == '#object'
    And match response.meta.offset == '#number'
    And match response.meta.limit == '#number'
    And match response.meta.nobelPrizeYear == '#number'
    And match response.meta.nobelPrizeCategory == '#string'
    And match response.links == '#array'

    Examples:
      | read('nobelPrizes_get.csv') |

  Scenario: Fetch Nobel Prizes with invalid parameters
    Given path '2.1/nobelPrizes'
    And param offset = -1
    And param limit = 0
    When method GET
    Then status 400
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Fetch Nobel Prizes with non-existing year
    Given path '2.1/nobelPrizes'
    And param nobelPrizeYear = 1800
    When method GET
    Then status 404
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Fetch Nobel Prizes with unprocessable entity
    Given path '2.1/nobelPrizes'
    And param nobelPrizeYear = 2020
    And param yearTo = 2019
    When method GET
    Then status 422
    And match response == '#object'
    And match response.code == '#string'
    And match response.message == '#string'
