# ********RoostGPT********

# Test generated by RoostGPT for test karateNobelSwaggerAPI using AI Type Open AI and AI Model gpt-4o
# 
# Feature file generated for /laureate/{laureateID}_get for http method type GET 
# RoostTestHash=3a8d014c99
# 
# 

# ********RoostGPT********
Feature: Test Nobel Prize Laureate API

  Background:
    * def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: '#(karate.properties["AUTH_TOKEN"])' }

  Scenario Outline: Get Laureate Information by ID
    Given path '2.1/laureate/<laureateID>'
    When method GET
    Then status <statusCode>
    And match response == <responseSchema>

    Examples:
      | laureateID | statusCode | responseSchema                                                                                                                                                                                                              |
      |          1 |        200 | """ { laureate: { id: '#number', laureateIfPerson: '#object?', laureateIfOrg: '#object?', wikipedia: '#object', wikidata: '#object', sameAs: '#array', links: '#array', nobelPrizes: '#array', residences: '#array' } } """ |
      |       9999 |        404 | """ { code: '#string', message: '#string' } """                                                                                                                                                                             |
      |         -1 |        400 | """ { code: '#string', message: '#string' } """                                                                                                                                                                             |
      |          0 |        422 | """ { code: '#string', message: '#string' } """                                                                                                                                                                             |

  Scenario: Validate Laureate Response Structure
    Given path '2.1/laureate/1'
    When method GET
    Then status 200
    And match response.laureate.id == '#number'
    And match response.laureate.laureateIfPerson == '#object?'
    And match response.laureate.laureateIfOrg == '#object?'
    And match response.laureate.wikipedia == { slug: '#string', english: '#string' }
    And match response.laureate.wikidata == { id: '#string', url: '#string' }
    And match response.laureate.sameAs == '#array'
    And match response.laureate.links == '#array'
    And match response.laureate.nobelPrizes == '#array'
    And match response.laureate.residences == '#array'

  Scenario: Validate Error Response for Invalid ID
    Given path '2.1/laureate/9999'
    When method GET
    Then status 404
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Validate Error Response for Negative ID
    Given path '2.1/laureate/-1'
    When method GET
    Then status 400
    And match response.code == '#string'
    And match response.message == '#string'

  Scenario: Validate Error Response for Zero ID
    Given path '2.1/laureate/0'
    When method GET
    Then status 422
    And match response.code == '#string'
    And match response.message == '#string'
