# ********RoostGPT********

# Test generated by RoostGPT for test integration-artillary-petstore-v3 using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# ROOST_METHOD_HASH=64f8b358b3
# ROOST_METHOD_SIG_HASH=604f0c16a4
# 
#  ########## Scenario ########## 
# 
# {
#   feature: 'Feature: Create and retrieve a pet',
#   background: 'Background:\n' +
#     '    Given the Petstore API is available at https://petstore3.swagger.io/api/v3',
#   rule: null,
#   scenario: {
#     title: 'Scenario: Successfully create a new pet and retrieve it by ID',
#     steps: 'Given I set request-header "Content-Type" to "application/json"\n' +
#       'And I set request-body to:\n' +
#       '      """\n' +
#       '      {\n' +
#       '        "name": "Fluffy",\n' +
#       '        "tag": "cat"\n' +
#       '      }\n' +
#       'When I send POST request to "/pet"\n' +
#       'Then the response status code should be 200\n' +
#       'And the response JSON should include:\n' +
#       '      | name | Fluffy |\n' +
#       '      | tag  | cat    |\n' +
#       'And the response JSON should include an integer value for "id"\n' +
#       'When I extract the value of "id" as petId\n' +
#       'And I send GET request to "/pet/{petId}"\n' +
#       'Then the response status code should be 200\n' +
#       'And the response JSON.name should be "Fluffy"\n' +
#       'And the response JSON.tag should be "cat"',
#     examples: ''
#   }
# }
# 

# ********RoostGPT********
Feature: Create and retrieve a pet

Background:
    * def PETSTORE_V3_3273D64931_URL = karate.properties['PETSTORE_V3_3273D64931_URL'] || karate.get('PETSTORE_V3_3273D64931_URL', 'http://localhost:4010')
    * def PETSTORE_V3_3273D64931_AUTH_TOKEN = karate.properties['PETSTORE_V3_3273D64931_AUTH_TOKEN'] || karate.get('PETSTORE_V3_3273D64931_AUTH_TOKEN', 'Bearer_Dummy_Token')
    * configure headers = { Authorization: PETSTORE_V3_3273D64931_AUTH_TOKEN }

Scenario: Successfully create a new pet and retrieve it by ID
    * url PETSTORE_V3_3273D64931_URL
    And path '/pet'
    And request """ 
    {
        "id": 101,
        "name": "Fluffy",
        "category": { 
            "id": 1, 
            "title": "Animals"
        }
    }
    """
    When method POST
    Then status 200
    And match response == { "id": 101, "name": "Fluffy", "category": { "id": 1, "title": "Animals" } }
