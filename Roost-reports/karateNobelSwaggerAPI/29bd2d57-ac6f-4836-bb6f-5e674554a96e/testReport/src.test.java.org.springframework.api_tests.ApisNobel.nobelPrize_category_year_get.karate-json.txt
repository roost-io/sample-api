{"failedCount":9,"prefixedPath":"src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature","packageQualifiedName":"src.test.java.org.springframework.api_tests.ApisNobel.nobelPrize_category_year_get","loopIndex":-1,"relativePath":"src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":453805,"startTime":1750700100354,"endTime":1750700100354,"millis":0.453805,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":151602,"startTime":1750700100355,"endTime":1750700100355,"millis":0.151602,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":404205,"startTime":1750700100355,"endTime":1750700100355,"millis":0.404205,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1254414,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750700100355,"endTime":1750700100356,"millis":1.254414,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '2020'"},"stepLog":"17:35:00.357 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''phy'', '2020'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[0].id == '#number'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[0].name == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[0].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[0].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[0].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[0].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[0].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[0].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[0].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[0].links == '#array'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[0].links[0].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[0].links[0].href == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[0].links[0].action == '#string'"}},{"result":{"nanos":0,"startTime":1750700100357,"endTime":1750700100357,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[0].links[0].types == '#string'"}}],"line":55,"description":"","durationMillis":2.264026,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750700100354,"refId":"[1.1:55]","endTime":1750700100357,"exampleData":{"category":"'phy'","year":"2020","status":"200"},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":284103,"startTime":1750700100360,"endTime":1750700100360,"millis":0.284103,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":59001,"startTime":1750700100360,"endTime":1750700100360,"millis":0.059001,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":310903,"startTime":1750700100360,"endTime":1750700100360,"millis":0.310903,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":905110,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750700100361,"endTime":1750700100362,"millis":0.90511,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '2019'"},"stepLog":"17:35:00.362 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''med'', '2019'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[0].id == '#number'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[0].name == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[0].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[0].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[0].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[0].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[0].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[0].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[0].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[0].links == '#array'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[0].links[0].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[0].links[0].href == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[0].links[0].action == '#string'"}},{"result":{"nanos":0,"startTime":1750700100362,"endTime":1750700100362,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[0].links[0].types == '#string'"}}],"line":56,"description":"","durationMillis":1.559117,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750700100360,"refId":"[1.2:56]","endTime":1750700100362,"exampleData":{"category":"'med'","year":"2019","status":"200"},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":408805,"startTime":1750700100366,"endTime":1750700100366,"millis":0.408805,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":116001,"startTime":1750700100366,"endTime":1750700100366,"millis":0.116001,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":293104,"startTime":1750700100366,"endTime":1750700100366,"millis":0.293104,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":803109,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750700100367,"endTime":1750700100368,"millis":0.803109,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''lit'', '2018'"},"stepLog":"17:35:00.368 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''lit'', '2018'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[0].id == '#number'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[0].name == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[0].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[0].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[0].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[0].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[0].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[0].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[0].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[0].links == '#array'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[0].links[0].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[0].links[0].href == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[0].links[0].action == '#string'"}},{"result":{"nanos":0,"startTime":1750700100368,"endTime":1750700100368,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[0].links[0].types == '#string'"}}],"line":57,"description":"","durationMillis":1.621019,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750700100366,"refId":"[1.3:57]","endTime":1750700100368,"exampleData":{"category":"'lit'","year":"2018","status":"200"},"exampleIndex":2},{"sectionIndex":1,"stepResults":[{"result":{"nanos":256903,"startTime":1750700100370,"endTime":1750700100370,"millis":0.256903,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":82701,"startTime":1750700100371,"endTime":1750700100371,"millis":0.082701,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":283404,"startTime":1750700100371,"endTime":1750700100371,"millis":0.283404,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":703008,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","startTime":1750700100371,"endTime":1750700100372,"millis":0.703008,"status":"failed"},"step":{"line":60,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '1899'"},"stepLog":"17:35:00.372 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\nGiven path '2.1\/nobelPrize', ''phy'', '1899'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\n"},{"result":{"nanos":0,"startTime":1750700100372,"endTime":1750700100372,"millis":0.0,"status":"skipped"},"step":{"line":61,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100372,"endTime":1750700100372,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"Then","index":2,"text":"status 400"}},{"result":{"nanos":0,"startTime":1750700100372,"endTime":1750700100372,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100372,"endTime":1750700100372,"millis":0.0,"status":"skipped"},"step":{"line":64,"prefix":"And","index":4,"text":"match response.code == '400'"}},{"result":{"nanos":0,"startTime":1750700100372,"endTime":1750700100372,"millis":0.0,"status":"skipped"},"step":{"line":65,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":69,"description":"","durationMillis":1.326016,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","executorName":"main","name":"Test GET Nobel Prize with Invalid Year","startTime":1750700100370,"refId":"[2.1:69]","endTime":1750700100372,"exampleData":{"category":"'phy'","year":"1899"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":203002,"startTime":1750700100374,"endTime":1750700100374,"millis":0.203002,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":51401,"startTime":1750700100375,"endTime":1750700100375,"millis":0.051401,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":357104,"startTime":1750700100375,"endTime":1750700100375,"millis":0.357104,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":665407,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","startTime":1750700100375,"endTime":1750700100376,"millis":0.665407,"status":"failed"},"step":{"line":60,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '1800'"},"stepLog":"17:35:00.376 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\nGiven path '2.1\/nobelPrize', ''med'', '1800'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\n"},{"result":{"nanos":0,"startTime":1750700100376,"endTime":1750700100376,"millis":0.0,"status":"skipped"},"step":{"line":61,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100376,"endTime":1750700100376,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"Then","index":2,"text":"status 400"}},{"result":{"nanos":0,"startTime":1750700100376,"endTime":1750700100376,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100376,"endTime":1750700100376,"millis":0.0,"status":"skipped"},"step":{"line":64,"prefix":"And","index":4,"text":"match response.code == '400'"}},{"result":{"nanos":0,"startTime":1750700100376,"endTime":1750700100376,"millis":0.0,"status":"skipped"},"step":{"line":65,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":70,"description":"","durationMillis":1.276914,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","executorName":"main","name":"Test GET Nobel Prize with Invalid Year","startTime":1750700100374,"refId":"[2.2:70]","endTime":1750700100376,"exampleData":{"category":"'med'","year":"1800"},"exampleIndex":1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":199502,"startTime":1750700100378,"endTime":1750700100378,"millis":0.199502,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":50500,"startTime":1750700100379,"endTime":1750700100379,"millis":0.0505,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":237302,"startTime":1750700100379,"endTime":1750700100379,"millis":0.237302,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":617407,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","startTime":1750700100379,"endTime":1750700100380,"millis":0.617407,"status":"failed"},"step":{"line":73,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''xyz'', '2020'"},"stepLog":"17:35:00.380 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\nGiven path '2.1\/nobelPrize', ''xyz'', '2020'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\n"},{"result":{"nanos":0,"startTime":1750700100380,"endTime":1750700100380,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100380,"endTime":1750700100380,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"Then","index":2,"text":"status 404"}},{"result":{"nanos":0,"startTime":1750700100380,"endTime":1750700100380,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100380,"endTime":1750700100380,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"And","index":4,"text":"match response.code == '404'"}},{"result":{"nanos":0,"startTime":1750700100380,"endTime":1750700100380,"millis":0.0,"status":"skipped"},"step":{"line":78,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":82,"description":"","durationMillis":1.104711,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","executorName":"main","name":"Test GET Nobel Prize with Non-existent Category","startTime":1750700100378,"refId":"[3.1:82]","endTime":1750700100380,"exampleData":{"category":"'xyz'","year":"2020"},"exampleIndex":0},{"sectionIndex":2,"stepResults":[{"result":{"nanos":208503,"startTime":1750700100382,"endTime":1750700100382,"millis":0.208503,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":57201,"startTime":1750700100383,"endTime":1750700100383,"millis":0.057201,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":228303,"startTime":1750700100383,"endTime":1750700100383,"millis":0.228303,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":546606,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","startTime":1750700100383,"endTime":1750700100384,"millis":0.546606,"status":"failed"},"step":{"line":73,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''abc'', '2019'"},"stepLog":"17:35:00.384 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\nGiven path '2.1\/nobelPrize', ''abc'', '2019'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\n"},{"result":{"nanos":0,"startTime":1750700100384,"endTime":1750700100384,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100384,"endTime":1750700100384,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"Then","index":2,"text":"status 404"}},{"result":{"nanos":0,"startTime":1750700100384,"endTime":1750700100384,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100384,"endTime":1750700100384,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"And","index":4,"text":"match response.code == '404'"}},{"result":{"nanos":0,"startTime":1750700100384,"endTime":1750700100384,"millis":0.0,"status":"skipped"},"step":{"line":78,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":83,"description":"","durationMillis":1.040613,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","executorName":"main","name":"Test GET Nobel Prize with Non-existent Category","startTime":1750700100382,"refId":"[3.2:83]","endTime":1750700100384,"exampleData":{"category":"'abc'","year":"2019"},"exampleIndex":1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":216802,"startTime":1750700100386,"endTime":1750700100386,"millis":0.216802,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":53301,"startTime":1750700100387,"endTime":1750700100387,"millis":0.053301,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":228102,"startTime":1750700100387,"endTime":1750700100387,"millis":0.228102,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":502605,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","startTime":1750700100387,"endTime":1750700100388,"millis":0.502605,"status":"failed"},"step":{"line":86,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '2025'"},"stepLog":"17:35:00.387 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\nGiven path '2.1\/nobelPrize', ''phy'', '2025'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\n"},{"result":{"nanos":0,"startTime":1750700100387,"endTime":1750700100387,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100387,"endTime":1750700100387,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"Then","index":2,"text":"status 422"}},{"result":{"nanos":0,"startTime":1750700100387,"endTime":1750700100387,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100387,"endTime":1750700100387,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"And","index":4,"text":"match response.code == '422'"}},{"result":{"nanos":0,"startTime":1750700100387,"endTime":1750700100387,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":95,"description":"","durationMillis":1.00081,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","executorName":"main","name":"Test GET Nobel Prize with Unprocessable Entity","startTime":1750700100386,"refId":"[4.1:95]","endTime":1750700100387,"exampleData":{"category":"'phy'","year":"2025"},"exampleIndex":0},{"sectionIndex":3,"stepResults":[{"result":{"nanos":242903,"startTime":1750700100390,"endTime":1750700100390,"millis":0.242903,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['url_base'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":58201,"startTime":1750700100390,"endTime":1750700100390,"millis":0.058201,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":229903,"startTime":1750700100390,"endTime":1750700100390,"millis":0.229903,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":517506,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2100']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2100']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","startTime":1750700100391,"endTime":1750700100392,"millis":0.517506,"status":"failed"},"step":{"line":86,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '2100'"},"stepLog":"17:35:00.391 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\nGiven path '2.1\/nobelPrize', ''med'', '2100'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2100']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2100']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\n"},{"result":{"nanos":0,"startTime":1750700100391,"endTime":1750700100391,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750700100391,"endTime":1750700100391,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"Then","index":2,"text":"status 422"}},{"result":{"nanos":0,"startTime":1750700100391,"endTime":1750700100391,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750700100391,"endTime":1750700100391,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"And","index":4,"text":"match response.code == '422'"}},{"result":{"nanos":0,"startTime":1750700100391,"endTime":1750700100391,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":96,"description":"","durationMillis":1.048513,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2100']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2100']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","executorName":"main","name":"Test GET Nobel Prize with Unprocessable Entity","startTime":1750700100390,"refId":"[4.2:96]","endTime":1750700100391,"exampleData":{"category":"'med'","year":"2100"},"exampleIndex":1}],"callDepth":0,"name":"Nobel Prize API Tests","description":"","resultDate":"2025-06-23 05:35:00 PM","durationMillis":12.241739,"passedCount":0}