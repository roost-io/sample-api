{"failedCount":9,"prefixedPath":"src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature","packageQualifiedName":"src.test.java.org.springframework.api_tests.ApisNobel.nobelPrize_category_year_get","loopIndex":-1,"relativePath":"src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":471711,"startTime":1750701540998,"endTime":1750701540998,"millis":0.471711,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":144503,"startTime":1750701540999,"endTime":1750701540999,"millis":0.144503,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":377509,"startTime":1750701540999,"endTime":1750701540999,"millis":0.377509,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1378732,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750701540999,"endTime":1750701541000,"millis":1.378732,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '2020'"},"stepLog":"17:59:01.001 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''phy'', '2020'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[*].id == '#number'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[*].name == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[*].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[*].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[*].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[*].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[*].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[*].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[*].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[*].links == '#array'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[*].links[*].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[*].links[*].href == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[*].links[*].action == '#string'"}},{"result":{"nanos":0,"startTime":1750701541001,"endTime":1750701541001,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[*].links[*].types == '#string'"}}],"line":55,"description":"","durationMillis":2.372455,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750701540998,"refId":"[1.1:55]","endTime":1750701541001,"exampleData":{"category":"'phy'","year":"2020","status":"200"},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":328508,"startTime":1750701541004,"endTime":1750701541004,"millis":0.328508,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":78802,"startTime":1750701541004,"endTime":1750701541004,"millis":0.078802,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":330407,"startTime":1750701541004,"endTime":1750701541004,"millis":0.330407,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":951023,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750701541005,"endTime":1750701541006,"millis":0.951023,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '2019'"},"stepLog":"17:59:01.006 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''med'', '2019'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[*].id == '#number'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[*].name == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[*].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[*].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[*].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[*].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[*].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[*].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[*].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[*].links == '#array'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[*].links[*].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[*].links[*].href == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[*].links[*].action == '#string'"}},{"result":{"nanos":0,"startTime":1750701541006,"endTime":1750701541006,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[*].links[*].types == '#string'"}}],"line":56,"description":"","durationMillis":1.68874,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750701541004,"refId":"[1.2:56]","endTime":1750701541006,"exampleData":{"category":"'med'","year":"2019","status":"200"},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":304207,"startTime":1750701541009,"endTime":1750701541009,"millis":0.304207,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":70901,"startTime":1750701541009,"endTime":1750701541009,"millis":0.070901,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":298607,"startTime":1750701541009,"endTime":1750701541009,"millis":0.298607,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":915222,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750701541010,"endTime":1750701541011,"millis":0.915222,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''lit'', '2018'"},"stepLog":"17:59:01.011 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''lit'', '2018'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[*].id == '#number'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[*].name == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[*].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[*].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[*].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[*].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[*].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[*].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[*].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[*].links == '#array'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[*].links[*].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[*].links[*].href == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[*].links[*].action == '#string'"}},{"result":{"nanos":0,"startTime":1750701541011,"endTime":1750701541011,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[*].links[*].types == '#string'"}}],"line":57,"description":"","durationMillis":1.588937,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750701541009,"refId":"[1.3:57]","endTime":1750701541011,"exampleData":{"category":"'lit'","year":"2018","status":"200"},"exampleIndex":2},{"sectionIndex":1,"stepResults":[{"result":{"nanos":322707,"startTime":1750701541014,"endTime":1750701541014,"millis":0.322707,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":118303,"startTime":1750701541014,"endTime":1750701541014,"millis":0.118303,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":355308,"startTime":1750701541014,"endTime":1750701541014,"millis":0.355308,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":851420,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","startTime":1750701541015,"endTime":1750701541016,"millis":0.85142,"status":"failed"},"step":{"line":60,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '1899'"},"stepLog":"17:59:01.016 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\nGiven path '2.1\/nobelPrize', ''phy'', '1899'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\n"},{"result":{"nanos":0,"startTime":1750701541016,"endTime":1750701541016,"millis":0.0,"status":"skipped"},"step":{"line":61,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541016,"endTime":1750701541016,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"Then","index":2,"text":"status 400"}},{"result":{"nanos":0,"startTime":1750701541016,"endTime":1750701541016,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541016,"endTime":1750701541016,"millis":0.0,"status":"skipped"},"step":{"line":64,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750701541016,"endTime":1750701541016,"millis":0.0,"status":"skipped"},"step":{"line":65,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":69,"description":"","durationMillis":1.647738,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","executorName":"main","name":"Test GET Nobel Prize with Invalid Year","startTime":1750701541014,"refId":"[2.1:69]","endTime":1750701541016,"exampleData":{"category":"'phy'","year":"1899"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":240105,"startTime":1750701541018,"endTime":1750701541018,"millis":0.240105,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":66502,"startTime":1750701541019,"endTime":1750701541019,"millis":0.066502,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":273306,"startTime":1750701541019,"endTime":1750701541019,"millis":0.273306,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":796819,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","startTime":1750701541019,"endTime":1750701541020,"millis":0.796819,"status":"failed"},"step":{"line":60,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '1800'"},"stepLog":"17:59:01.020 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\nGiven path '2.1\/nobelPrize', ''med'', '1800'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\n"},{"result":{"nanos":0,"startTime":1750701541020,"endTime":1750701541020,"millis":0.0,"status":"skipped"},"step":{"line":61,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541020,"endTime":1750701541020,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"Then","index":2,"text":"status 400"}},{"result":{"nanos":0,"startTime":1750701541020,"endTime":1750701541020,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541020,"endTime":1750701541020,"millis":0.0,"status":"skipped"},"step":{"line":64,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750701541020,"endTime":1750701541020,"millis":0.0,"status":"skipped"},"step":{"line":65,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":70,"description":"","durationMillis":1.376732,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","executorName":"main","name":"Test GET Nobel Prize with Invalid Year","startTime":1750701541018,"refId":"[2.2:70]","endTime":1750701541020,"exampleData":{"category":"'med'","year":"1800"},"exampleIndex":1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":260906,"startTime":1750701541023,"endTime":1750701541023,"millis":0.260906,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":71602,"startTime":1750701541023,"endTime":1750701541023,"millis":0.071602,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":304207,"startTime":1750701541023,"endTime":1750701541023,"millis":0.304207,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":676716,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","startTime":1750701541023,"endTime":1750701541024,"millis":0.676716,"status":"failed"},"step":{"line":73,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''xyz'', '2020'"},"stepLog":"17:59:01.024 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\nGiven path '2.1\/nobelPrize', ''xyz'', '2020'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\n"},{"result":{"nanos":0,"startTime":1750701541024,"endTime":1750701541024,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541024,"endTime":1750701541024,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"Then","index":2,"text":"status 404"}},{"result":{"nanos":0,"startTime":1750701541024,"endTime":1750701541024,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541024,"endTime":1750701541024,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750701541024,"endTime":1750701541024,"millis":0.0,"status":"skipped"},"step":{"line":78,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":82,"description":"","durationMillis":1.313431,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","executorName":"main","name":"Test GET Nobel Prize with Non-existent Category","startTime":1750701541023,"refId":"[3.1:82]","endTime":1750701541024,"exampleData":{"category":"'xyz'","year":"2020"},"exampleIndex":0},{"sectionIndex":2,"stepResults":[{"result":{"nanos":267507,"startTime":1750701541027,"endTime":1750701541027,"millis":0.267507,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":85001,"startTime":1750701541027,"endTime":1750701541027,"millis":0.085001,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":315208,"startTime":1750701541027,"endTime":1750701541027,"millis":0.315208,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":638915,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","startTime":1750701541028,"endTime":1750701541029,"millis":0.638915,"status":"failed"},"step":{"line":73,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''abc'', '2019'"},"stepLog":"17:59:01.029 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\nGiven path '2.1\/nobelPrize', ''abc'', '2019'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\n"},{"result":{"nanos":0,"startTime":1750701541029,"endTime":1750701541029,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541029,"endTime":1750701541029,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"Then","index":2,"text":"status 404"}},{"result":{"nanos":0,"startTime":1750701541029,"endTime":1750701541029,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541029,"endTime":1750701541029,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750701541029,"endTime":1750701541029,"millis":0.0,"status":"skipped"},"step":{"line":78,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":83,"description":"","durationMillis":1.306631,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","executorName":"main","name":"Test GET Nobel Prize with Non-existent Category","startTime":1750701541027,"refId":"[3.2:83]","endTime":1750701541029,"exampleData":{"category":"'abc'","year":"2019"},"exampleIndex":1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":257006,"startTime":1750701541031,"endTime":1750701541031,"millis":0.257006,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":66001,"startTime":1750701541032,"endTime":1750701541032,"millis":0.066001,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":281106,"startTime":1750701541032,"endTime":1750701541032,"millis":0.281106,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":593014,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","startTime":1750701541032,"endTime":1750701541033,"millis":0.593014,"status":"failed"},"step":{"line":86,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '2025'"},"stepLog":"17:59:01.033 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\nGiven path '2.1\/nobelPrize', ''phy'', '2025'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\n"},{"result":{"nanos":0,"startTime":1750701541033,"endTime":1750701541033,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541033,"endTime":1750701541033,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"Then","index":2,"text":"status 422"}},{"result":{"nanos":0,"startTime":1750701541033,"endTime":1750701541033,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541033,"endTime":1750701541033,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750701541033,"endTime":1750701541033,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":95,"description":"","durationMillis":1.197127,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","executorName":"main","name":"Test GET Nobel Prize with Unprocessable Entity","startTime":1750701541031,"refId":"[4.1:95]","endTime":1750701541033,"exampleData":{"category":"'phy'","year":"2025"},"exampleIndex":0},{"sectionIndex":3,"stepResults":[{"result":{"nanos":230905,"startTime":1750701541035,"endTime":1750701541035,"millis":0.230905,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":67202,"startTime":1750701541036,"endTime":1750701541036,"millis":0.067202,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":290407,"startTime":1750701541036,"endTime":1750701541036,"millis":0.290407,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":578913,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2030']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2030']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","startTime":1750701541036,"endTime":1750701541037,"millis":0.578913,"status":"failed"},"step":{"line":86,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '2030'"},"stepLog":"17:59:01.037 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\nGiven path '2.1\/nobelPrize', ''med'', '2030'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2030']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2030']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\n"},{"result":{"nanos":0,"startTime":1750701541037,"endTime":1750701541037,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750701541037,"endTime":1750701541037,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"Then","index":2,"text":"status 422"}},{"result":{"nanos":0,"startTime":1750701541037,"endTime":1750701541037,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750701541037,"endTime":1750701541037,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750701541037,"endTime":1750701541037,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":96,"description":"","durationMillis":1.167427,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2030']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2030']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","executorName":"main","name":"Test GET Nobel Prize with Unprocessable Entity","startTime":1750701541035,"refId":"[4.2:96]","endTime":1750701541037,"exampleData":{"category":"'med'","year":"2030"},"exampleIndex":1}],"callDepth":0,"name":"Nobel Prize API Tests","description":"","resultDate":"2025-06-23 05:59:01 PM","durationMillis":13.659218,"passedCount":0}