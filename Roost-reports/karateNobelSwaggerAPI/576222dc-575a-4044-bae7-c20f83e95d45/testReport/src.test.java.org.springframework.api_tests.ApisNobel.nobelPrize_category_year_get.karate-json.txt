{"failedCount":9,"prefixedPath":"src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature","packageQualifiedName":"src.test.java.org.springframework.api_tests.ApisNobel.nobelPrize_category_year_get","loopIndex":-1,"relativePath":"src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":509415,"startTime":1750762838065,"endTime":1750762838066,"millis":0.509415,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":189005,"startTime":1750762838065,"endTime":1750762838065,"millis":0.189005,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":468013,"startTime":1750762838065,"endTime":1750762838065,"millis":0.468013,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1809552,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750762838066,"endTime":1750762838068,"millis":1.809552,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '2020'"},"stepLog":"11:00:38.068 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''phy'', '2020'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[*].id == '#number'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[*].name == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[*].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[*].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[*].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[*].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[*].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[*].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[*].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[*].links == '#array'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[*].links[*].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[*].links[*].href == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[*].links[*].action == '#string'"}},{"result":{"nanos":0,"startTime":1750762838068,"endTime":1750762838068,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[*].links[*].types == '#string'"}}],"line":55,"description":"","durationMillis":2.975985,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750762838064,"refId":"[1.1:55]","endTime":1750762838068,"exampleData":{"category":"'phy'","year":"2020","status":"200"},"exampleIndex":0},{"sectionIndex":0,"stepResults":[{"result":{"nanos":458513,"startTime":1750762838073,"endTime":1750762838073,"millis":0.458513,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":73603,"startTime":1750762838073,"endTime":1750762838073,"millis":0.073603,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":520415,"startTime":1750762838073,"endTime":1750762838074,"millis":0.520415,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1543944,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750762838074,"endTime":1750762838076,"millis":1.543944,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '2019'"},"stepLog":"11:00:38.076 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''med'', '2019'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[*].id == '#number'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[*].name == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[*].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[*].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[*].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[*].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[*].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[*].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[*].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[*].links == '#array'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[*].links[*].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[*].links[*].href == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[*].links[*].action == '#string'"}},{"result":{"nanos":0,"startTime":1750762838076,"endTime":1750762838076,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[*].links[*].types == '#string'"}}],"line":56,"description":"","durationMillis":2.596475,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750762838073,"refId":"[1.2:56]","endTime":1750762838076,"exampleData":{"category":"'med'","year":"2019","status":"200"},"exampleIndex":1},{"sectionIndex":0,"stepResults":[{"result":{"nanos":373411,"startTime":1750762838081,"endTime":1750762838081,"millis":0.373411,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":74602,"startTime":1750762838081,"endTime":1750762838081,"millis":0.074602,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":436112,"startTime":1750762838081,"endTime":1750762838081,"millis":0.436112,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1215334,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","startTime":1750762838082,"endTime":1750762838083,"millis":1.215334,"status":"failed"},"step":{"line":19,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''lit'', '2018'"},"stepLog":"11:00:38.083 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\nGiven path '2.1\/nobelPrize', ''lit'', '2018'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19\n"},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":21,"prefix":"Then","index":2,"text":"status 200"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":22,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":23,"prefix":"And","index":4,"text":"match response.nobelPrize == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":24,"prefix":"And","index":5,"text":"match response.nobelPrize.awardYear == '#number'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":25,"prefix":"And","index":6,"text":"match response.nobelPrize.category == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":26,"prefix":"And","index":7,"text":"match response.nobelPrize.category.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":27,"prefix":"And","index":8,"text":"match response.nobelPrize.category.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":28,"prefix":"And","index":9,"text":"match response.nobelPrize.categoryFullName == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":29,"prefix":"And","index":10,"text":"match response.nobelPrize.categoryFullName.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"And","index":11,"text":"match response.nobelPrize.categoryFullName.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"And","index":12,"text":"match response.nobelPrize.dateAwarded == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":13,"text":"match response.nobelPrize.prizeAmount == '#number'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"And","index":14,"text":"match response.nobelPrize.prizeAmountAdjusted == '#number'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"And","index":15,"text":"match response.nobelPrize.topMotivation == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":35,"prefix":"And","index":16,"text":"match response.nobelPrize.topMotivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":36,"prefix":"And","index":17,"text":"match response.nobelPrize.topMotivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":37,"prefix":"And","index":18,"text":"match response.nobelPrize.laureates == '#array'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":38,"prefix":"And","index":19,"text":"match response.nobelPrize.laureates[*].id == '#number'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":39,"prefix":"And","index":20,"text":"match response.nobelPrize.laureates[*].name == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":40,"prefix":"And","index":21,"text":"match response.nobelPrize.laureates[*].name.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":41,"prefix":"And","index":22,"text":"match response.nobelPrize.laureates[*].name.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":42,"prefix":"And","index":23,"text":"match response.nobelPrize.laureates[*].portion == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":43,"prefix":"And","index":24,"text":"match response.nobelPrize.laureates[*].sortOrder == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":44,"prefix":"And","index":25,"text":"match response.nobelPrize.laureates[*].motivation == '#object'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":45,"prefix":"And","index":26,"text":"match response.nobelPrize.laureates[*].motivation.en == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":46,"prefix":"And","index":27,"text":"match response.nobelPrize.laureates[*].motivation.se == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":47,"prefix":"And","index":28,"text":"match response.nobelPrize.laureates[*].links == '#array'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":48,"prefix":"And","index":29,"text":"match response.nobelPrize.laureates[*].links[*].rel == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":49,"prefix":"And","index":30,"text":"match response.nobelPrize.laureates[*].links[*].href == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":50,"prefix":"And","index":31,"text":"match response.nobelPrize.laureates[*].links[*].action == '#string'"}},{"result":{"nanos":0,"startTime":1750762838083,"endTime":1750762838083,"millis":0.0,"status":"skipped"},"step":{"line":51,"prefix":"And","index":32,"text":"match response.nobelPrize.laureates[*].links[*].types == '#string'"}}],"line":57,"description":"","durationMillis":2.099459,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''lit'', '2018']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''lit'', '2018']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:19","executorName":"main","name":"Test GET Nobel Prize by Category and Year","startTime":1750762838080,"refId":"[1.3:57]","endTime":1750762838083,"exampleData":{"category":"'lit'","year":"2018","status":"200"},"exampleIndex":2},{"sectionIndex":1,"stepResults":[{"result":{"nanos":471613,"startTime":1750762838088,"endTime":1750762838088,"millis":0.471613,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":142705,"startTime":1750762838088,"endTime":1750762838088,"millis":0.142705,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":482114,"startTime":1750762838088,"endTime":1750762838088,"millis":0.482114,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1207834,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","startTime":1750762838089,"endTime":1750762838090,"millis":1.207834,"status":"failed"},"step":{"line":60,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '1899'"},"stepLog":"11:00:38.090 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\nGiven path '2.1\/nobelPrize', ''phy'', '1899'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\n"},{"result":{"nanos":0,"startTime":1750762838090,"endTime":1750762838090,"millis":0.0,"status":"skipped"},"step":{"line":61,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838090,"endTime":1750762838090,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"Then","index":2,"text":"status 400"}},{"result":{"nanos":0,"startTime":1750762838090,"endTime":1750762838090,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838090,"endTime":1750762838090,"millis":0.0,"status":"skipped"},"step":{"line":64,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750762838090,"endTime":1750762838090,"millis":0.0,"status":"skipped"},"step":{"line":65,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":69,"description":"","durationMillis":2.304266,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '1899']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '1899']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","executorName":"main","name":"Test GET Nobel Prize with Invalid Year","startTime":1750762838088,"refId":"[2.1:69]","endTime":1750762838090,"exampleData":{"category":"'phy'","year":"1899"},"exampleIndex":0},{"sectionIndex":1,"stepResults":[{"result":{"nanos":473514,"startTime":1750762838096,"endTime":1750762838096,"millis":0.473514,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":126303,"startTime":1750762838096,"endTime":1750762838096,"millis":0.126303,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":487114,"startTime":1750762838096,"endTime":1750762838096,"millis":0.487114,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1258136,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","startTime":1750762838097,"endTime":1750762838098,"millis":1.258136,"status":"failed"},"step":{"line":60,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '1800'"},"stepLog":"11:00:38.099 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\nGiven path '2.1\/nobelPrize', ''med'', '1800'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60\n"},{"result":{"nanos":0,"startTime":1750762838099,"endTime":1750762838099,"millis":0.0,"status":"skipped"},"step":{"line":61,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838099,"endTime":1750762838099,"millis":0.0,"status":"skipped"},"step":{"line":62,"prefix":"Then","index":2,"text":"status 400"}},{"result":{"nanos":0,"startTime":1750762838099,"endTime":1750762838099,"millis":0.0,"status":"skipped"},"step":{"line":63,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838099,"endTime":1750762838099,"millis":0.0,"status":"skipped"},"step":{"line":64,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750762838099,"endTime":1750762838099,"millis":0.0,"status":"skipped"},"step":{"line":65,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":70,"description":"","durationMillis":2.345067,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '1800']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '1800']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:60","executorName":"main","name":"Test GET Nobel Prize with Invalid Year","startTime":1750762838096,"refId":"[2.2:70]","endTime":1750762838099,"exampleData":{"category":"'med'","year":"1800"},"exampleIndex":1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":341610,"startTime":1750762838103,"endTime":1750762838103,"millis":0.34161,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":68302,"startTime":1750762838104,"endTime":1750762838104,"millis":0.068302,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":364911,"startTime":1750762838104,"endTime":1750762838104,"millis":0.364911,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1035529,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","startTime":1750762838104,"endTime":1750762838105,"millis":1.035529,"status":"failed"},"step":{"line":73,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''xyz'', '2020'"},"stepLog":"11:00:38.105 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\nGiven path '2.1\/nobelPrize', ''xyz'', '2020'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\n"},{"result":{"nanos":0,"startTime":1750762838105,"endTime":1750762838105,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838105,"endTime":1750762838105,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"Then","index":2,"text":"status 404"}},{"result":{"nanos":0,"startTime":1750762838105,"endTime":1750762838105,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838105,"endTime":1750762838105,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750762838105,"endTime":1750762838105,"millis":0.0,"status":"skipped"},"step":{"line":78,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":82,"description":"","durationMillis":1.810352,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''xyz'', '2020']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''xyz'', '2020']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","executorName":"main","name":"Test GET Nobel Prize with Non-existent Category","startTime":1750762838103,"refId":"[3.1:82]","endTime":1750762838105,"exampleData":{"category":"'xyz'","year":"2020"},"exampleIndex":0},{"sectionIndex":2,"stepResults":[{"result":{"nanos":305109,"startTime":1750762838110,"endTime":1750762838110,"millis":0.305109,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":143504,"startTime":1750762838111,"endTime":1750762838111,"millis":0.143504,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":484214,"startTime":1750762838111,"endTime":1750762838111,"millis":0.484214,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":978628,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","startTime":1750762838112,"endTime":1750762838113,"millis":0.978628,"status":"failed"},"step":{"line":73,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''abc'', '2019'"},"stepLog":"11:00:38.113 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\nGiven path '2.1\/nobelPrize', ''abc'', '2019'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73\n"},{"result":{"nanos":0,"startTime":1750762838113,"endTime":1750762838113,"millis":0.0,"status":"skipped"},"step":{"line":74,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838113,"endTime":1750762838113,"millis":0.0,"status":"skipped"},"step":{"line":75,"prefix":"Then","index":2,"text":"status 404"}},{"result":{"nanos":0,"startTime":1750762838113,"endTime":1750762838113,"millis":0.0,"status":"skipped"},"step":{"line":76,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838113,"endTime":1750762838113,"millis":0.0,"status":"skipped"},"step":{"line":77,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750762838113,"endTime":1750762838113,"millis":0.0,"status":"skipped"},"step":{"line":78,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":83,"description":"","durationMillis":1.911455,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''abc'', '2019']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''abc'', '2019']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:73","executorName":"main","name":"Test GET Nobel Prize with Non-existent Category","startTime":1750762838110,"refId":"[3.2:83]","endTime":1750762838113,"exampleData":{"category":"'abc'","year":"2019"},"exampleIndex":1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":466013,"startTime":1750762838119,"endTime":1750762838119,"millis":0.466013,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":129504,"startTime":1750762838119,"endTime":1750762838119,"millis":0.129504,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":501815,"startTime":1750762838119,"endTime":1750762838120,"millis":0.501815,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":1030729,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","startTime":1750762838120,"endTime":1750762838121,"millis":1.030729,"status":"failed"},"step":{"line":86,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''phy'', '2025'"},"stepLog":"11:00:38.121 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\nGiven path '2.1\/nobelPrize', ''phy'', '2025'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\n"},{"result":{"nanos":0,"startTime":1750762838121,"endTime":1750762838121,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838121,"endTime":1750762838121,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"Then","index":2,"text":"status 422"}},{"result":{"nanos":0,"startTime":1750762838121,"endTime":1750762838121,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838121,"endTime":1750762838121,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750762838121,"endTime":1750762838121,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":95,"description":"","durationMillis":2.128061,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''phy'', '2025']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''phy'', '2025']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","executorName":"main","name":"Test GET Nobel Prize with Unprocessable Entity","startTime":1750762838119,"refId":"[4.1:95]","endTime":1750762838121,"exampleData":{"category":"'phy'","year":"2025"},"exampleIndex":0},{"sectionIndex":3,"stepResults":[{"result":{"nanos":532115,"startTime":1750762838126,"endTime":1750762838127,"millis":0.532115,"status":"passed"},"step":{"background":true,"line":14,"prefix":"*","index":0,"text":"def urlBase = karate.properties['URL_BASE'] || karate.get('urlBase', 'http:\/\/localhost:4010')"}},{"result":{"nanos":105803,"startTime":1750762838127,"endTime":1750762838127,"millis":0.105803,"status":"passed"},"step":{"background":true,"line":15,"prefix":"*","index":1,"text":"url urlBase"}},{"result":{"nanos":531415,"startTime":1750762838127,"endTime":1750762838128,"millis":0.531415,"status":"passed"},"step":{"background":true,"line":16,"prefix":"*","index":2,"text":"configure headers = { Authorization: '#(karate.properties[\"AUTH_TOKEN\"])' }"}},{"result":{"nanos":994128,"errorMessage":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2030']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2030']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","startTime":1750762838128,"endTime":1750762838129,"millis":0.994128,"status":"failed"},"step":{"line":86,"prefix":"Given","index":0,"text":"path '2.1\/nobelPrize', ''med'', '2030'"},"stepLog":"11:00:38.129 src\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\nGiven path '2.1\/nobelPrize', ''med'', '2030'\njs failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2030']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2030']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86\n"},{"result":{"nanos":0,"startTime":1750762838129,"endTime":1750762838129,"millis":0.0,"status":"skipped"},"step":{"line":87,"prefix":"When","index":1,"text":"method GET"}},{"result":{"nanos":0,"startTime":1750762838129,"endTime":1750762838129,"millis":0.0,"status":"skipped"},"step":{"line":88,"prefix":"Then","index":2,"text":"status 422"}},{"result":{"nanos":0,"startTime":1750762838129,"endTime":1750762838129,"millis":0.0,"status":"skipped"},"step":{"line":89,"prefix":"And","index":3,"text":"match response == '#object'"}},{"result":{"nanos":0,"startTime":1750762838129,"endTime":1750762838129,"millis":0.0,"status":"skipped"},"step":{"line":90,"prefix":"And","index":4,"text":"match response.code == '#string'"}},{"result":{"nanos":0,"startTime":1750762838129,"endTime":1750762838129,"millis":0.0,"status":"skipped"},"step":{"line":91,"prefix":"And","index":5,"text":"match response.message == '#string'"}}],"line":96,"description":"","durationMillis":2.163461,"failed":true,"error":"js failed:\n>>>>\n01: ['2.1\/nobelPrize', ''med'', '2030']\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:1:21 Expected comma but found ident\n['2.1\/nobelPrize', ''med'', '2030']\n                     ^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:169)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:165)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1286)\n- com.intuit.karate.core.ScenarioEngine.path(ScenarioEngine.java:387)\n- com.intuit.karate.ScenarioActions.path(ScenarioActions.java:81)\n- java.base\/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\nsrc\/test\/java\/org\/springframework\/api_tests\/ApisNobel\/nobelPrize_category_year_get.feature:86","executorName":"main","name":"Test GET Nobel Prize with Unprocessable Entity","startTime":1750762838126,"refId":"[4.2:96]","endTime":1750762838129,"exampleData":{"category":"'med'","year":"2030"},"exampleIndex":1}],"callDepth":0,"name":"Nobel Prize API Tests","description":"","resultDate":"2025-06-24 11:00:38 AM","durationMillis":20.334581,"passedCount":0}