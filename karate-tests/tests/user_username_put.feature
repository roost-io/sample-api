# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-xcally using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /user/{username}_put for http method type PUT 
# RoostTestHash=1f1b62cfe6
# 
# 

# ********RoostGPT********
Feature: Update User API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { 'Accept': 'application/json' }

  Scenario Outline: Verify successful update of a user
    Given path '/user/' + <username>
    And request
      """
      {
        "id": <id>,
        "username": <usernamePayload>,
        "firstName": <firstName>,
        "lastName": <lastName>,
        "email": <email>,
        "password": <password>,
        "phone": <phone>,
        "userStatus": <userStatus>
      }
      """
    When method PUT
    Then status 200
    And match response == {}

    Examples:
      | read('user_username_put.csv') |

  Scenario Outline: Verify bad request response
    Given path '/user/' + <username>
    And request
      """
      {
        "id": <id>,
        "username": <usernamePayload>,
        "firstName": <firstName>,
        "lastName": <lastName>,
        "email": <email>,
        "password": <password>,
        "phone": <phone>,
        "userStatus": <userStatus>
      }
      """
    When method PUT
    Then status 400
    And match response.error == '#? typeof _ == "string" || _ == null'
    And match response.error.code == '#string'

    Examples:
      | username     | id | usernamePayload | firstName | lastName | email | password | phone | userStatus |
      | 'sampleUser' | 10 | [null]          | 'John'    | 'James'  | null  | '12345'  | null  | [null]     |

  Scenario Outline: Verify user not found response
    Given path '/user/' + <username>
    And request
      """
      {
        "id": <id>,
        "username": <usernamePayload>,
        "firstName": <firstName>,
        "lastName": <lastName>,
        "email": <email>,
        "password": <password>,
        "phone": <phone>,
        "userStatus": <userStatus>
      }
      """
    When method PUT
    Then status 404
    And match response.error == '#? typeof _ == "string" || _ == null'
    And match response.error.code == '#string'

    Examples:
      | username          | id | usernamePayload | firstName | lastName | email                   | password | phone   | userStatus |
      | 'nonExistentUser' | 10 | 'theUser'       | 'John'    | 'James'  | 'nonexistent@email.com' | '12345'  | '12345' | [1]        |

  Scenario: Verify default unexpected error response
    Given path '/user/sampleUser'
    And request
      """
      {
        "id": 10,
        "username": "theUser",
        "firstName": "John",
        "lastName": "James",
        "email": "john@email.com",
        "password": "12345",
        "phone": "12345",
        "userStatus": 1
      }
      """
    When method PUT
    Then assert responseStatus > 299
    And match response.error == '#? typeof _ == "string" || _ == null'
    And match response.error.code == '#string'
