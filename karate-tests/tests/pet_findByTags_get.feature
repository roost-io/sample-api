# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-xcally using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /pet/findByTags_get for http method type GET 
# RoostTestHash=b47488422d
# 
# 

# ********RoostGPT********
Feature: Find Pets By Tags API Tests

  Background:
    """
    * def urlBase = karate.properties['API_HOST']
    * def authToken = karate.properties['AUTH_TOKEN']
    * configure headers = { Authorization: '#(authToken)', Accept: 'application/json' }
    * url urlBase
    """

  Scenario Outline: Find pets by tags successfully
    """
    Given path 'pet/findByTags'
    And param tags = <tags>
    When method GET
    Then status 200
    And match response == '#array'
    And match each response[*].id == '##number'
    And match each response[*].name == '##string'
    And match each response[*].category.id == '##number'
    And match each response[*].category.name == '##string'
    And match each response[*].photoUrls == '#array'
    And match each response[*].photoUrls[*] == '##string'
    And match each response[*].tags == '#array'
    And match each response[*].tags[*].id == '##number'
    And match each response[*].tags[*].name == '##string'
    And match each response[*].status in ['available', 'pending', 'sold']
    And assert karate.sizeOf(response) >= 1
    """

    Examples:
      | tags                  |
      | ['pet']               |
      | ['pet1', 'pet2']      |
      | ['available']         |

  Scenario: Attempt to find pets by tags with invalid value
    """
    Given path 'pet/findByTags'
    And param tags = ['invalidTag']
    When method GET
    Then status 400
    """

  Scenario: Handle unexpected error response
    """
    Given path 'pet/findByTags'
    And param tags = ['unexpected']
    When method GET
    Then assert responseStatus != 200
    And match response.error.code == '##number'
    And match response.error.message == '##string'
    And match response.error.message != null
    """
