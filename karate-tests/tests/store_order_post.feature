# ********RoostGPT********

# Test generated by RoostGPT for test api-testing-xcally using AI Type Azure Open AI and AI Model roostgpt-4-32k
# 
# Feature file generated for /store/order_post for http method type POST 
# RoostTestHash=285bf3afc6
# 
# 

# ********RoostGPT********
Feature: Store Order API Tests

  Background:
    * def urlBase = karate.properties['API_HOST']
    * url urlBase
    * configure headers = { Accept: 'application/json', Authorization: '#(processEnvironment.AUTH_TOKEN)' }

  Scenario Outline: Successful operation - Place an order (Status code 200)
    Given path 'store/order'
    And request
      """
      {
        "id": <id>,
        "petId": <petId>,
        "quantity": <quantity>,
        "shipDate": <shipDate>,
        "status": <status>,
        "complete": <complete>
      }
      """
    When method POST
    Then status 200
    And match response.id == '#number'
    And match response.petId == '#number'
    And match response.quantity == '#number'
    And match response.shipDate == '#string'
    And match response.status == '#string'
    And match response.status in ["placed", "approved", "delivered"]
    And match response.complete == '#boolean'

    Examples:
      | read('store_order_post.csv') |

  Scenario: Invalid input - Status code 400
    Given path 'store/order'
    And request
      """
      {
        "id": null,
        "petId": null,
        "quantity": null,
        "shipDate": null,
        "status": null,
        "complete": null
      }
      """
    When method POST
    Then status 400

  Scenario: Validation exception - Status code 422
    Given path 'store/order'
    And request
      """
      {
        "id": "invalid_id",
        "petId": "invalid_petId",
        "quantity": "invalid_quantity",
        "shipDate": "invalid_date",
        "status": "invalid_status",
        "complete": "invalid_complete"
      }
      """
    When method POST
    Then status 422

  Scenario: Unexpected error - Default response
    Given path 'store/order'
    And request
      """
      {
        "id": -10,
        "petId": -198772,
        "quantity": -7,
        "shipDate": "invalid_date_format",
        "status": "unknown_status",
        "complete": null
      }
      """
    When method POST
    Then status != 200
    And match response.error.code == '#number'
    And match response.error.message == '#string'
